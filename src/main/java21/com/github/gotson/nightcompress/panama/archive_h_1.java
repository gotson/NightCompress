// Generated by jextract

package com.github.gotson.nightcompress.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class archive_h_1 {

    public static MethodHandle rmdir$MH() {
        return RuntimeHelper.requireNonNull(constants$64.const$2,"rmdir");
    }
    /**
     * {@snippet :
     * int rmdir(char*);
     * }
     */
    public static int rmdir(MemorySegment x0) {
        var mh$ = rmdir$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setgid$MH() {
        return RuntimeHelper.requireNonNull(constants$64.const$3,"setgid");
    }
    /**
     * {@snippet :
     * int setgid(gid_t);
     * }
     */
    public static int setgid(int x0) {
        var mh$ = setgid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$64.const$4,"setpgid");
    }
    /**
     * {@snippet :
     * int setpgid(pid_t, pid_t);
     * }
     */
    public static int setpgid(int x0, int x1) {
        var mh$ = setpgid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setsid$MH() {
        return RuntimeHelper.requireNonNull(constants$64.const$5,"setsid");
    }
    /**
     * {@snippet :
     * pid_t setsid();
     * }
     */
    public static int setsid() {
        var mh$ = setsid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setuid$MH() {
        return RuntimeHelper.requireNonNull(constants$65.const$0,"setuid");
    }
    /**
     * {@snippet :
     * int setuid(uid_t);
     * }
     */
    public static int setuid(int x0) {
        var mh$ = setuid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$65.const$1,"sleep");
    }
    /**
     * {@snippet :
     * unsigned int sleep(unsigned int);
     * }
     */
    public static int sleep(int x0) {
        var mh$ = sleep$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sysconf$MH() {
        return RuntimeHelper.requireNonNull(constants$65.const$2,"sysconf");
    }
    /**
     * {@snippet :
     * long sysconf(int);
     * }
     */
    public static long sysconf(int x0) {
        var mh$ = sysconf$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tcgetpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$65.const$3,"tcgetpgrp");
    }
    /**
     * {@snippet :
     * pid_t tcgetpgrp(int);
     * }
     */
    public static int tcgetpgrp(int x0) {
        var mh$ = tcgetpgrp$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tcsetpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$65.const$4,"tcsetpgrp");
    }
    /**
     * {@snippet :
     * int tcsetpgrp(int, pid_t);
     * }
     */
    public static int tcsetpgrp(int x0, int x1) {
        var mh$ = tcsetpgrp$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyname$MH() {
        return RuntimeHelper.requireNonNull(constants$65.const$6,"ttyname");
    }
    /**
     * {@snippet :
     * char* ttyname(int);
     * }
     */
    public static MemorySegment ttyname(int x0) {
        var mh$ = ttyname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyname_r$MH() {
        return RuntimeHelper.requireNonNull(constants$66.const$1,"ttyname_r");
    }
    /**
     * {@snippet :
     * int ttyname_r(int, char*, size_t);
     * }
     */
    public static int ttyname_r(int x0, MemorySegment x1, long x2) {
        var mh$ = ttyname_r$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$66.const$2,"unlink");
    }
    /**
     * {@snippet :
     * int unlink(char*);
     * }
     */
    public static int unlink(MemorySegment x0) {
        var mh$ = unlink$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle write$MH() {
        return RuntimeHelper.requireNonNull(constants$66.const$3,"write");
    }
    /**
     * {@snippet :
     * ssize_t write(int __fd, void* __buf, size_t __nbyte);
     * }
     */
    public static long write(int __fd, MemorySegment __buf, long __nbyte) {
        var mh$ = write$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbyte);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle confstr$MH() {
        return RuntimeHelper.requireNonNull(constants$66.const$4,"confstr");
    }
    /**
     * {@snippet :
     * size_t confstr(int, char*, size_t);
     * }
     */
    public static long confstr(int x0, MemorySegment x1, long x2) {
        var mh$ = confstr$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getopt$MH() {
        return RuntimeHelper.requireNonNull(constants$66.const$5,"getopt");
    }
    /**
     * {@snippet :
     * int getopt(int, char* [], char*);
     * }
     */
    public static int getopt(int x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = getopt$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout optarg$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle optarg$VH() {
        return constants$25.const$1;
    }
    public static MemorySegment optarg$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$67.const$0,"optarg");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * char* optarg;
     * }
     */
    public static MemorySegment optarg$get() {
        return (java.lang.foreign.MemorySegment) constants$25.const$1.get(RuntimeHelper.requireNonNull(constants$67.const$0, "optarg"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * char* optarg;
     * }
     */
    public static void optarg$set(MemorySegment x) {
        constants$25.const$1.set(RuntimeHelper.requireNonNull(constants$67.const$0, "optarg"), x);
    }
    public static MemoryLayout optind$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle optind$VH() {
        return constants$40.const$3;
    }
    public static MemorySegment optind$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$67.const$1,"optind");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int optind;
     * }
     */
    public static int optind$get() {
        return (int) constants$40.const$3.get(RuntimeHelper.requireNonNull(constants$67.const$1, "optind"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int optind;
     * }
     */
    public static void optind$set(int x) {
        constants$40.const$3.set(RuntimeHelper.requireNonNull(constants$67.const$1, "optind"), x);
    }
    public static MemoryLayout opterr$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle opterr$VH() {
        return constants$40.const$3;
    }
    public static MemorySegment opterr$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$67.const$2,"opterr");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int opterr;
     * }
     */
    public static int opterr$get() {
        return (int) constants$40.const$3.get(RuntimeHelper.requireNonNull(constants$67.const$2, "opterr"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int opterr;
     * }
     */
    public static void opterr$set(int x) {
        constants$40.const$3.set(RuntimeHelper.requireNonNull(constants$67.const$2, "opterr"), x);
    }
    public static MemoryLayout optopt$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle optopt$VH() {
        return constants$40.const$3;
    }
    public static MemorySegment optopt$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$67.const$3,"optopt");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int optopt;
     * }
     */
    public static int optopt$get() {
        return (int) constants$40.const$3.get(RuntimeHelper.requireNonNull(constants$67.const$3, "optopt"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int optopt;
     * }
     */
    public static void optopt$set(int x) {
        constants$40.const$3.set(RuntimeHelper.requireNonNull(constants$67.const$3, "optopt"), x);
    }
    public static MethodHandle brk$MH() {
        return RuntimeHelper.requireNonNull(constants$67.const$4,"brk");
    }
    /**
     * {@snippet :
     * void* brk(void*);
     * }
     */
    public static MemorySegment brk(MemorySegment x0) {
        var mh$ = brk$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chroot$MH() {
        return RuntimeHelper.requireNonNull(constants$67.const$5,"chroot");
    }
    /**
     * {@snippet :
     * int chroot(char*);
     * }
     */
    public static int chroot(MemorySegment x0) {
        var mh$ = chroot$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypt$MH() {
        return RuntimeHelper.requireNonNull(constants$68.const$0,"crypt");
    }
    /**
     * {@snippet :
     * char* crypt(char*, char*);
     * }
     */
    public static MemorySegment crypt(MemorySegment x0, MemorySegment x1) {
        var mh$ = crypt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$68.const$2,"encrypt");
    }
    /**
     * {@snippet :
     * void encrypt(char*, int);
     * }
     */
    public static void encrypt(MemorySegment x0, int x1) {
        var mh$ = encrypt$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchdir$MH() {
        return RuntimeHelper.requireNonNull(constants$68.const$3,"fchdir");
    }
    /**
     * {@snippet :
     * int fchdir(int);
     * }
     */
    public static int fchdir(int x0) {
        var mh$ = fchdir$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostid$MH() {
        return RuntimeHelper.requireNonNull(constants$68.const$4,"gethostid");
    }
    /**
     * {@snippet :
     * long gethostid();
     * }
     */
    public static long gethostid() {
        var mh$ = gethostid$MH();
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpgid$MH() {
        return RuntimeHelper.requireNonNull(constants$68.const$5,"getpgid");
    }
    /**
     * {@snippet :
     * pid_t getpgid(pid_t);
     * }
     */
    public static int getpgid(int x0) {
        var mh$ = getpgid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsid$MH() {
        return RuntimeHelper.requireNonNull(constants$69.const$0,"getsid");
    }
    /**
     * {@snippet :
     * pid_t getsid(pid_t);
     * }
     */
    public static int getsid(int x0) {
        var mh$ = getsid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdtablesize$MH() {
        return RuntimeHelper.requireNonNull(constants$69.const$1,"getdtablesize");
    }
    /**
     * {@snippet :
     * int getdtablesize();
     * }
     */
    public static int getdtablesize() {
        var mh$ = getdtablesize$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpagesize$MH() {
        return RuntimeHelper.requireNonNull(constants$69.const$2,"getpagesize");
    }
    /**
     * {@snippet :
     * int getpagesize();
     * }
     */
    public static int getpagesize() {
        var mh$ = getpagesize$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpass$MH() {
        return RuntimeHelper.requireNonNull(constants$69.const$3,"getpass");
    }
    /**
     * {@snippet :
     * char* getpass(char*);
     * }
     */
    public static MemorySegment getpass(MemorySegment x0) {
        var mh$ = getpass$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwd$MH() {
        return RuntimeHelper.requireNonNull(constants$69.const$4,"getwd");
    }
    /**
     * {@snippet :
     * char* getwd(char*);
     * }
     */
    public static MemorySegment getwd(MemorySegment x0) {
        var mh$ = getwd$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lchown$MH() {
        return RuntimeHelper.requireNonNull(constants$69.const$5,"lchown");
    }
    /**
     * {@snippet :
     * int lchown(char*, uid_t, gid_t);
     * }
     */
    public static int lchown(MemorySegment x0, int x1, int x2) {
        var mh$ = lchown$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lockf$MH() {
        return RuntimeHelper.requireNonNull(constants$70.const$1,"lockf");
    }
    /**
     * {@snippet :
     * int lockf(int, int, off_t);
     * }
     */
    public static int lockf(int x0, int x1, long x2) {
        var mh$ = lockf$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nice$MH() {
        return RuntimeHelper.requireNonNull(constants$70.const$2,"nice");
    }
    /**
     * {@snippet :
     * int nice(int);
     * }
     */
    public static int nice(int x0) {
        var mh$ = nice$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pread$MH() {
        return RuntimeHelper.requireNonNull(constants$70.const$4,"pread");
    }
    /**
     * {@snippet :
     * ssize_t pread(int __fd, void* __buf, size_t __nbyte, off_t __offset);
     * }
     */
    public static long pread(int __fd, MemorySegment __buf, long __nbyte, long __offset) {
        var mh$ = pread$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbyte, __offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$70.const$5,"pwrite");
    }
    /**
     * {@snippet :
     * ssize_t pwrite(int __fd, void* __buf, size_t __nbyte, off_t __offset);
     * }
     */
    public static long pwrite(int __fd, MemorySegment __buf, long __nbyte, long __offset) {
        var mh$ = pwrite$MH();
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbyte, __offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$71.const$0,"sbrk");
    }
    /**
     * {@snippet :
     * void* sbrk(int);
     * }
     */
    public static MemorySegment sbrk(int x0) {
        var mh$ = sbrk$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setpgrp$MH() {
        return RuntimeHelper.requireNonNull(constants$71.const$1,"setpgrp");
    }
    /**
     * {@snippet :
     * pid_t setpgrp();
     * }
     */
    public static int setpgrp() {
        var mh$ = setpgrp$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setregid$MH() {
        return RuntimeHelper.requireNonNull(constants$71.const$2,"setregid");
    }
    /**
     * {@snippet :
     * int setregid(gid_t, gid_t);
     * }
     */
    public static int setregid(int x0, int x1) {
        var mh$ = setregid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setreuid$MH() {
        return RuntimeHelper.requireNonNull(constants$71.const$3,"setreuid");
    }
    /**
     * {@snippet :
     * int setreuid(uid_t, uid_t);
     * }
     */
    public static int setreuid(int x0, int x1) {
        var mh$ = setreuid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swab$MH() {
        return RuntimeHelper.requireNonNull(constants$71.const$5,"swab");
    }
    /**
     * {@snippet :
     * void swab(void*, void*, ssize_t);
     * }
     */
    public static void swab(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = swab$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sync$MH() {
        return RuntimeHelper.requireNonNull(constants$72.const$0,"sync");
    }
    /**
     * {@snippet :
     * void sync();
     * }
     */
    public static void sync() {
        var mh$ = sync$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$72.const$2,"truncate");
    }
    /**
     * {@snippet :
     * int truncate(char*, off_t);
     * }
     */
    public static int truncate(MemorySegment x0, long x1) {
        var mh$ = truncate$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ualarm$MH() {
        return RuntimeHelper.requireNonNull(constants$72.const$3,"ualarm");
    }
    /**
     * {@snippet :
     * useconds_t ualarm(useconds_t, useconds_t);
     * }
     */
    public static int ualarm(int x0, int x1) {
        var mh$ = ualarm$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle usleep$MH() {
        return RuntimeHelper.requireNonNull(constants$72.const$4,"usleep");
    }
    /**
     * {@snippet :
     * int usleep(useconds_t);
     * }
     */
    public static int usleep(int x0) {
        var mh$ = usleep$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfork$MH() {
        return RuntimeHelper.requireNonNull(constants$72.const$5,"vfork");
    }
    /**
     * {@snippet :
     * int vfork();
     * }
     */
    public static int vfork() {
        var mh$ = vfork$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsync$MH() {
        return RuntimeHelper.requireNonNull(constants$73.const$0,"fsync");
    }
    /**
     * {@snippet :
     * int fsync(int);
     * }
     */
    public static int fsync(int x0) {
        var mh$ = fsync$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftruncate$MH() {
        return RuntimeHelper.requireNonNull(constants$73.const$2,"ftruncate");
    }
    /**
     * {@snippet :
     * int ftruncate(int, off_t);
     * }
     */
    public static int ftruncate(int x0, long x1) {
        var mh$ = ftruncate$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getlogin_r$MH() {
        return RuntimeHelper.requireNonNull(constants$73.const$3,"getlogin_r");
    }
    /**
     * {@snippet :
     * int getlogin_r(char*, size_t);
     * }
     */
    public static int getlogin_r(MemorySegment x0, long x1) {
        var mh$ = getlogin_r$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fchown$MH() {
        return RuntimeHelper.requireNonNull(constants$73.const$5,"fchown");
    }
    /**
     * {@snippet :
     * int fchown(int, uid_t, gid_t);
     * }
     */
    public static int fchown(int x0, int x1, int x2) {
        var mh$ = fchown$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostname$MH() {
        return RuntimeHelper.requireNonNull(constants$74.const$0,"gethostname");
    }
    /**
     * {@snippet :
     * int gethostname(char*, size_t);
     * }
     */
    public static int gethostname(MemorySegment x0, long x1) {
        var mh$ = gethostname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle readlink$MH() {
        return RuntimeHelper.requireNonNull(constants$74.const$2,"readlink");
    }
    /**
     * {@snippet :
     * ssize_t readlink(char*, char*, size_t);
     * }
     */
    public static long readlink(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = readlink$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setegid$MH() {
        return RuntimeHelper.requireNonNull(constants$74.const$3,"setegid");
    }
    /**
     * {@snippet :
     * int setegid(gid_t);
     * }
     */
    public static int setegid(int x0) {
        var mh$ = setegid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle seteuid$MH() {
        return RuntimeHelper.requireNonNull(constants$74.const$4,"seteuid");
    }
    /**
     * {@snippet :
     * int seteuid(uid_t);
     * }
     */
    public static int seteuid(int x0) {
        var mh$ = seteuid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$74.const$5,"symlink");
    }
    /**
     * {@snippet :
     * int symlink(char*, char*);
     * }
     */
    public static int symlink(MemorySegment x0, MemorySegment x1) {
        var mh$ = symlink$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __darwin_check_fd_set_overflow$MH() {
        return RuntimeHelper.requireNonNull(constants$75.const$1,"__darwin_check_fd_set_overflow");
    }
    /**
     * {@snippet :
     * int __darwin_check_fd_set_overflow(int, void*, int);
     * }
     */
    public static int __darwin_check_fd_set_overflow(int x0, MemorySegment x1, int x2) {
        var mh$ = __darwin_check_fd_set_overflow$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef int suseconds_t;
     * }
     */
    public static final OfInt suseconds_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int sigset_t;
     * }
     */
    public static final OfInt sigset_t = JAVA_INT;
    public static MethodHandle pselect$MH() {
        return RuntimeHelper.requireNonNull(constants$75.const$6,"pselect");
    }
    /**
     * {@snippet :
     * int pselect(int, fd_set*, fd_set*, fd_set*, struct timespec*, const sigset_t*);
     * }
     */
    public static int pselect(int x0, MemorySegment x1, MemorySegment x2, MemorySegment x3, MemorySegment x4, MemorySegment x5) {
        var mh$ = pselect$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle select$MH() {
        return RuntimeHelper.requireNonNull(constants$76.const$1,"select");
    }
    /**
     * {@snippet :
     * int select(int, fd_set*, fd_set*, fd_set*, struct timeval*);
     * }
     */
    public static int select(int x0, MemorySegment x1, MemorySegment x2, MemorySegment x3, MemorySegment x4) {
        var mh$ = select$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$76.const$2,"_Exit");
    }
    /**
     * {@snippet :
     * void _Exit(int);
     * }
     */
    public static void _Exit(int x0) {
        var mh$ = _Exit$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle accessx_np$MH() {
        return RuntimeHelper.requireNonNull(constants$76.const$4,"accessx_np");
    }
    /**
     * {@snippet :
     * int accessx_np(struct accessx_descriptor*, size_t, int*, uid_t);
     * }
     */
    public static int accessx_np(MemorySegment x0, long x1, MemorySegment x2, int x3) {
        var mh$ = accessx_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle acct$MH() {
        return RuntimeHelper.requireNonNull(constants$76.const$5,"acct");
    }
    /**
     * {@snippet :
     * int acct(char*);
     * }
     */
    public static int acct(MemorySegment x0) {
        var mh$ = acct$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle add_profil$MH() {
        return RuntimeHelper.requireNonNull(constants$77.const$1,"add_profil");
    }
    /**
     * {@snippet :
     * int add_profil(char*, size_t, unsigned long, unsigned int);
     * }
     */
    public static int add_profil(MemorySegment x0, long x1, long x2, int x3) {
        var mh$ = add_profil$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle endusershell$MH() {
        return RuntimeHelper.requireNonNull(constants$77.const$2,"endusershell");
    }
    /**
     * {@snippet :
     * void endusershell();
     * }
     */
    public static void endusershell() {
        var mh$ = endusershell$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execvP$MH() {
        return RuntimeHelper.requireNonNull(constants$77.const$3,"execvP");
    }
    /**
     * {@snippet :
     * int execvP(char* __file, char* __searchpath, char** __argv);
     * }
     */
    public static int execvP(MemorySegment __file, MemorySegment __searchpath, MemorySegment __argv) {
        var mh$ = execvP$MH();
        try {
            return (int)mh$.invokeExact(__file, __searchpath, __argv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflagstostr$MH() {
        return RuntimeHelper.requireNonNull(constants$77.const$5,"fflagstostr");
    }
    /**
     * {@snippet :
     * char* fflagstostr(unsigned long);
     * }
     */
    public static MemorySegment fflagstostr(long x0) {
        var mh$ = fflagstostr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdomainname$MH() {
        return RuntimeHelper.requireNonNull(constants$78.const$0,"getdomainname");
    }
    /**
     * {@snippet :
     * int getdomainname(char*, int);
     * }
     */
    public static int getdomainname(MemorySegment x0, int x1) {
        var mh$ = getdomainname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getgrouplist$MH() {
        return RuntimeHelper.requireNonNull(constants$78.const$2,"getgrouplist");
    }
    /**
     * {@snippet :
     * int getgrouplist(char*, int, int*, int*);
     * }
     */
    public static int getgrouplist(MemorySegment x0, int x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = getgrouplist$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gethostuuid$MH() {
        return RuntimeHelper.requireNonNull(constants$78.const$3,"gethostuuid");
    }
    /**
     * {@snippet :
     * int gethostuuid(uuid_t, struct timespec*);
     * }
     */
    public static int gethostuuid(MemorySegment x0, MemorySegment x1) {
        var mh$ = gethostuuid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getmode$MH() {
        return RuntimeHelper.requireNonNull(constants$78.const$5,"getmode");
    }
    /**
     * {@snippet :
     * mode_t getmode(void*, mode_t);
     * }
     */
    public static short getmode(MemorySegment x0, short x1) {
        var mh$ = getmode$MH();
        try {
            return (short)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpeereid$MH() {
        return RuntimeHelper.requireNonNull(constants$79.const$0,"getpeereid");
    }
    /**
     * {@snippet :
     * int getpeereid(int, uid_t*, gid_t*);
     * }
     */
    public static int getpeereid(int x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = getpeereid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getsgroups_np$MH() {
        return RuntimeHelper.requireNonNull(constants$79.const$1,"getsgroups_np");
    }
    /**
     * {@snippet :
     * int getsgroups_np(int*, uuid_t);
     * }
     */
    public static int getsgroups_np(MemorySegment x0, MemorySegment x1) {
        var mh$ = getsgroups_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getusershell$MH() {
        return RuntimeHelper.requireNonNull(constants$79.const$2,"getusershell");
    }
    /**
     * {@snippet :
     * char* getusershell();
     * }
     */
    public static MemorySegment getusershell() {
        var mh$ = getusershell$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwgroups_np$MH() {
        return RuntimeHelper.requireNonNull(constants$79.const$3,"getwgroups_np");
    }
    /**
     * {@snippet :
     * int getwgroups_np(int*, uuid_t);
     * }
     */
    public static int getwgroups_np(MemorySegment x0, MemorySegment x1) {
        var mh$ = getwgroups_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle initgroups$MH() {
        return RuntimeHelper.requireNonNull(constants$79.const$4,"initgroups");
    }
    /**
     * {@snippet :
     * int initgroups(char*, int);
     * }
     */
    public static int initgroups(MemorySegment x0, int x1) {
        var mh$ = initgroups$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle issetugid$MH() {
        return RuntimeHelper.requireNonNull(constants$79.const$5,"issetugid");
    }
    /**
     * {@snippet :
     * int issetugid();
     * }
     */
    public static int issetugid() {
        var mh$ = issetugid$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkdtemp$MH() {
        return RuntimeHelper.requireNonNull(constants$80.const$0,"mkdtemp");
    }
    /**
     * {@snippet :
     * char* mkdtemp(char*);
     * }
     */
    public static MemorySegment mkdtemp(MemorySegment x0) {
        var mh$ = mkdtemp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkpath_np$MH() {
        return RuntimeHelper.requireNonNull(constants$80.const$1,"mkpath_np");
    }
    /**
     * {@snippet :
     * int mkpath_np(char* path, mode_t omode);
     * }
     */
    public static int mkpath_np(MemorySegment path, short omode) {
        var mh$ = mkpath_np$MH();
        try {
            return (int)mh$.invokeExact(path, omode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkpathat_np$MH() {
        return RuntimeHelper.requireNonNull(constants$80.const$2,"mkpathat_np");
    }
    /**
     * {@snippet :
     * int mkpathat_np(int dfd, char* path, mode_t omode);
     * }
     */
    public static int mkpathat_np(int dfd, MemorySegment path, short omode) {
        var mh$ = mkpathat_np$MH();
        try {
            return (int)mh$.invokeExact(dfd, path, omode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkstemp$MH() {
        return RuntimeHelper.requireNonNull(constants$80.const$3,"mkstemp");
    }
    /**
     * {@snippet :
     * int mkstemp(char*);
     * }
     */
    public static int mkstemp(MemorySegment x0) {
        var mh$ = mkstemp$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkstemps$MH() {
        return RuntimeHelper.requireNonNull(constants$80.const$4,"mkstemps");
    }
    /**
     * {@snippet :
     * int mkstemps(char*, int);
     * }
     */
    public static int mkstemps(MemorySegment x0, int x1) {
        var mh$ = mkstemps$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mktemp$MH() {
        return RuntimeHelper.requireNonNull(constants$80.const$5,"mktemp");
    }
    /**
     * {@snippet :
     * char* mktemp(char*);
     * }
     */
    public static MemorySegment mktemp(MemorySegment x0) {
        var mh$ = mktemp$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkostemp$MH() {
        return RuntimeHelper.requireNonNull(constants$81.const$0,"mkostemp");
    }
    /**
     * {@snippet :
     * int mkostemp(char* path, int oflags);
     * }
     */
    public static int mkostemp(MemorySegment path, int oflags) {
        var mh$ = mkostemp$MH();
        try {
            return (int)mh$.invokeExact(path, oflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkostemps$MH() {
        return RuntimeHelper.requireNonNull(constants$81.const$1,"mkostemps");
    }
    /**
     * {@snippet :
     * int mkostemps(char* path, int slen, int oflags);
     * }
     */
    public static int mkostemps(MemorySegment path, int slen, int oflags) {
        var mh$ = mkostemps$MH();
        try {
            return (int)mh$.invokeExact(path, slen, oflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkstemp_dprotected_np$MH() {
        return RuntimeHelper.requireNonNull(constants$81.const$2,"mkstemp_dprotected_np");
    }
    /**
     * {@snippet :
     * int mkstemp_dprotected_np(char* path, int dpclass, int dpflags);
     * }
     */
    public static int mkstemp_dprotected_np(MemorySegment path, int dpclass, int dpflags) {
        var mh$ = mkstemp_dprotected_np$MH();
        try {
            return (int)mh$.invokeExact(path, dpclass, dpflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkdtempat_np$MH() {
        return RuntimeHelper.requireNonNull(constants$81.const$3,"mkdtempat_np");
    }
    /**
     * {@snippet :
     * char* mkdtempat_np(int dfd, char* path);
     * }
     */
    public static MemorySegment mkdtempat_np(int dfd, MemorySegment path) {
        var mh$ = mkdtempat_np$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(dfd, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkstempsat_np$MH() {
        return RuntimeHelper.requireNonNull(constants$81.const$4,"mkstempsat_np");
    }
    /**
     * {@snippet :
     * int mkstempsat_np(int dfd, char* path, int slen);
     * }
     */
    public static int mkstempsat_np(int dfd, MemorySegment path, int slen) {
        var mh$ = mkstempsat_np$MH();
        try {
            return (int)mh$.invokeExact(dfd, path, slen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkostempsat_np$MH() {
        return RuntimeHelper.requireNonNull(constants$81.const$5,"mkostempsat_np");
    }
    /**
     * {@snippet :
     * int mkostempsat_np(int dfd, char* path, int slen, int oflags);
     * }
     */
    public static int mkostempsat_np(int dfd, MemorySegment path, int slen, int oflags) {
        var mh$ = mkostempsat_np$MH();
        try {
            return (int)mh$.invokeExact(dfd, path, slen, oflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle nfssvc$MH() {
        return RuntimeHelper.requireNonNull(constants$82.const$0,"nfssvc");
    }
    /**
     * {@snippet :
     * int nfssvc(int, void*);
     * }
     */
    public static int nfssvc(int x0, MemorySegment x1) {
        var mh$ = nfssvc$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle profil$MH() {
        return RuntimeHelper.requireNonNull(constants$82.const$1,"profil");
    }
    /**
     * {@snippet :
     * int profil(char*, size_t, unsigned long, unsigned int);
     * }
     */
    public static int profil(MemorySegment x0, long x1, long x2, int x3) {
        var mh$ = profil$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setugid_np$MH() {
        return RuntimeHelper.requireNonNull(constants$82.const$2,"pthread_setugid_np");
    }
    /**
     * {@snippet :
     * int pthread_setugid_np(uid_t, gid_t);
     * }
     */
    public static int pthread_setugid_np(int x0, int x1) {
        var mh$ = pthread_setugid_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_getugid_np$MH() {
        return RuntimeHelper.requireNonNull(constants$82.const$3,"pthread_getugid_np");
    }
    /**
     * {@snippet :
     * int pthread_getugid_np(uid_t*, gid_t*);
     * }
     */
    public static int pthread_getugid_np(MemorySegment x0, MemorySegment x1) {
        var mh$ = pthread_getugid_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle reboot$MH() {
        return RuntimeHelper.requireNonNull(constants$82.const$4,"reboot");
    }
    /**
     * {@snippet :
     * int reboot(int);
     * }
     */
    public static int reboot(int x0) {
        var mh$ = reboot$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle revoke$MH() {
        return RuntimeHelper.requireNonNull(constants$82.const$5,"revoke");
    }
    /**
     * {@snippet :
     * int revoke(char*);
     * }
     */
    public static int revoke(MemorySegment x0) {
        var mh$ = revoke$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rcmd$MH() {
        return RuntimeHelper.requireNonNull(constants$83.const$1,"rcmd");
    }
    /**
     * {@snippet :
     * int rcmd(char**, int, char*, char*, char*, int*);
     * }
     */
    public static int rcmd(MemorySegment x0, int x1, MemorySegment x2, MemorySegment x3, MemorySegment x4, MemorySegment x5) {
        var mh$ = rcmd$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rcmd_af$MH() {
        return RuntimeHelper.requireNonNull(constants$83.const$3,"rcmd_af");
    }
    /**
     * {@snippet :
     * int rcmd_af(char**, int, char*, char*, char*, int*, int);
     * }
     */
    public static int rcmd_af(MemorySegment x0, int x1, MemorySegment x2, MemorySegment x3, MemorySegment x4, MemorySegment x5, int x6) {
        var mh$ = rcmd_af$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rresvport$MH() {
        return RuntimeHelper.requireNonNull(constants$83.const$4,"rresvport");
    }
    /**
     * {@snippet :
     * int rresvport(int*);
     * }
     */
    public static int rresvport(MemorySegment x0) {
        var mh$ = rresvport$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rresvport_af$MH() {
        return RuntimeHelper.requireNonNull(constants$83.const$5,"rresvport_af");
    }
    /**
     * {@snippet :
     * int rresvport_af(int*, int);
     * }
     */
    public static int rresvport_af(MemorySegment x0, int x1) {
        var mh$ = rresvport_af$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iruserok$MH() {
        return RuntimeHelper.requireNonNull(constants$84.const$1,"iruserok");
    }
    /**
     * {@snippet :
     * int iruserok(unsigned long, int, char*, char*);
     * }
     */
    public static int iruserok(long x0, int x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = iruserok$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle iruserok_sa$MH() {
        return RuntimeHelper.requireNonNull(constants$84.const$3,"iruserok_sa");
    }
    /**
     * {@snippet :
     * int iruserok_sa(void*, int, int, char*, char*);
     * }
     */
    public static int iruserok_sa(MemorySegment x0, int x1, int x2, MemorySegment x3, MemorySegment x4) {
        var mh$ = iruserok_sa$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ruserok$MH() {
        return RuntimeHelper.requireNonNull(constants$84.const$4,"ruserok");
    }
    /**
     * {@snippet :
     * int ruserok(char*, int, char*, char*);
     * }
     */
    public static int ruserok(MemorySegment x0, int x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = ruserok$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setdomainname$MH() {
        return RuntimeHelper.requireNonNull(constants$84.const$5,"setdomainname");
    }
    /**
     * {@snippet :
     * int setdomainname(char*, int);
     * }
     */
    public static int setdomainname(MemorySegment x0, int x1) {
        var mh$ = setdomainname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setgroups$MH() {
        return RuntimeHelper.requireNonNull(constants$85.const$0,"setgroups");
    }
    /**
     * {@snippet :
     * int setgroups(int, const gid_t*);
     * }
     */
    public static int setgroups(int x0, MemorySegment x1) {
        var mh$ = setgroups$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sethostid$MH() {
        return RuntimeHelper.requireNonNull(constants$85.const$2,"sethostid");
    }
    /**
     * {@snippet :
     * void sethostid(long);
     * }
     */
    public static void sethostid(long x0) {
        var mh$ = sethostid$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sethostname$MH() {
        return RuntimeHelper.requireNonNull(constants$85.const$3,"sethostname");
    }
    /**
     * {@snippet :
     * int sethostname(char*, int);
     * }
     */
    public static int sethostname(MemorySegment x0, int x1) {
        var mh$ = sethostname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setkey$MH() {
        return RuntimeHelper.requireNonNull(constants$85.const$4,"setkey");
    }
    /**
     * {@snippet :
     * void setkey(char*);
     * }
     */
    public static void setkey(MemorySegment x0) {
        var mh$ = setkey$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setlogin$MH() {
        return RuntimeHelper.requireNonNull(constants$85.const$5,"setlogin");
    }
    /**
     * {@snippet :
     * int setlogin(char*);
     * }
     */
    public static int setlogin(MemorySegment x0) {
        var mh$ = setlogin$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setmode$MH() {
        return RuntimeHelper.requireNonNull(constants$86.const$0,"setmode");
    }
    /**
     * {@snippet :
     * void* setmode(char*);
     * }
     */
    public static MemorySegment setmode(MemorySegment x0) {
        var mh$ = setmode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setrgid$MH() {
        return RuntimeHelper.requireNonNull(constants$86.const$1,"setrgid");
    }
    /**
     * {@snippet :
     * int setrgid(gid_t);
     * }
     */
    public static int setrgid(int x0) {
        var mh$ = setrgid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setruid$MH() {
        return RuntimeHelper.requireNonNull(constants$86.const$2,"setruid");
    }
    /**
     * {@snippet :
     * int setruid(uid_t);
     * }
     */
    public static int setruid(int x0) {
        var mh$ = setruid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setsgroups_np$MH() {
        return RuntimeHelper.requireNonNull(constants$86.const$3,"setsgroups_np");
    }
    /**
     * {@snippet :
     * int setsgroups_np(int, const uuid_t);
     * }
     */
    public static int setsgroups_np(int x0, MemorySegment x1) {
        var mh$ = setsgroups_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setusershell$MH() {
        return RuntimeHelper.requireNonNull(constants$86.const$4,"setusershell");
    }
    /**
     * {@snippet :
     * void setusershell();
     * }
     */
    public static void setusershell() {
        var mh$ = setusershell$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setwgroups_np$MH() {
        return RuntimeHelper.requireNonNull(constants$86.const$5,"setwgroups_np");
    }
    /**
     * {@snippet :
     * int setwgroups_np(int, const uuid_t);
     * }
     */
    public static int setwgroups_np(int x0, MemorySegment x1) {
        var mh$ = setwgroups_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtofflags$MH() {
        return RuntimeHelper.requireNonNull(constants$87.const$0,"strtofflags");
    }
    /**
     * {@snippet :
     * int strtofflags(char**, unsigned long*, unsigned long*);
     * }
     */
    public static int strtofflags(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = strtofflags$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swapon$MH() {
        return RuntimeHelper.requireNonNull(constants$87.const$1,"swapon");
    }
    /**
     * {@snippet :
     * int swapon(char*);
     * }
     */
    public static int swapon(MemorySegment x0) {
        var mh$ = swapon$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ttyslot$MH() {
        return RuntimeHelper.requireNonNull(constants$87.const$2,"ttyslot");
    }
    /**
     * {@snippet :
     * int ttyslot();
     * }
     */
    public static int ttyslot() {
        var mh$ = ttyslot$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle undelete$MH() {
        return RuntimeHelper.requireNonNull(constants$87.const$3,"undelete");
    }
    /**
     * {@snippet :
     * int undelete(char*);
     * }
     */
    public static int undelete(MemorySegment x0) {
        var mh$ = undelete$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unwhiteout$MH() {
        return RuntimeHelper.requireNonNull(constants$87.const$4,"unwhiteout");
    }
    /**
     * {@snippet :
     * int unwhiteout(char*);
     * }
     */
    public static int unwhiteout(MemorySegment x0) {
        var mh$ = unwhiteout$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle valloc$MH() {
        return RuntimeHelper.requireNonNull(constants$87.const$5,"valloc");
    }
    /**
     * {@snippet :
     * void* valloc(size_t);
     * }
     */
    public static MemorySegment valloc(long x0) {
        var mh$ = valloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle syscall$MH() {
        return RuntimeHelper.requireNonNull(constants$88.const$0,"syscall");
    }
    /**
     * {@snippet :
     * int syscall(int,...);
     * }
     */
    public static int syscall(int x0, Object... x1) {
        var mh$ = syscall$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout suboptarg$LAYOUT() {
        return RuntimeHelper.POINTER;
    }
    public static VarHandle suboptarg$VH() {
        return constants$25.const$1;
    }
    public static MemorySegment suboptarg$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$88.const$1,"suboptarg");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * char* suboptarg;
     * }
     */
    public static MemorySegment suboptarg$get() {
        return (java.lang.foreign.MemorySegment) constants$25.const$1.get(RuntimeHelper.requireNonNull(constants$88.const$1, "suboptarg"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * char* suboptarg;
     * }
     */
    public static void suboptarg$set(MemorySegment x) {
        constants$25.const$1.set(RuntimeHelper.requireNonNull(constants$88.const$1, "suboptarg"), x);
    }
    public static MethodHandle getsubopt$MH() {
        return RuntimeHelper.requireNonNull(constants$88.const$2,"getsubopt");
    }
    /**
     * {@snippet :
     * int getsubopt(char**, char**, char**);
     * }
     */
    public static int getsubopt(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = getsubopt$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetattrlist$MH() {
        return RuntimeHelper.requireNonNull(constants$88.const$4,"fgetattrlist");
    }
    /**
     * {@snippet :
     * int fgetattrlist(int, void*, void*, size_t, unsigned int);
     * }
     */
    public static int fgetattrlist(int x0, MemorySegment x1, MemorySegment x2, long x3, int x4) {
        var mh$ = fgetattrlist$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetattrlist$MH() {
        return RuntimeHelper.requireNonNull(constants$88.const$5,"fsetattrlist");
    }
    /**
     * {@snippet :
     * int fsetattrlist(int, void*, void*, size_t, unsigned int);
     * }
     */
    public static int fsetattrlist(int x0, MemorySegment x1, MemorySegment x2, long x3, int x4) {
        var mh$ = fsetattrlist$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getattrlist$MH() {
        return RuntimeHelper.requireNonNull(constants$89.const$1,"getattrlist");
    }
    /**
     * {@snippet :
     * int getattrlist(char*, void*, void*, size_t, unsigned int);
     * }
     */
    public static int getattrlist(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3, int x4) {
        var mh$ = getattrlist$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setattrlist$MH() {
        return RuntimeHelper.requireNonNull(constants$89.const$2,"setattrlist");
    }
    /**
     * {@snippet :
     * int setattrlist(char*, void*, void*, size_t, unsigned int);
     * }
     */
    public static int setattrlist(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3, int x4) {
        var mh$ = setattrlist$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exchangedata$MH() {
        return RuntimeHelper.requireNonNull(constants$89.const$3,"exchangedata");
    }
    /**
     * {@snippet :
     * int exchangedata(char*, char*, unsigned int);
     * }
     */
    public static int exchangedata(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = exchangedata$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdirentriesattr$MH() {
        return RuntimeHelper.requireNonNull(constants$89.const$5,"getdirentriesattr");
    }
    /**
     * {@snippet :
     * int getdirentriesattr(int, void*, void*, size_t, unsigned int*, unsigned int*, unsigned int*, unsigned int);
     * }
     */
    public static int getdirentriesattr(int x0, MemorySegment x1, MemorySegment x2, long x3, MemorySegment x4, MemorySegment x5, MemorySegment x6, int x7) {
        var mh$ = getdirentriesattr$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle searchfs$MH() {
        return RuntimeHelper.requireNonNull(constants$90.const$1,"searchfs");
    }
    /**
     * {@snippet :
     * int searchfs(char*, struct fssearchblock*, unsigned long*, unsigned int, unsigned int, struct searchstate*);
     * }
     */
    public static int searchfs(MemorySegment x0, MemorySegment x1, MemorySegment x2, int x3, int x4, MemorySegment x5) {
        var mh$ = searchfs$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsctl$MH() {
        return RuntimeHelper.requireNonNull(constants$90.const$2,"fsctl");
    }
    /**
     * {@snippet :
     * int fsctl(char*, unsigned long, void*, unsigned int);
     * }
     */
    public static int fsctl(MemorySegment x0, long x1, MemorySegment x2, int x3) {
        var mh$ = fsctl$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ffsctl$MH() {
        return RuntimeHelper.requireNonNull(constants$90.const$4,"ffsctl");
    }
    /**
     * {@snippet :
     * int ffsctl(int, unsigned long, void*, unsigned int);
     * }
     */
    public static int ffsctl(int x0, long x1, MemorySegment x2, int x3) {
        var mh$ = ffsctl$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsync_volume_np$MH() {
        return RuntimeHelper.requireNonNull(constants$90.const$5,"fsync_volume_np");
    }
    /**
     * {@snippet :
     * int fsync_volume_np(int, int);
     * }
     */
    public static int fsync_volume_np(int x0, int x1) {
        var mh$ = fsync_volume_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sync_volume_np$MH() {
        return RuntimeHelper.requireNonNull(constants$91.const$0,"sync_volume_np");
    }
    /**
     * {@snippet :
     * int sync_volume_np(char*, int);
     * }
     */
    public static int sync_volume_np(MemorySegment x0, int x1) {
        var mh$ = sync_volume_np$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout optreset$LAYOUT() {
        return JAVA_INT;
    }
    public static VarHandle optreset$VH() {
        return constants$40.const$3;
    }
    public static MemorySegment optreset$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$91.const$1,"optreset");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * int optreset;
     * }
     */
    public static int optreset$get() {
        return (int) constants$40.const$3.get(RuntimeHelper.requireNonNull(constants$91.const$1, "optreset"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * int optreset;
     * }
     */
    public static void optreset$set(int x) {
        constants$40.const$3.set(RuntimeHelper.requireNonNull(constants$91.const$1, "optreset"), x);
    }
    /**
     * {@snippet :
     * typedef long long la_int64_t;
     * }
     */
    public static final OfLong la_int64_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long la_ssize_t;
     * }
     */
    public static final OfLong la_ssize_t = JAVA_LONG;
    public static MethodHandle archive_version_number$MH() {
        return RuntimeHelper.requireNonNull(constants$91.const$2,"archive_version_number");
    }
    /**
     * {@snippet :
     * int archive_version_number();
     * }
     */
    public static int archive_version_number() {
        var mh$ = archive_version_number$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_version_string$MH() {
        return RuntimeHelper.requireNonNull(constants$91.const$3,"archive_version_string");
    }
    /**
     * {@snippet :
     * char* archive_version_string();
     * }
     */
    public static MemorySegment archive_version_string() {
        var mh$ = archive_version_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_version_details$MH() {
        return RuntimeHelper.requireNonNull(constants$91.const$4,"archive_version_details");
    }
    /**
     * {@snippet :
     * char* archive_version_details();
     * }
     */
    public static MemorySegment archive_version_details() {
        var mh$ = archive_version_details$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_zlib_version$MH() {
        return RuntimeHelper.requireNonNull(constants$91.const$5,"archive_zlib_version");
    }
    /**
     * {@snippet :
     * char* archive_zlib_version();
     * }
     */
    public static MemorySegment archive_zlib_version() {
        var mh$ = archive_zlib_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_liblzma_version$MH() {
        return RuntimeHelper.requireNonNull(constants$92.const$0,"archive_liblzma_version");
    }
    /**
     * {@snippet :
     * char* archive_liblzma_version();
     * }
     */
    public static MemorySegment archive_liblzma_version() {
        var mh$ = archive_liblzma_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_bzlib_version$MH() {
        return RuntimeHelper.requireNonNull(constants$92.const$1,"archive_bzlib_version");
    }
    /**
     * {@snippet :
     * char* archive_bzlib_version();
     * }
     */
    public static MemorySegment archive_bzlib_version() {
        var mh$ = archive_bzlib_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_liblz4_version$MH() {
        return RuntimeHelper.requireNonNull(constants$92.const$2,"archive_liblz4_version");
    }
    /**
     * {@snippet :
     * char* archive_liblz4_version();
     * }
     */
    public static MemorySegment archive_liblz4_version() {
        var mh$ = archive_liblz4_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_libzstd_version$MH() {
        return RuntimeHelper.requireNonNull(constants$92.const$3,"archive_libzstd_version");
    }
    /**
     * {@snippet :
     * char* archive_libzstd_version();
     * }
     */
    public static MemorySegment archive_libzstd_version() {
        var mh$ = archive_libzstd_version$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_new$MH() {
        return RuntimeHelper.requireNonNull(constants$95.const$4,"archive_read_new");
    }
    /**
     * {@snippet :
     * struct archive* archive_read_new();
     * }
     */
    public static MemorySegment archive_read_new() {
        var mh$ = archive_read_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_all$MH() {
        return RuntimeHelper.requireNonNull(constants$95.const$5,"archive_read_support_compression_all");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_all(struct archive*);
     * }
     */
    public static int archive_read_support_compression_all(MemorySegment x0) {
        var mh$ = archive_read_support_compression_all$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_bzip2$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$0,"archive_read_support_compression_bzip2");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_bzip2(struct archive*);
     * }
     */
    public static int archive_read_support_compression_bzip2(MemorySegment x0) {
        var mh$ = archive_read_support_compression_bzip2$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_compress$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$1,"archive_read_support_compression_compress");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_compress(struct archive*);
     * }
     */
    public static int archive_read_support_compression_compress(MemorySegment x0) {
        var mh$ = archive_read_support_compression_compress$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_gzip$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$2,"archive_read_support_compression_gzip");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_gzip(struct archive*);
     * }
     */
    public static int archive_read_support_compression_gzip(MemorySegment x0) {
        var mh$ = archive_read_support_compression_gzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_lzip$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$3,"archive_read_support_compression_lzip");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_lzip(struct archive*);
     * }
     */
    public static int archive_read_support_compression_lzip(MemorySegment x0) {
        var mh$ = archive_read_support_compression_lzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_lzma$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$4,"archive_read_support_compression_lzma");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_lzma(struct archive*);
     * }
     */
    public static int archive_read_support_compression_lzma(MemorySegment x0) {
        var mh$ = archive_read_support_compression_lzma$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_none$MH() {
        return RuntimeHelper.requireNonNull(constants$96.const$5,"archive_read_support_compression_none");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_none(struct archive*);
     * }
     */
    public static int archive_read_support_compression_none(MemorySegment x0) {
        var mh$ = archive_read_support_compression_none$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_program$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$0,"archive_read_support_compression_program");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_program(struct archive*, char* command);
     * }
     */
    public static int archive_read_support_compression_program(MemorySegment x0, MemorySegment command) {
        var mh$ = archive_read_support_compression_program$MH();
        try {
            return (int)mh$.invokeExact(x0, command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_program_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$2,"archive_read_support_compression_program_signature");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_program_signature(struct archive*, char*, void*, size_t);
     * }
     */
    public static int archive_read_support_compression_program_signature(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3) {
        var mh$ = archive_read_support_compression_program_signature$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_rpm$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$3,"archive_read_support_compression_rpm");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_rpm(struct archive*);
     * }
     */
    public static int archive_read_support_compression_rpm(MemorySegment x0) {
        var mh$ = archive_read_support_compression_rpm$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_uu$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$4,"archive_read_support_compression_uu");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_uu(struct archive*);
     * }
     */
    public static int archive_read_support_compression_uu(MemorySegment x0) {
        var mh$ = archive_read_support_compression_uu$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_compression_xz$MH() {
        return RuntimeHelper.requireNonNull(constants$97.const$5,"archive_read_support_compression_xz");
    }
    /**
     * {@snippet :
     * int archive_read_support_compression_xz(struct archive*);
     * }
     */
    public static int archive_read_support_compression_xz(MemorySegment x0) {
        var mh$ = archive_read_support_compression_xz$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_all$MH() {
        return RuntimeHelper.requireNonNull(constants$98.const$0,"archive_read_support_filter_all");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_all(struct archive*);
     * }
     */
    public static int archive_read_support_filter_all(MemorySegment x0) {
        var mh$ = archive_read_support_filter_all$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_by_code$MH() {
        return RuntimeHelper.requireNonNull(constants$98.const$1,"archive_read_support_filter_by_code");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_by_code(struct archive*, int);
     * }
     */
    public static int archive_read_support_filter_by_code(MemorySegment x0, int x1) {
        var mh$ = archive_read_support_filter_by_code$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_bzip2$MH() {
        return RuntimeHelper.requireNonNull(constants$98.const$2,"archive_read_support_filter_bzip2");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_bzip2(struct archive*);
     * }
     */
    public static int archive_read_support_filter_bzip2(MemorySegment x0) {
        var mh$ = archive_read_support_filter_bzip2$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_compress$MH() {
        return RuntimeHelper.requireNonNull(constants$98.const$3,"archive_read_support_filter_compress");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_compress(struct archive*);
     * }
     */
    public static int archive_read_support_filter_compress(MemorySegment x0) {
        var mh$ = archive_read_support_filter_compress$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_gzip$MH() {
        return RuntimeHelper.requireNonNull(constants$98.const$4,"archive_read_support_filter_gzip");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_gzip(struct archive*);
     * }
     */
    public static int archive_read_support_filter_gzip(MemorySegment x0) {
        var mh$ = archive_read_support_filter_gzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_grzip$MH() {
        return RuntimeHelper.requireNonNull(constants$98.const$5,"archive_read_support_filter_grzip");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_grzip(struct archive*);
     * }
     */
    public static int archive_read_support_filter_grzip(MemorySegment x0) {
        var mh$ = archive_read_support_filter_grzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_lrzip$MH() {
        return RuntimeHelper.requireNonNull(constants$99.const$0,"archive_read_support_filter_lrzip");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_lrzip(struct archive*);
     * }
     */
    public static int archive_read_support_filter_lrzip(MemorySegment x0) {
        var mh$ = archive_read_support_filter_lrzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_lz4$MH() {
        return RuntimeHelper.requireNonNull(constants$99.const$1,"archive_read_support_filter_lz4");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_lz4(struct archive*);
     * }
     */
    public static int archive_read_support_filter_lz4(MemorySegment x0) {
        var mh$ = archive_read_support_filter_lz4$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_lzip$MH() {
        return RuntimeHelper.requireNonNull(constants$99.const$2,"archive_read_support_filter_lzip");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_lzip(struct archive*);
     * }
     */
    public static int archive_read_support_filter_lzip(MemorySegment x0) {
        var mh$ = archive_read_support_filter_lzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_lzma$MH() {
        return RuntimeHelper.requireNonNull(constants$99.const$3,"archive_read_support_filter_lzma");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_lzma(struct archive*);
     * }
     */
    public static int archive_read_support_filter_lzma(MemorySegment x0) {
        var mh$ = archive_read_support_filter_lzma$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_lzop$MH() {
        return RuntimeHelper.requireNonNull(constants$99.const$4,"archive_read_support_filter_lzop");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_lzop(struct archive*);
     * }
     */
    public static int archive_read_support_filter_lzop(MemorySegment x0) {
        var mh$ = archive_read_support_filter_lzop$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_none$MH() {
        return RuntimeHelper.requireNonNull(constants$99.const$5,"archive_read_support_filter_none");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_none(struct archive*);
     * }
     */
    public static int archive_read_support_filter_none(MemorySegment x0) {
        var mh$ = archive_read_support_filter_none$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_program$MH() {
        return RuntimeHelper.requireNonNull(constants$100.const$0,"archive_read_support_filter_program");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_program(struct archive*, char* command);
     * }
     */
    public static int archive_read_support_filter_program(MemorySegment x0, MemorySegment command) {
        var mh$ = archive_read_support_filter_program$MH();
        try {
            return (int)mh$.invokeExact(x0, command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_program_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$100.const$1,"archive_read_support_filter_program_signature");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_program_signature(struct archive*, char*, void*, size_t);
     * }
     */
    public static int archive_read_support_filter_program_signature(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3) {
        var mh$ = archive_read_support_filter_program_signature$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_rpm$MH() {
        return RuntimeHelper.requireNonNull(constants$100.const$2,"archive_read_support_filter_rpm");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_rpm(struct archive*);
     * }
     */
    public static int archive_read_support_filter_rpm(MemorySegment x0) {
        var mh$ = archive_read_support_filter_rpm$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_uu$MH() {
        return RuntimeHelper.requireNonNull(constants$100.const$3,"archive_read_support_filter_uu");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_uu(struct archive*);
     * }
     */
    public static int archive_read_support_filter_uu(MemorySegment x0) {
        var mh$ = archive_read_support_filter_uu$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_xz$MH() {
        return RuntimeHelper.requireNonNull(constants$100.const$4,"archive_read_support_filter_xz");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_xz(struct archive*);
     * }
     */
    public static int archive_read_support_filter_xz(MemorySegment x0) {
        var mh$ = archive_read_support_filter_xz$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_filter_zstd$MH() {
        return RuntimeHelper.requireNonNull(constants$100.const$5,"archive_read_support_filter_zstd");
    }
    /**
     * {@snippet :
     * int archive_read_support_filter_zstd(struct archive*);
     * }
     */
    public static int archive_read_support_filter_zstd(MemorySegment x0) {
        var mh$ = archive_read_support_filter_zstd$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_7zip$MH() {
        return RuntimeHelper.requireNonNull(constants$101.const$0,"archive_read_support_format_7zip");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_7zip(struct archive*);
     * }
     */
    public static int archive_read_support_format_7zip(MemorySegment x0) {
        var mh$ = archive_read_support_format_7zip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_all$MH() {
        return RuntimeHelper.requireNonNull(constants$101.const$1,"archive_read_support_format_all");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_all(struct archive*);
     * }
     */
    public static int archive_read_support_format_all(MemorySegment x0) {
        var mh$ = archive_read_support_format_all$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_ar$MH() {
        return RuntimeHelper.requireNonNull(constants$101.const$2,"archive_read_support_format_ar");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_ar(struct archive*);
     * }
     */
    public static int archive_read_support_format_ar(MemorySegment x0) {
        var mh$ = archive_read_support_format_ar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_by_code$MH() {
        return RuntimeHelper.requireNonNull(constants$101.const$3,"archive_read_support_format_by_code");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_by_code(struct archive*, int);
     * }
     */
    public static int archive_read_support_format_by_code(MemorySegment x0, int x1) {
        var mh$ = archive_read_support_format_by_code$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_cab$MH() {
        return RuntimeHelper.requireNonNull(constants$101.const$4,"archive_read_support_format_cab");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_cab(struct archive*);
     * }
     */
    public static int archive_read_support_format_cab(MemorySegment x0) {
        var mh$ = archive_read_support_format_cab$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_cpio$MH() {
        return RuntimeHelper.requireNonNull(constants$101.const$5,"archive_read_support_format_cpio");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_cpio(struct archive*);
     * }
     */
    public static int archive_read_support_format_cpio(MemorySegment x0) {
        var mh$ = archive_read_support_format_cpio$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_empty$MH() {
        return RuntimeHelper.requireNonNull(constants$102.const$0,"archive_read_support_format_empty");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_empty(struct archive*);
     * }
     */
    public static int archive_read_support_format_empty(MemorySegment x0) {
        var mh$ = archive_read_support_format_empty$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_gnutar$MH() {
        return RuntimeHelper.requireNonNull(constants$102.const$1,"archive_read_support_format_gnutar");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_gnutar(struct archive*);
     * }
     */
    public static int archive_read_support_format_gnutar(MemorySegment x0) {
        var mh$ = archive_read_support_format_gnutar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_iso9660$MH() {
        return RuntimeHelper.requireNonNull(constants$102.const$2,"archive_read_support_format_iso9660");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_iso9660(struct archive*);
     * }
     */
    public static int archive_read_support_format_iso9660(MemorySegment x0) {
        var mh$ = archive_read_support_format_iso9660$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_lha$MH() {
        return RuntimeHelper.requireNonNull(constants$102.const$3,"archive_read_support_format_lha");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_lha(struct archive*);
     * }
     */
    public static int archive_read_support_format_lha(MemorySegment x0) {
        var mh$ = archive_read_support_format_lha$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_mtree$MH() {
        return RuntimeHelper.requireNonNull(constants$102.const$4,"archive_read_support_format_mtree");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_mtree(struct archive*);
     * }
     */
    public static int archive_read_support_format_mtree(MemorySegment x0) {
        var mh$ = archive_read_support_format_mtree$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_rar$MH() {
        return RuntimeHelper.requireNonNull(constants$102.const$5,"archive_read_support_format_rar");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_rar(struct archive*);
     * }
     */
    public static int archive_read_support_format_rar(MemorySegment x0) {
        var mh$ = archive_read_support_format_rar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_rar5$MH() {
        return RuntimeHelper.requireNonNull(constants$103.const$0,"archive_read_support_format_rar5");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_rar5(struct archive*);
     * }
     */
    public static int archive_read_support_format_rar5(MemorySegment x0) {
        var mh$ = archive_read_support_format_rar5$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_raw$MH() {
        return RuntimeHelper.requireNonNull(constants$103.const$1,"archive_read_support_format_raw");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_raw(struct archive*);
     * }
     */
    public static int archive_read_support_format_raw(MemorySegment x0) {
        var mh$ = archive_read_support_format_raw$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_tar$MH() {
        return RuntimeHelper.requireNonNull(constants$103.const$2,"archive_read_support_format_tar");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_tar(struct archive*);
     * }
     */
    public static int archive_read_support_format_tar(MemorySegment x0) {
        var mh$ = archive_read_support_format_tar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_warc$MH() {
        return RuntimeHelper.requireNonNull(constants$103.const$3,"archive_read_support_format_warc");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_warc(struct archive*);
     * }
     */
    public static int archive_read_support_format_warc(MemorySegment x0) {
        var mh$ = archive_read_support_format_warc$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_xar$MH() {
        return RuntimeHelper.requireNonNull(constants$103.const$4,"archive_read_support_format_xar");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_xar(struct archive*);
     * }
     */
    public static int archive_read_support_format_xar(MemorySegment x0) {
        var mh$ = archive_read_support_format_xar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_zip$MH() {
        return RuntimeHelper.requireNonNull(constants$103.const$5,"archive_read_support_format_zip");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_zip(struct archive*);
     * }
     */
    public static int archive_read_support_format_zip(MemorySegment x0) {
        var mh$ = archive_read_support_format_zip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_zip_streamable$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$0,"archive_read_support_format_zip_streamable");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_zip_streamable(struct archive*);
     * }
     */
    public static int archive_read_support_format_zip_streamable(MemorySegment x0) {
        var mh$ = archive_read_support_format_zip_streamable$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_support_format_zip_seekable$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$1,"archive_read_support_format_zip_seekable");
    }
    /**
     * {@snippet :
     * int archive_read_support_format_zip_seekable(struct archive*);
     * }
     */
    public static int archive_read_support_format_zip_seekable(MemorySegment x0) {
        var mh$ = archive_read_support_format_zip_seekable$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_format$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$2,"archive_read_set_format");
    }
    /**
     * {@snippet :
     * int archive_read_set_format(struct archive*, int);
     * }
     */
    public static int archive_read_set_format(MemorySegment x0, int x1) {
        var mh$ = archive_read_set_format$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_append_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$3,"archive_read_append_filter");
    }
    /**
     * {@snippet :
     * int archive_read_append_filter(struct archive*, int);
     * }
     */
    public static int archive_read_append_filter(MemorySegment x0, int x1) {
        var mh$ = archive_read_append_filter$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_append_filter_program$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$4,"archive_read_append_filter_program");
    }
    /**
     * {@snippet :
     * int archive_read_append_filter_program(struct archive*, char*);
     * }
     */
    public static int archive_read_append_filter_program(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_append_filter_program$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_append_filter_program_signature$MH() {
        return RuntimeHelper.requireNonNull(constants$104.const$5,"archive_read_append_filter_program_signature");
    }
    /**
     * {@snippet :
     * int archive_read_append_filter_program_signature(struct archive*, char*, void*, size_t);
     * }
     */
    public static int archive_read_append_filter_program_signature(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3) {
        var mh$ = archive_read_append_filter_program_signature$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_open_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$105.const$0,"archive_read_set_open_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_open_callback(struct archive*, archive_open_callback*);
     * }
     */
    public static int archive_read_set_open_callback(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_open_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_read_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$105.const$1,"archive_read_set_read_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_read_callback(struct archive*, archive_read_callback*);
     * }
     */
    public static int archive_read_set_read_callback(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_read_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_seek_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$105.const$2,"archive_read_set_seek_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_seek_callback(struct archive*, archive_seek_callback*);
     * }
     */
    public static int archive_read_set_seek_callback(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_seek_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_skip_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$105.const$3,"archive_read_set_skip_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_skip_callback(struct archive*, archive_skip_callback*);
     * }
     */
    public static int archive_read_set_skip_callback(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_skip_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_close_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$105.const$4,"archive_read_set_close_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_close_callback(struct archive*, archive_close_callback*);
     * }
     */
    public static int archive_read_set_close_callback(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_close_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_switch_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$105.const$5,"archive_read_set_switch_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_switch_callback(struct archive*, archive_switch_callback*);
     * }
     */
    public static int archive_read_set_switch_callback(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_switch_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$106.const$0,"archive_read_set_callback_data");
    }
    /**
     * {@snippet :
     * int archive_read_set_callback_data(struct archive*, void*);
     * }
     */
    public static int archive_read_set_callback_data(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_set_callback_data$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_callback_data2$MH() {
        return RuntimeHelper.requireNonNull(constants$106.const$1,"archive_read_set_callback_data2");
    }
    /**
     * {@snippet :
     * int archive_read_set_callback_data2(struct archive*, void*, unsigned int);
     * }
     */
    public static int archive_read_set_callback_data2(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = archive_read_set_callback_data2$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_add_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$106.const$2,"archive_read_add_callback_data");
    }
    /**
     * {@snippet :
     * int archive_read_add_callback_data(struct archive*, void*, unsigned int);
     * }
     */
    public static int archive_read_add_callback_data(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = archive_read_add_callback_data$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_append_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$106.const$3,"archive_read_append_callback_data");
    }
    /**
     * {@snippet :
     * int archive_read_append_callback_data(struct archive*, void*);
     * }
     */
    public static int archive_read_append_callback_data(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_append_callback_data$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_prepend_callback_data$MH() {
        return RuntimeHelper.requireNonNull(constants$106.const$4,"archive_read_prepend_callback_data");
    }
    /**
     * {@snippet :
     * int archive_read_prepend_callback_data(struct archive*, void*);
     * }
     */
    public static int archive_read_prepend_callback_data(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_prepend_callback_data$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open1$MH() {
        return RuntimeHelper.requireNonNull(constants$106.const$5,"archive_read_open1");
    }
    /**
     * {@snippet :
     * int archive_read_open1(struct archive*);
     * }
     */
    public static int archive_read_open1(MemorySegment x0) {
        var mh$ = archive_read_open1$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open$MH() {
        return RuntimeHelper.requireNonNull(constants$107.const$1,"archive_read_open");
    }
    /**
     * {@snippet :
     * int archive_read_open(struct archive*, void* _client_data, archive_open_callback*, archive_read_callback*, archive_close_callback*);
     * }
     */
    public static int archive_read_open(MemorySegment x0, MemorySegment _client_data, MemorySegment x2, MemorySegment x3, MemorySegment x4) {
        var mh$ = archive_read_open$MH();
        try {
            return (int)mh$.invokeExact(x0, _client_data, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open2$MH() {
        return RuntimeHelper.requireNonNull(constants$107.const$3,"archive_read_open2");
    }
    /**
     * {@snippet :
     * int archive_read_open2(struct archive*, void* _client_data, archive_open_callback*, archive_read_callback*, archive_skip_callback*, archive_close_callback*);
     * }
     */
    public static int archive_read_open2(MemorySegment x0, MemorySegment _client_data, MemorySegment x2, MemorySegment x3, MemorySegment x4, MemorySegment x5) {
        var mh$ = archive_read_open2$MH();
        try {
            return (int)mh$.invokeExact(x0, _client_data, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$107.const$5,"archive_read_open_filename");
    }
    /**
     * {@snippet :
     * int archive_read_open_filename(struct archive*, char* _filename, size_t _block_size);
     * }
     */
    public static int archive_read_open_filename(MemorySegment x0, MemorySegment _filename, long _block_size) {
        var mh$ = archive_read_open_filename$MH();
        try {
            return (int)mh$.invokeExact(x0, _filename, _block_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_filenames$MH() {
        return RuntimeHelper.requireNonNull(constants$108.const$0,"archive_read_open_filenames");
    }
    /**
     * {@snippet :
     * int archive_read_open_filenames(struct archive*, char** _filenames, size_t _block_size);
     * }
     */
    public static int archive_read_open_filenames(MemorySegment x0, MemorySegment _filenames, long _block_size) {
        var mh$ = archive_read_open_filenames$MH();
        try {
            return (int)mh$.invokeExact(x0, _filenames, _block_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_filename_w$MH() {
        return RuntimeHelper.requireNonNull(constants$108.const$1,"archive_read_open_filename_w");
    }
    /**
     * {@snippet :
     * int archive_read_open_filename_w(struct archive*, const wchar_t* _filename, size_t _block_size);
     * }
     */
    public static int archive_read_open_filename_w(MemorySegment x0, MemorySegment _filename, long _block_size) {
        var mh$ = archive_read_open_filename_w$MH();
        try {
            return (int)mh$.invokeExact(x0, _filename, _block_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_file$MH() {
        return RuntimeHelper.requireNonNull(constants$108.const$2,"archive_read_open_file");
    }
    /**
     * {@snippet :
     * int archive_read_open_file(struct archive*, char* _filename, size_t _block_size);
     * }
     */
    public static int archive_read_open_file(MemorySegment x0, MemorySegment _filename, long _block_size) {
        var mh$ = archive_read_open_file$MH();
        try {
            return (int)mh$.invokeExact(x0, _filename, _block_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$108.const$3,"archive_read_open_memory");
    }
    /**
     * {@snippet :
     * int archive_read_open_memory(struct archive*, void* buff, size_t size);
     * }
     */
    public static int archive_read_open_memory(MemorySegment x0, MemorySegment buff, long size) {
        var mh$ = archive_read_open_memory$MH();
        try {
            return (int)mh$.invokeExact(x0, buff, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_memory2$MH() {
        return RuntimeHelper.requireNonNull(constants$108.const$5,"archive_read_open_memory2");
    }
    /**
     * {@snippet :
     * int archive_read_open_memory2(struct archive* a, void* buff, size_t size, size_t read_size);
     * }
     */
    public static int archive_read_open_memory2(MemorySegment a, MemorySegment buff, long size, long read_size) {
        var mh$ = archive_read_open_memory2$MH();
        try {
            return (int)mh$.invokeExact(a, buff, size, read_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$109.const$1,"archive_read_open_fd");
    }
    /**
     * {@snippet :
     * int archive_read_open_fd(struct archive*, int _fd, size_t _block_size);
     * }
     */
    public static int archive_read_open_fd(MemorySegment x0, int _fd, long _block_size) {
        var mh$ = archive_read_open_fd$MH();
        try {
            return (int)mh$.invokeExact(x0, _fd, _block_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_open_FILE$MH() {
        return RuntimeHelper.requireNonNull(constants$109.const$2,"archive_read_open_FILE");
    }
    /**
     * {@snippet :
     * int archive_read_open_FILE(struct archive*, FILE* _file);
     * }
     */
    public static int archive_read_open_FILE(MemorySegment x0, MemorySegment _file) {
        var mh$ = archive_read_open_FILE$MH();
        try {
            return (int)mh$.invokeExact(x0, _file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_next_header$MH() {
        return RuntimeHelper.requireNonNull(constants$109.const$3,"archive_read_next_header");
    }
    /**
     * {@snippet :
     * int archive_read_next_header(struct archive*, struct archive_entry**);
     * }
     */
    public static int archive_read_next_header(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_next_header$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_next_header2$MH() {
        return RuntimeHelper.requireNonNull(constants$109.const$4,"archive_read_next_header2");
    }
    /**
     * {@snippet :
     * int archive_read_next_header2(struct archive*, struct archive_entry*);
     * }
     */
    public static int archive_read_next_header2(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_next_header2$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_header_position$MH() {
        return RuntimeHelper.requireNonNull(constants$109.const$5,"archive_read_header_position");
    }
    /**
     * {@snippet :
     * la_int64_t archive_read_header_position(struct archive*);
     * }
     */
    public static long archive_read_header_position(MemorySegment x0) {
        var mh$ = archive_read_header_position$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_has_encrypted_entries$MH() {
        return RuntimeHelper.requireNonNull(constants$110.const$0,"archive_read_has_encrypted_entries");
    }
    /**
     * {@snippet :
     * int archive_read_has_encrypted_entries(struct archive*);
     * }
     */
    public static int archive_read_has_encrypted_entries(MemorySegment x0) {
        var mh$ = archive_read_has_encrypted_entries$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_format_capabilities$MH() {
        return RuntimeHelper.requireNonNull(constants$110.const$1,"archive_read_format_capabilities");
    }
    /**
     * {@snippet :
     * int archive_read_format_capabilities(struct archive*);
     * }
     */
    public static int archive_read_format_capabilities(MemorySegment x0) {
        var mh$ = archive_read_format_capabilities$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_data$MH() {
        return RuntimeHelper.requireNonNull(constants$110.const$2,"archive_read_data");
    }
    /**
     * {@snippet :
     * la_ssize_t archive_read_data(struct archive*, void*, size_t);
     * }
     */
    public static long archive_read_data(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = archive_read_data$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_seek_data$MH() {
        return RuntimeHelper.requireNonNull(constants$110.const$3,"archive_seek_data");
    }
    /**
     * {@snippet :
     * la_int64_t archive_seek_data(struct archive*, la_int64_t, int);
     * }
     */
    public static long archive_seek_data(MemorySegment x0, long x1, int x2) {
        var mh$ = archive_seek_data$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_data_block$MH() {
        return RuntimeHelper.requireNonNull(constants$110.const$5,"archive_read_data_block");
    }
    /**
     * {@snippet :
     * int archive_read_data_block(struct archive* a, void** buff, size_t* size, la_int64_t* offset);
     * }
     */
    public static int archive_read_data_block(MemorySegment a, MemorySegment buff, MemorySegment size, MemorySegment offset) {
        var mh$ = archive_read_data_block$MH();
        try {
            return (int)mh$.invokeExact(a, buff, size, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_data_skip$MH() {
        return RuntimeHelper.requireNonNull(constants$111.const$0,"archive_read_data_skip");
    }
    /**
     * {@snippet :
     * int archive_read_data_skip(struct archive*);
     * }
     */
    public static int archive_read_data_skip(MemorySegment x0) {
        var mh$ = archive_read_data_skip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_data_into_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$111.const$1,"archive_read_data_into_fd");
    }
    /**
     * {@snippet :
     * int archive_read_data_into_fd(struct archive*, int fd);
     * }
     */
    public static int archive_read_data_into_fd(MemorySegment x0, int fd) {
        var mh$ = archive_read_data_into_fd$MH();
        try {
            return (int)mh$.invokeExact(x0, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_format_option$MH() {
        return RuntimeHelper.requireNonNull(constants$111.const$2,"archive_read_set_format_option");
    }
    /**
     * {@snippet :
     * int archive_read_set_format_option(struct archive* _a, char* m, char* o, char* v);
     * }
     */
    public static int archive_read_set_format_option(MemorySegment _a, MemorySegment m, MemorySegment o, MemorySegment v) {
        var mh$ = archive_read_set_format_option$MH();
        try {
            return (int)mh$.invokeExact(_a, m, o, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_filter_option$MH() {
        return RuntimeHelper.requireNonNull(constants$111.const$3,"archive_read_set_filter_option");
    }
    /**
     * {@snippet :
     * int archive_read_set_filter_option(struct archive* _a, char* m, char* o, char* v);
     * }
     */
    public static int archive_read_set_filter_option(MemorySegment _a, MemorySegment m, MemorySegment o, MemorySegment v) {
        var mh$ = archive_read_set_filter_option$MH();
        try {
            return (int)mh$.invokeExact(_a, m, o, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$111.const$4,"archive_read_set_option");
    }
    /**
     * {@snippet :
     * int archive_read_set_option(struct archive* _a, char* m, char* o, char* v);
     * }
     */
    public static int archive_read_set_option(MemorySegment _a, MemorySegment m, MemorySegment o, MemorySegment v) {
        var mh$ = archive_read_set_option$MH();
        try {
            return (int)mh$.invokeExact(_a, m, o, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_options$MH() {
        return RuntimeHelper.requireNonNull(constants$111.const$5,"archive_read_set_options");
    }
    /**
     * {@snippet :
     * int archive_read_set_options(struct archive* _a, char* opts);
     * }
     */
    public static int archive_read_set_options(MemorySegment _a, MemorySegment opts) {
        var mh$ = archive_read_set_options$MH();
        try {
            return (int)mh$.invokeExact(_a, opts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_add_passphrase$MH() {
        return RuntimeHelper.requireNonNull(constants$112.const$0,"archive_read_add_passphrase");
    }
    /**
     * {@snippet :
     * int archive_read_add_passphrase(struct archive*, char*);
     * }
     */
    public static int archive_read_add_passphrase(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_add_passphrase$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_set_passphrase_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$112.const$1,"archive_read_set_passphrase_callback");
    }
    /**
     * {@snippet :
     * int archive_read_set_passphrase_callback(struct archive*, void* client_data, archive_passphrase_callback*);
     * }
     */
    public static int archive_read_set_passphrase_callback(MemorySegment x0, MemorySegment client_data, MemorySegment x2) {
        var mh$ = archive_read_set_passphrase_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, client_data, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_extract$MH() {
        return RuntimeHelper.requireNonNull(constants$112.const$2,"archive_read_extract");
    }
    /**
     * {@snippet :
     * int archive_read_extract(struct archive*, struct archive_entry*, int flags);
     * }
     */
    public static int archive_read_extract(MemorySegment x0, MemorySegment x1, int flags) {
        var mh$ = archive_read_extract$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_extract2$MH() {
        return RuntimeHelper.requireNonNull(constants$112.const$3,"archive_read_extract2");
    }
    /**
     * {@snippet :
     * int archive_read_extract2(struct archive*, struct archive_entry*, struct archive*);
     * }
     */
    public static int archive_read_extract2(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = archive_read_extract2$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_extract_set_progress_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$112.const$6,"archive_read_extract_set_progress_callback");
    }
    /**
     * {@snippet :
     * void archive_read_extract_set_progress_callback(struct archive*, void (*_progress_func)(void*), void* _user_data);
     * }
     */
    public static void archive_read_extract_set_progress_callback(MemorySegment x0, MemorySegment _progress_func, MemorySegment _user_data) {
        var mh$ = archive_read_extract_set_progress_callback$MH();
        try {
            mh$.invokeExact(x0, _progress_func, _user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_extract_set_skip_file$MH() {
        return RuntimeHelper.requireNonNull(constants$113.const$1,"archive_read_extract_set_skip_file");
    }
    /**
     * {@snippet :
     * void archive_read_extract_set_skip_file(struct archive*, la_int64_t, la_int64_t);
     * }
     */
    public static void archive_read_extract_set_skip_file(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_read_extract_set_skip_file$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_close$MH() {
        return RuntimeHelper.requireNonNull(constants$113.const$2,"archive_read_close");
    }
    /**
     * {@snippet :
     * int archive_read_close(struct archive*);
     * }
     */
    public static int archive_read_close(MemorySegment x0) {
        var mh$ = archive_read_close$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_free$MH() {
        return RuntimeHelper.requireNonNull(constants$113.const$3,"archive_read_free");
    }
    /**
     * {@snippet :
     * int archive_read_free(struct archive*);
     * }
     */
    public static int archive_read_free(MemorySegment x0) {
        var mh$ = archive_read_free$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$113.const$4,"archive_read_finish");
    }
    /**
     * {@snippet :
     * int archive_read_finish(struct archive*);
     * }
     */
    public static int archive_read_finish(MemorySegment x0) {
        var mh$ = archive_read_finish$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_new$MH() {
        return RuntimeHelper.requireNonNull(constants$113.const$5,"archive_write_new");
    }
    /**
     * {@snippet :
     * struct archive* archive_write_new();
     * }
     */
    public static MemorySegment archive_write_new() {
        var mh$ = archive_write_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_bytes_per_block$MH() {
        return RuntimeHelper.requireNonNull(constants$114.const$0,"archive_write_set_bytes_per_block");
    }
    /**
     * {@snippet :
     * int archive_write_set_bytes_per_block(struct archive*, int bytes_per_block);
     * }
     */
    public static int archive_write_set_bytes_per_block(MemorySegment x0, int bytes_per_block) {
        var mh$ = archive_write_set_bytes_per_block$MH();
        try {
            return (int)mh$.invokeExact(x0, bytes_per_block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_get_bytes_per_block$MH() {
        return RuntimeHelper.requireNonNull(constants$114.const$1,"archive_write_get_bytes_per_block");
    }
    /**
     * {@snippet :
     * int archive_write_get_bytes_per_block(struct archive*);
     * }
     */
    public static int archive_write_get_bytes_per_block(MemorySegment x0) {
        var mh$ = archive_write_get_bytes_per_block$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_bytes_in_last_block$MH() {
        return RuntimeHelper.requireNonNull(constants$114.const$2,"archive_write_set_bytes_in_last_block");
    }
    /**
     * {@snippet :
     * int archive_write_set_bytes_in_last_block(struct archive*, int bytes_in_last_block);
     * }
     */
    public static int archive_write_set_bytes_in_last_block(MemorySegment x0, int bytes_in_last_block) {
        var mh$ = archive_write_set_bytes_in_last_block$MH();
        try {
            return (int)mh$.invokeExact(x0, bytes_in_last_block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_get_bytes_in_last_block$MH() {
        return RuntimeHelper.requireNonNull(constants$114.const$3,"archive_write_get_bytes_in_last_block");
    }
    /**
     * {@snippet :
     * int archive_write_get_bytes_in_last_block(struct archive*);
     * }
     */
    public static int archive_write_get_bytes_in_last_block(MemorySegment x0) {
        var mh$ = archive_write_get_bytes_in_last_block$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_skip_file$MH() {
        return RuntimeHelper.requireNonNull(constants$114.const$5,"archive_write_set_skip_file");
    }
    /**
     * {@snippet :
     * int archive_write_set_skip_file(struct archive*, la_int64_t, la_int64_t);
     * }
     */
    public static int archive_write_set_skip_file(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_write_set_skip_file$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_bzip2$MH() {
        return RuntimeHelper.requireNonNull(constants$115.const$0,"archive_write_set_compression_bzip2");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_bzip2(struct archive*);
     * }
     */
    public static int archive_write_set_compression_bzip2(MemorySegment x0) {
        var mh$ = archive_write_set_compression_bzip2$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_compress$MH() {
        return RuntimeHelper.requireNonNull(constants$115.const$1,"archive_write_set_compression_compress");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_compress(struct archive*);
     * }
     */
    public static int archive_write_set_compression_compress(MemorySegment x0) {
        var mh$ = archive_write_set_compression_compress$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_gzip$MH() {
        return RuntimeHelper.requireNonNull(constants$115.const$2,"archive_write_set_compression_gzip");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_gzip(struct archive*);
     * }
     */
    public static int archive_write_set_compression_gzip(MemorySegment x0) {
        var mh$ = archive_write_set_compression_gzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_lzip$MH() {
        return RuntimeHelper.requireNonNull(constants$115.const$3,"archive_write_set_compression_lzip");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_lzip(struct archive*);
     * }
     */
    public static int archive_write_set_compression_lzip(MemorySegment x0) {
        var mh$ = archive_write_set_compression_lzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_lzma$MH() {
        return RuntimeHelper.requireNonNull(constants$115.const$4,"archive_write_set_compression_lzma");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_lzma(struct archive*);
     * }
     */
    public static int archive_write_set_compression_lzma(MemorySegment x0) {
        var mh$ = archive_write_set_compression_lzma$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_none$MH() {
        return RuntimeHelper.requireNonNull(constants$115.const$5,"archive_write_set_compression_none");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_none(struct archive*);
     * }
     */
    public static int archive_write_set_compression_none(MemorySegment x0) {
        var mh$ = archive_write_set_compression_none$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_program$MH() {
        return RuntimeHelper.requireNonNull(constants$116.const$0,"archive_write_set_compression_program");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_program(struct archive*, char* cmd);
     * }
     */
    public static int archive_write_set_compression_program(MemorySegment x0, MemorySegment cmd) {
        var mh$ = archive_write_set_compression_program$MH();
        try {
            return (int)mh$.invokeExact(x0, cmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_compression_xz$MH() {
        return RuntimeHelper.requireNonNull(constants$116.const$1,"archive_write_set_compression_xz");
    }
    /**
     * {@snippet :
     * int archive_write_set_compression_xz(struct archive*);
     * }
     */
    public static int archive_write_set_compression_xz(MemorySegment x0) {
        var mh$ = archive_write_set_compression_xz$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter$MH() {
        return RuntimeHelper.requireNonNull(constants$116.const$2,"archive_write_add_filter");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter(struct archive*, int filter_code);
     * }
     */
    public static int archive_write_add_filter(MemorySegment x0, int filter_code) {
        var mh$ = archive_write_add_filter$MH();
        try {
            return (int)mh$.invokeExact(x0, filter_code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$116.const$3,"archive_write_add_filter_by_name");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_by_name(struct archive*, char* name);
     * }
     */
    public static int archive_write_add_filter_by_name(MemorySegment x0, MemorySegment name) {
        var mh$ = archive_write_add_filter_by_name$MH();
        try {
            return (int)mh$.invokeExact(x0, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_b64encode$MH() {
        return RuntimeHelper.requireNonNull(constants$116.const$4,"archive_write_add_filter_b64encode");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_b64encode(struct archive*);
     * }
     */
    public static int archive_write_add_filter_b64encode(MemorySegment x0) {
        var mh$ = archive_write_add_filter_b64encode$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_bzip2$MH() {
        return RuntimeHelper.requireNonNull(constants$116.const$5,"archive_write_add_filter_bzip2");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_bzip2(struct archive*);
     * }
     */
    public static int archive_write_add_filter_bzip2(MemorySegment x0) {
        var mh$ = archive_write_add_filter_bzip2$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_compress$MH() {
        return RuntimeHelper.requireNonNull(constants$117.const$0,"archive_write_add_filter_compress");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_compress(struct archive*);
     * }
     */
    public static int archive_write_add_filter_compress(MemorySegment x0) {
        var mh$ = archive_write_add_filter_compress$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_grzip$MH() {
        return RuntimeHelper.requireNonNull(constants$117.const$1,"archive_write_add_filter_grzip");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_grzip(struct archive*);
     * }
     */
    public static int archive_write_add_filter_grzip(MemorySegment x0) {
        var mh$ = archive_write_add_filter_grzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_gzip$MH() {
        return RuntimeHelper.requireNonNull(constants$117.const$2,"archive_write_add_filter_gzip");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_gzip(struct archive*);
     * }
     */
    public static int archive_write_add_filter_gzip(MemorySegment x0) {
        var mh$ = archive_write_add_filter_gzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_lrzip$MH() {
        return RuntimeHelper.requireNonNull(constants$117.const$3,"archive_write_add_filter_lrzip");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_lrzip(struct archive*);
     * }
     */
    public static int archive_write_add_filter_lrzip(MemorySegment x0) {
        var mh$ = archive_write_add_filter_lrzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_lz4$MH() {
        return RuntimeHelper.requireNonNull(constants$117.const$4,"archive_write_add_filter_lz4");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_lz4(struct archive*);
     * }
     */
    public static int archive_write_add_filter_lz4(MemorySegment x0) {
        var mh$ = archive_write_add_filter_lz4$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_lzip$MH() {
        return RuntimeHelper.requireNonNull(constants$117.const$5,"archive_write_add_filter_lzip");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_lzip(struct archive*);
     * }
     */
    public static int archive_write_add_filter_lzip(MemorySegment x0) {
        var mh$ = archive_write_add_filter_lzip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_lzma$MH() {
        return RuntimeHelper.requireNonNull(constants$118.const$0,"archive_write_add_filter_lzma");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_lzma(struct archive*);
     * }
     */
    public static int archive_write_add_filter_lzma(MemorySegment x0) {
        var mh$ = archive_write_add_filter_lzma$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_lzop$MH() {
        return RuntimeHelper.requireNonNull(constants$118.const$1,"archive_write_add_filter_lzop");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_lzop(struct archive*);
     * }
     */
    public static int archive_write_add_filter_lzop(MemorySegment x0) {
        var mh$ = archive_write_add_filter_lzop$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_none$MH() {
        return RuntimeHelper.requireNonNull(constants$118.const$2,"archive_write_add_filter_none");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_none(struct archive*);
     * }
     */
    public static int archive_write_add_filter_none(MemorySegment x0) {
        var mh$ = archive_write_add_filter_none$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_program$MH() {
        return RuntimeHelper.requireNonNull(constants$118.const$3,"archive_write_add_filter_program");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_program(struct archive*, char* cmd);
     * }
     */
    public static int archive_write_add_filter_program(MemorySegment x0, MemorySegment cmd) {
        var mh$ = archive_write_add_filter_program$MH();
        try {
            return (int)mh$.invokeExact(x0, cmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_uuencode$MH() {
        return RuntimeHelper.requireNonNull(constants$118.const$4,"archive_write_add_filter_uuencode");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_uuencode(struct archive*);
     * }
     */
    public static int archive_write_add_filter_uuencode(MemorySegment x0) {
        var mh$ = archive_write_add_filter_uuencode$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_xz$MH() {
        return RuntimeHelper.requireNonNull(constants$118.const$5,"archive_write_add_filter_xz");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_xz(struct archive*);
     * }
     */
    public static int archive_write_add_filter_xz(MemorySegment x0) {
        var mh$ = archive_write_add_filter_xz$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_add_filter_zstd$MH() {
        return RuntimeHelper.requireNonNull(constants$119.const$0,"archive_write_add_filter_zstd");
    }
    /**
     * {@snippet :
     * int archive_write_add_filter_zstd(struct archive*);
     * }
     */
    public static int archive_write_add_filter_zstd(MemorySegment x0) {
        var mh$ = archive_write_add_filter_zstd$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format$MH() {
        return RuntimeHelper.requireNonNull(constants$119.const$1,"archive_write_set_format");
    }
    /**
     * {@snippet :
     * int archive_write_set_format(struct archive*, int format_code);
     * }
     */
    public static int archive_write_set_format(MemorySegment x0, int format_code) {
        var mh$ = archive_write_set_format$MH();
        try {
            return (int)mh$.invokeExact(x0, format_code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$119.const$2,"archive_write_set_format_by_name");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_by_name(struct archive*, char* name);
     * }
     */
    public static int archive_write_set_format_by_name(MemorySegment x0, MemorySegment name) {
        var mh$ = archive_write_set_format_by_name$MH();
        try {
            return (int)mh$.invokeExact(x0, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_7zip$MH() {
        return RuntimeHelper.requireNonNull(constants$119.const$3,"archive_write_set_format_7zip");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_7zip(struct archive*);
     * }
     */
    public static int archive_write_set_format_7zip(MemorySegment x0) {
        var mh$ = archive_write_set_format_7zip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_ar_bsd$MH() {
        return RuntimeHelper.requireNonNull(constants$119.const$4,"archive_write_set_format_ar_bsd");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_ar_bsd(struct archive*);
     * }
     */
    public static int archive_write_set_format_ar_bsd(MemorySegment x0) {
        var mh$ = archive_write_set_format_ar_bsd$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_ar_svr4$MH() {
        return RuntimeHelper.requireNonNull(constants$119.const$5,"archive_write_set_format_ar_svr4");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_ar_svr4(struct archive*);
     * }
     */
    public static int archive_write_set_format_ar_svr4(MemorySegment x0) {
        var mh$ = archive_write_set_format_ar_svr4$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_cpio$MH() {
        return RuntimeHelper.requireNonNull(constants$120.const$0,"archive_write_set_format_cpio");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_cpio(struct archive*);
     * }
     */
    public static int archive_write_set_format_cpio(MemorySegment x0) {
        var mh$ = archive_write_set_format_cpio$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_cpio_newc$MH() {
        return RuntimeHelper.requireNonNull(constants$120.const$1,"archive_write_set_format_cpio_newc");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_cpio_newc(struct archive*);
     * }
     */
    public static int archive_write_set_format_cpio_newc(MemorySegment x0) {
        var mh$ = archive_write_set_format_cpio_newc$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_gnutar$MH() {
        return RuntimeHelper.requireNonNull(constants$120.const$2,"archive_write_set_format_gnutar");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_gnutar(struct archive*);
     * }
     */
    public static int archive_write_set_format_gnutar(MemorySegment x0) {
        var mh$ = archive_write_set_format_gnutar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_iso9660$MH() {
        return RuntimeHelper.requireNonNull(constants$120.const$3,"archive_write_set_format_iso9660");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_iso9660(struct archive*);
     * }
     */
    public static int archive_write_set_format_iso9660(MemorySegment x0) {
        var mh$ = archive_write_set_format_iso9660$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_mtree$MH() {
        return RuntimeHelper.requireNonNull(constants$120.const$4,"archive_write_set_format_mtree");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_mtree(struct archive*);
     * }
     */
    public static int archive_write_set_format_mtree(MemorySegment x0) {
        var mh$ = archive_write_set_format_mtree$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_mtree_classic$MH() {
        return RuntimeHelper.requireNonNull(constants$120.const$5,"archive_write_set_format_mtree_classic");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_mtree_classic(struct archive*);
     * }
     */
    public static int archive_write_set_format_mtree_classic(MemorySegment x0) {
        var mh$ = archive_write_set_format_mtree_classic$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_pax$MH() {
        return RuntimeHelper.requireNonNull(constants$121.const$0,"archive_write_set_format_pax");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_pax(struct archive*);
     * }
     */
    public static int archive_write_set_format_pax(MemorySegment x0) {
        var mh$ = archive_write_set_format_pax$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_pax_restricted$MH() {
        return RuntimeHelper.requireNonNull(constants$121.const$1,"archive_write_set_format_pax_restricted");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_pax_restricted(struct archive*);
     * }
     */
    public static int archive_write_set_format_pax_restricted(MemorySegment x0) {
        var mh$ = archive_write_set_format_pax_restricted$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_raw$MH() {
        return RuntimeHelper.requireNonNull(constants$121.const$2,"archive_write_set_format_raw");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_raw(struct archive*);
     * }
     */
    public static int archive_write_set_format_raw(MemorySegment x0) {
        var mh$ = archive_write_set_format_raw$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_shar$MH() {
        return RuntimeHelper.requireNonNull(constants$121.const$3,"archive_write_set_format_shar");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_shar(struct archive*);
     * }
     */
    public static int archive_write_set_format_shar(MemorySegment x0) {
        var mh$ = archive_write_set_format_shar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_shar_dump$MH() {
        return RuntimeHelper.requireNonNull(constants$121.const$4,"archive_write_set_format_shar_dump");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_shar_dump(struct archive*);
     * }
     */
    public static int archive_write_set_format_shar_dump(MemorySegment x0) {
        var mh$ = archive_write_set_format_shar_dump$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_ustar$MH() {
        return RuntimeHelper.requireNonNull(constants$121.const$5,"archive_write_set_format_ustar");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_ustar(struct archive*);
     * }
     */
    public static int archive_write_set_format_ustar(MemorySegment x0) {
        var mh$ = archive_write_set_format_ustar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_v7tar$MH() {
        return RuntimeHelper.requireNonNull(constants$122.const$0,"archive_write_set_format_v7tar");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_v7tar(struct archive*);
     * }
     */
    public static int archive_write_set_format_v7tar(MemorySegment x0) {
        var mh$ = archive_write_set_format_v7tar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_warc$MH() {
        return RuntimeHelper.requireNonNull(constants$122.const$1,"archive_write_set_format_warc");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_warc(struct archive*);
     * }
     */
    public static int archive_write_set_format_warc(MemorySegment x0) {
        var mh$ = archive_write_set_format_warc$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_xar$MH() {
        return RuntimeHelper.requireNonNull(constants$122.const$2,"archive_write_set_format_xar");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_xar(struct archive*);
     * }
     */
    public static int archive_write_set_format_xar(MemorySegment x0) {
        var mh$ = archive_write_set_format_xar$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_zip$MH() {
        return RuntimeHelper.requireNonNull(constants$122.const$3,"archive_write_set_format_zip");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_zip(struct archive*);
     * }
     */
    public static int archive_write_set_format_zip(MemorySegment x0) {
        var mh$ = archive_write_set_format_zip$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_filter_by_ext$MH() {
        return RuntimeHelper.requireNonNull(constants$122.const$4,"archive_write_set_format_filter_by_ext");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_filter_by_ext(struct archive* a, char* filename);
     * }
     */
    public static int archive_write_set_format_filter_by_ext(MemorySegment a, MemorySegment filename) {
        var mh$ = archive_write_set_format_filter_by_ext$MH();
        try {
            return (int)mh$.invokeExact(a, filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_filter_by_ext_def$MH() {
        return RuntimeHelper.requireNonNull(constants$122.const$5,"archive_write_set_format_filter_by_ext_def");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_filter_by_ext_def(struct archive* a, char* filename, char* def_ext);
     * }
     */
    public static int archive_write_set_format_filter_by_ext_def(MemorySegment a, MemorySegment filename, MemorySegment def_ext) {
        var mh$ = archive_write_set_format_filter_by_ext_def$MH();
        try {
            return (int)mh$.invokeExact(a, filename, def_ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_zip_set_compression_deflate$MH() {
        return RuntimeHelper.requireNonNull(constants$123.const$0,"archive_write_zip_set_compression_deflate");
    }
    /**
     * {@snippet :
     * int archive_write_zip_set_compression_deflate(struct archive*);
     * }
     */
    public static int archive_write_zip_set_compression_deflate(MemorySegment x0) {
        var mh$ = archive_write_zip_set_compression_deflate$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_zip_set_compression_store$MH() {
        return RuntimeHelper.requireNonNull(constants$123.const$1,"archive_write_zip_set_compression_store");
    }
    /**
     * {@snippet :
     * int archive_write_zip_set_compression_store(struct archive*);
     * }
     */
    public static int archive_write_zip_set_compression_store(MemorySegment x0) {
        var mh$ = archive_write_zip_set_compression_store$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open$MH() {
        return RuntimeHelper.requireNonNull(constants$123.const$2,"archive_write_open");
    }
    /**
     * {@snippet :
     * int archive_write_open(struct archive*, void*, archive_open_callback*, archive_write_callback*, archive_close_callback*);
     * }
     */
    public static int archive_write_open(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3, MemorySegment x4) {
        var mh$ = archive_write_open$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open2$MH() {
        return RuntimeHelper.requireNonNull(constants$123.const$3,"archive_write_open2");
    }
    /**
     * {@snippet :
     * int archive_write_open2(struct archive*, void*, archive_open_callback*, archive_write_callback*, archive_close_callback*, archive_free_callback*);
     * }
     */
    public static int archive_write_open2(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3, MemorySegment x4, MemorySegment x5) {
        var mh$ = archive_write_open2$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$123.const$4,"archive_write_open_fd");
    }
    /**
     * {@snippet :
     * int archive_write_open_fd(struct archive*, int _fd);
     * }
     */
    public static int archive_write_open_fd(MemorySegment x0, int _fd) {
        var mh$ = archive_write_open_fd$MH();
        try {
            return (int)mh$.invokeExact(x0, _fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$123.const$5,"archive_write_open_filename");
    }
    /**
     * {@snippet :
     * int archive_write_open_filename(struct archive*, char* _file);
     * }
     */
    public static int archive_write_open_filename(MemorySegment x0, MemorySegment _file) {
        var mh$ = archive_write_open_filename$MH();
        try {
            return (int)mh$.invokeExact(x0, _file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open_filename_w$MH() {
        return RuntimeHelper.requireNonNull(constants$124.const$0,"archive_write_open_filename_w");
    }
    /**
     * {@snippet :
     * int archive_write_open_filename_w(struct archive*, const wchar_t* _file);
     * }
     */
    public static int archive_write_open_filename_w(MemorySegment x0, MemorySegment _file) {
        var mh$ = archive_write_open_filename_w$MH();
        try {
            return (int)mh$.invokeExact(x0, _file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open_file$MH() {
        return RuntimeHelper.requireNonNull(constants$124.const$1,"archive_write_open_file");
    }
    /**
     * {@snippet :
     * int archive_write_open_file(struct archive*, char* _file);
     * }
     */
    public static int archive_write_open_file(MemorySegment x0, MemorySegment _file) {
        var mh$ = archive_write_open_file$MH();
        try {
            return (int)mh$.invokeExact(x0, _file);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open_FILE$MH() {
        return RuntimeHelper.requireNonNull(constants$124.const$2,"archive_write_open_FILE");
    }
    /**
     * {@snippet :
     * int archive_write_open_FILE(struct archive*, FILE*);
     * }
     */
    public static int archive_write_open_FILE(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_write_open_FILE$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_open_memory$MH() {
        return RuntimeHelper.requireNonNull(constants$124.const$4,"archive_write_open_memory");
    }
    /**
     * {@snippet :
     * int archive_write_open_memory(struct archive*, void* _buffer, size_t _buffSize, size_t* _used);
     * }
     */
    public static int archive_write_open_memory(MemorySegment x0, MemorySegment _buffer, long _buffSize, MemorySegment _used) {
        var mh$ = archive_write_open_memory$MH();
        try {
            return (int)mh$.invokeExact(x0, _buffer, _buffSize, _used);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_header$MH() {
        return RuntimeHelper.requireNonNull(constants$124.const$5,"archive_write_header");
    }
    /**
     * {@snippet :
     * int archive_write_header(struct archive*, struct archive_entry*);
     * }
     */
    public static int archive_write_header(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_write_header$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_data$MH() {
        return RuntimeHelper.requireNonNull(constants$125.const$0,"archive_write_data");
    }
    /**
     * {@snippet :
     * la_ssize_t archive_write_data(struct archive*, void*, size_t);
     * }
     */
    public static long archive_write_data(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = archive_write_data$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_data_block$MH() {
        return RuntimeHelper.requireNonNull(constants$125.const$2,"archive_write_data_block");
    }
    /**
     * {@snippet :
     * la_ssize_t archive_write_data_block(struct archive*, void*, size_t, la_int64_t);
     * }
     */
    public static long archive_write_data_block(MemorySegment x0, MemorySegment x1, long x2, long x3) {
        var mh$ = archive_write_data_block$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_finish_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$125.const$3,"archive_write_finish_entry");
    }
    /**
     * {@snippet :
     * int archive_write_finish_entry(struct archive*);
     * }
     */
    public static int archive_write_finish_entry(MemorySegment x0) {
        var mh$ = archive_write_finish_entry$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_close$MH() {
        return RuntimeHelper.requireNonNull(constants$125.const$4,"archive_write_close");
    }
    /**
     * {@snippet :
     * int archive_write_close(struct archive*);
     * }
     */
    public static int archive_write_close(MemorySegment x0) {
        var mh$ = archive_write_close$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_fail$MH() {
        return RuntimeHelper.requireNonNull(constants$125.const$5,"archive_write_fail");
    }
    /**
     * {@snippet :
     * int archive_write_fail(struct archive*);
     * }
     */
    public static int archive_write_fail(MemorySegment x0) {
        var mh$ = archive_write_fail$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_free$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$0,"archive_write_free");
    }
    /**
     * {@snippet :
     * int archive_write_free(struct archive*);
     * }
     */
    public static int archive_write_free(MemorySegment x0) {
        var mh$ = archive_write_free$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$1,"archive_write_finish");
    }
    /**
     * {@snippet :
     * int archive_write_finish(struct archive*);
     * }
     */
    public static int archive_write_finish(MemorySegment x0) {
        var mh$ = archive_write_finish$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_format_option$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$2,"archive_write_set_format_option");
    }
    /**
     * {@snippet :
     * int archive_write_set_format_option(struct archive* _a, char* m, char* o, char* v);
     * }
     */
    public static int archive_write_set_format_option(MemorySegment _a, MemorySegment m, MemorySegment o, MemorySegment v) {
        var mh$ = archive_write_set_format_option$MH();
        try {
            return (int)mh$.invokeExact(_a, m, o, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_filter_option$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$3,"archive_write_set_filter_option");
    }
    /**
     * {@snippet :
     * int archive_write_set_filter_option(struct archive* _a, char* m, char* o, char* v);
     * }
     */
    public static int archive_write_set_filter_option(MemorySegment _a, MemorySegment m, MemorySegment o, MemorySegment v) {
        var mh$ = archive_write_set_filter_option$MH();
        try {
            return (int)mh$.invokeExact(_a, m, o, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$4,"archive_write_set_option");
    }
    /**
     * {@snippet :
     * int archive_write_set_option(struct archive* _a, char* m, char* o, char* v);
     * }
     */
    public static int archive_write_set_option(MemorySegment _a, MemorySegment m, MemorySegment o, MemorySegment v) {
        var mh$ = archive_write_set_option$MH();
        try {
            return (int)mh$.invokeExact(_a, m, o, v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_options$MH() {
        return RuntimeHelper.requireNonNull(constants$126.const$5,"archive_write_set_options");
    }
    /**
     * {@snippet :
     * int archive_write_set_options(struct archive* _a, char* opts);
     * }
     */
    public static int archive_write_set_options(MemorySegment _a, MemorySegment opts) {
        var mh$ = archive_write_set_options$MH();
        try {
            return (int)mh$.invokeExact(_a, opts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_passphrase$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$0,"archive_write_set_passphrase");
    }
    /**
     * {@snippet :
     * int archive_write_set_passphrase(struct archive* _a, char* p);
     * }
     */
    public static int archive_write_set_passphrase(MemorySegment _a, MemorySegment p) {
        var mh$ = archive_write_set_passphrase$MH();
        try {
            return (int)mh$.invokeExact(_a, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_set_passphrase_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$1,"archive_write_set_passphrase_callback");
    }
    /**
     * {@snippet :
     * int archive_write_set_passphrase_callback(struct archive*, void* client_data, archive_passphrase_callback*);
     * }
     */
    public static int archive_write_set_passphrase_callback(MemorySegment x0, MemorySegment client_data, MemorySegment x2) {
        var mh$ = archive_write_set_passphrase_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, client_data, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_new$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$2,"archive_write_disk_new");
    }
    /**
     * {@snippet :
     * struct archive* archive_write_disk_new();
     * }
     */
    public static MemorySegment archive_write_disk_new() {
        var mh$ = archive_write_disk_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_set_skip_file$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$3,"archive_write_disk_set_skip_file");
    }
    /**
     * {@snippet :
     * int archive_write_disk_set_skip_file(struct archive*, la_int64_t, la_int64_t);
     * }
     */
    public static int archive_write_disk_set_skip_file(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_write_disk_set_skip_file$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_set_options$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$4,"archive_write_disk_set_options");
    }
    /**
     * {@snippet :
     * int archive_write_disk_set_options(struct archive*, int flags);
     * }
     */
    public static int archive_write_disk_set_options(MemorySegment x0, int flags) {
        var mh$ = archive_write_disk_set_options$MH();
        try {
            return (int)mh$.invokeExact(x0, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_set_standard_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$127.const$5,"archive_write_disk_set_standard_lookup");
    }
    /**
     * {@snippet :
     * int archive_write_disk_set_standard_lookup(struct archive*);
     * }
     */
    public static int archive_write_disk_set_standard_lookup(MemorySegment x0) {
        var mh$ = archive_write_disk_set_standard_lookup$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_set_group_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$2,"archive_write_disk_set_group_lookup");
    }
    /**
     * {@snippet :
     * int archive_write_disk_set_group_lookup(struct archive*, void*, la_int64_t (*)(void*,char*,la_int64_t), void (*)(void*));
     * }
     */
    public static int archive_write_disk_set_group_lookup(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = archive_write_disk_set_group_lookup$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_set_user_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$128.const$5,"archive_write_disk_set_user_lookup");
    }
    /**
     * {@snippet :
     * int archive_write_disk_set_user_lookup(struct archive*, void*, la_int64_t (*)(void*,char*,la_int64_t), void (*)(void*));
     * }
     */
    public static int archive_write_disk_set_user_lookup(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = archive_write_disk_set_user_lookup$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_gid$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$0,"archive_write_disk_gid");
    }
    /**
     * {@snippet :
     * la_int64_t archive_write_disk_gid(struct archive*, char*, la_int64_t);
     * }
     */
    public static long archive_write_disk_gid(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = archive_write_disk_gid$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_write_disk_uid$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$1,"archive_write_disk_uid");
    }
    /**
     * {@snippet :
     * la_int64_t archive_write_disk_uid(struct archive*, char*, la_int64_t);
     * }
     */
    public static long archive_write_disk_uid(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = archive_write_disk_uid$MH();
        try {
            return (long)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_new$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$2,"archive_read_disk_new");
    }
    /**
     * {@snippet :
     * struct archive* archive_read_disk_new();
     * }
     */
    public static MemorySegment archive_read_disk_new() {
        var mh$ = archive_read_disk_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_symlink_logical$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$3,"archive_read_disk_set_symlink_logical");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_symlink_logical(struct archive*);
     * }
     */
    public static int archive_read_disk_set_symlink_logical(MemorySegment x0) {
        var mh$ = archive_read_disk_set_symlink_logical$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_symlink_physical$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$4,"archive_read_disk_set_symlink_physical");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_symlink_physical(struct archive*);
     * }
     */
    public static int archive_read_disk_set_symlink_physical(MemorySegment x0) {
        var mh$ = archive_read_disk_set_symlink_physical$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_symlink_hybrid$MH() {
        return RuntimeHelper.requireNonNull(constants$129.const$5,"archive_read_disk_set_symlink_hybrid");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_symlink_hybrid(struct archive*);
     * }
     */
    public static int archive_read_disk_set_symlink_hybrid(MemorySegment x0) {
        var mh$ = archive_read_disk_set_symlink_hybrid$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_entry_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$1,"archive_read_disk_entry_from_file");
    }
    /**
     * {@snippet :
     * int archive_read_disk_entry_from_file(struct archive*, struct archive_entry*, int, struct stat*);
     * }
     */
    public static int archive_read_disk_entry_from_file(MemorySegment x0, MemorySegment x1, int x2, MemorySegment x3) {
        var mh$ = archive_read_disk_entry_from_file$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_gname$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$2,"archive_read_disk_gname");
    }
    /**
     * {@snippet :
     * char* archive_read_disk_gname(struct archive*, la_int64_t);
     * }
     */
    public static MemorySegment archive_read_disk_gname(MemorySegment x0, long x1) {
        var mh$ = archive_read_disk_gname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_uname$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$3,"archive_read_disk_uname");
    }
    /**
     * {@snippet :
     * char* archive_read_disk_uname(struct archive*, la_int64_t);
     * }
     */
    public static MemorySegment archive_read_disk_uname(MemorySegment x0, long x1) {
        var mh$ = archive_read_disk_uname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_standard_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$130.const$4,"archive_read_disk_set_standard_lookup");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_standard_lookup(struct archive*);
     * }
     */
    public static int archive_read_disk_set_standard_lookup(MemorySegment x0) {
        var mh$ = archive_read_disk_set_standard_lookup$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_gname_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$131.const$2,"archive_read_disk_set_gname_lookup");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_gname_lookup(struct archive*, void*, char* (*)(void*,la_int64_t), void (*)(void*));
     * }
     */
    public static int archive_read_disk_set_gname_lookup(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = archive_read_disk_set_gname_lookup$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_uname_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$131.const$5,"archive_read_disk_set_uname_lookup");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_uname_lookup(struct archive*, void*, char* (*)(void*,la_int64_t), void (*)(void*));
     * }
     */
    public static int archive_read_disk_set_uname_lookup(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = archive_read_disk_set_uname_lookup$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_open$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$0,"archive_read_disk_open");
    }
    /**
     * {@snippet :
     * int archive_read_disk_open(struct archive*, char*);
     * }
     */
    public static int archive_read_disk_open(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_disk_open$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_open_w$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$1,"archive_read_disk_open_w");
    }
    /**
     * {@snippet :
     * int archive_read_disk_open_w(struct archive*, const wchar_t*);
     * }
     */
    public static int archive_read_disk_open_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_read_disk_open_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_descend$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$2,"archive_read_disk_descend");
    }
    /**
     * {@snippet :
     * int archive_read_disk_descend(struct archive*);
     * }
     */
    public static int archive_read_disk_descend(MemorySegment x0) {
        var mh$ = archive_read_disk_descend$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_can_descend$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$3,"archive_read_disk_can_descend");
    }
    /**
     * {@snippet :
     * int archive_read_disk_can_descend(struct archive*);
     * }
     */
    public static int archive_read_disk_can_descend(MemorySegment x0) {
        var mh$ = archive_read_disk_can_descend$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_current_filesystem$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$4,"archive_read_disk_current_filesystem");
    }
    /**
     * {@snippet :
     * int archive_read_disk_current_filesystem(struct archive*);
     * }
     */
    public static int archive_read_disk_current_filesystem(MemorySegment x0) {
        var mh$ = archive_read_disk_current_filesystem$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_current_filesystem_is_synthetic$MH() {
        return RuntimeHelper.requireNonNull(constants$132.const$5,"archive_read_disk_current_filesystem_is_synthetic");
    }
    /**
     * {@snippet :
     * int archive_read_disk_current_filesystem_is_synthetic(struct archive*);
     * }
     */
    public static int archive_read_disk_current_filesystem_is_synthetic(MemorySegment x0) {
        var mh$ = archive_read_disk_current_filesystem_is_synthetic$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_current_filesystem_is_remote$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$0,"archive_read_disk_current_filesystem_is_remote");
    }
    /**
     * {@snippet :
     * int archive_read_disk_current_filesystem_is_remote(struct archive*);
     * }
     */
    public static int archive_read_disk_current_filesystem_is_remote(MemorySegment x0) {
        var mh$ = archive_read_disk_current_filesystem_is_remote$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_atime_restored$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$1,"archive_read_disk_set_atime_restored");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_atime_restored(struct archive*);
     * }
     */
    public static int archive_read_disk_set_atime_restored(MemorySegment x0) {
        var mh$ = archive_read_disk_set_atime_restored$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_behavior$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$2,"archive_read_disk_set_behavior");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_behavior(struct archive*, int flags);
     * }
     */
    public static int archive_read_disk_set_behavior(MemorySegment x0, int flags) {
        var mh$ = archive_read_disk_set_behavior$MH();
        try {
            return (int)mh$.invokeExact(x0, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_matching$MH() {
        return RuntimeHelper.requireNonNull(constants$133.const$5,"archive_read_disk_set_matching");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_matching(struct archive*, struct archive* _matching, void (*_excluded_func)(struct archive*,void*,struct archive_entry*), void* _client_data);
     * }
     */
    public static int archive_read_disk_set_matching(MemorySegment x0, MemorySegment _matching, MemorySegment _excluded_func, MemorySegment _client_data) {
        var mh$ = archive_read_disk_set_matching$MH();
        try {
            return (int)mh$.invokeExact(x0, _matching, _excluded_func, _client_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_read_disk_set_metadata_filter_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$1,"archive_read_disk_set_metadata_filter_callback");
    }
    /**
     * {@snippet :
     * int archive_read_disk_set_metadata_filter_callback(struct archive*, int (*_metadata_filter_func)(struct archive*,void*,struct archive_entry*), void* _client_data);
     * }
     */
    public static int archive_read_disk_set_metadata_filter_callback(MemorySegment x0, MemorySegment _metadata_filter_func, MemorySegment _client_data) {
        var mh$ = archive_read_disk_set_metadata_filter_callback$MH();
        try {
            return (int)mh$.invokeExact(x0, _metadata_filter_func, _client_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_free$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$2,"archive_free");
    }
    /**
     * {@snippet :
     * int archive_free(struct archive*);
     * }
     */
    public static int archive_free(MemorySegment x0) {
        var mh$ = archive_free$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_filter_count$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$3,"archive_filter_count");
    }
    /**
     * {@snippet :
     * int archive_filter_count(struct archive*);
     * }
     */
    public static int archive_filter_count(MemorySegment x0) {
        var mh$ = archive_filter_count$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_filter_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$4,"archive_filter_bytes");
    }
    /**
     * {@snippet :
     * la_int64_t archive_filter_bytes(struct archive*, int);
     * }
     */
    public static long archive_filter_bytes(MemorySegment x0, int x1) {
        var mh$ = archive_filter_bytes$MH();
        try {
            return (long)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_filter_code$MH() {
        return RuntimeHelper.requireNonNull(constants$134.const$5,"archive_filter_code");
    }
    /**
     * {@snippet :
     * int archive_filter_code(struct archive*, int);
     * }
     */
    public static int archive_filter_code(MemorySegment x0, int x1) {
        var mh$ = archive_filter_code$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_filter_name$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$1,"archive_filter_name");
    }
    /**
     * {@snippet :
     * char* archive_filter_name(struct archive*, int);
     * }
     */
    public static MemorySegment archive_filter_name(MemorySegment x0, int x1) {
        var mh$ = archive_filter_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_position_compressed$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$2,"archive_position_compressed");
    }
    /**
     * {@snippet :
     * la_int64_t archive_position_compressed(struct archive*);
     * }
     */
    public static long archive_position_compressed(MemorySegment x0) {
        var mh$ = archive_position_compressed$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_position_uncompressed$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$3,"archive_position_uncompressed");
    }
    /**
     * {@snippet :
     * la_int64_t archive_position_uncompressed(struct archive*);
     * }
     */
    public static long archive_position_uncompressed(MemorySegment x0) {
        var mh$ = archive_position_uncompressed$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_compression_name$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$4,"archive_compression_name");
    }
    /**
     * {@snippet :
     * char* archive_compression_name(struct archive*);
     * }
     */
    public static MemorySegment archive_compression_name(MemorySegment x0) {
        var mh$ = archive_compression_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_compression$MH() {
        return RuntimeHelper.requireNonNull(constants$135.const$5,"archive_compression");
    }
    /**
     * {@snippet :
     * int archive_compression(struct archive*);
     * }
     */
    public static int archive_compression(MemorySegment x0) {
        var mh$ = archive_compression$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$0,"archive_errno");
    }
    /**
     * {@snippet :
     * int archive_errno(struct archive*);
     * }
     */
    public static int archive_errno(MemorySegment x0) {
        var mh$ = archive_errno$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_error_string$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$1,"archive_error_string");
    }
    /**
     * {@snippet :
     * char* archive_error_string(struct archive*);
     * }
     */
    public static MemorySegment archive_error_string(MemorySegment x0) {
        var mh$ = archive_error_string$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_format_name$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$2,"archive_format_name");
    }
    /**
     * {@snippet :
     * char* archive_format_name(struct archive*);
     * }
     */
    public static MemorySegment archive_format_name(MemorySegment x0) {
        var mh$ = archive_format_name$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_format$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$3,"archive_format");
    }
    /**
     * {@snippet :
     * int archive_format(struct archive*);
     * }
     */
    public static int archive_format(MemorySegment x0) {
        var mh$ = archive_format$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_clear_error$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$4,"archive_clear_error");
    }
    /**
     * {@snippet :
     * void archive_clear_error(struct archive*);
     * }
     */
    public static void archive_clear_error(MemorySegment x0) {
        var mh$ = archive_clear_error$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$136.const$6,"archive_set_error");
    }
    /**
     * {@snippet :
     * void archive_set_error(struct archive*, int _err, char* fmt,...);
     * }
     */
    public static void archive_set_error(MemorySegment x0, int _err, MemorySegment fmt, Object... x3) {
        var mh$ = archive_set_error$MH();
        try {
            mh$.invokeExact(x0, _err, fmt, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_copy_error$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$0,"archive_copy_error");
    }
    /**
     * {@snippet :
     * void archive_copy_error(struct archive* dest, struct archive* src);
     * }
     */
    public static void archive_copy_error(MemorySegment dest, MemorySegment src) {
        var mh$ = archive_copy_error$MH();
        try {
            mh$.invokeExact(dest, src);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_file_count$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$1,"archive_file_count");
    }
    /**
     * {@snippet :
     * int archive_file_count(struct archive*);
     * }
     */
    public static int archive_file_count(MemorySegment x0) {
        var mh$ = archive_file_count$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_new$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$2,"archive_match_new");
    }
    /**
     * {@snippet :
     * struct archive* archive_match_new();
     * }
     */
    public static MemorySegment archive_match_new() {
        var mh$ = archive_match_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_free$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$3,"archive_match_free");
    }
    /**
     * {@snippet :
     * int archive_match_free(struct archive*);
     * }
     */
    public static int archive_match_free(MemorySegment x0) {
        var mh$ = archive_match_free$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_excluded$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$4,"archive_match_excluded");
    }
    /**
     * {@snippet :
     * int archive_match_excluded(struct archive*, struct archive_entry*);
     * }
     */
    public static int archive_match_excluded(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_excluded$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_path_excluded$MH() {
        return RuntimeHelper.requireNonNull(constants$137.const$5,"archive_match_path_excluded");
    }
    /**
     * {@snippet :
     * int archive_match_path_excluded(struct archive*, struct archive_entry*);
     * }
     */
    public static int archive_match_path_excluded(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_path_excluded$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_set_inclusion_recursion$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$0,"archive_match_set_inclusion_recursion");
    }
    /**
     * {@snippet :
     * int archive_match_set_inclusion_recursion(struct archive*, int);
     * }
     */
    public static int archive_match_set_inclusion_recursion(MemorySegment x0, int x1) {
        var mh$ = archive_match_set_inclusion_recursion$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_exclude_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$1,"archive_match_exclude_pattern");
    }
    /**
     * {@snippet :
     * int archive_match_exclude_pattern(struct archive*, char*);
     * }
     */
    public static int archive_match_exclude_pattern(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_exclude_pattern$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_exclude_pattern_w$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$2,"archive_match_exclude_pattern_w");
    }
    /**
     * {@snippet :
     * int archive_match_exclude_pattern_w(struct archive*, const wchar_t*);
     * }
     */
    public static int archive_match_exclude_pattern_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_exclude_pattern_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_exclude_pattern_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$3,"archive_match_exclude_pattern_from_file");
    }
    /**
     * {@snippet :
     * int archive_match_exclude_pattern_from_file(struct archive*, char*, int _nullSeparator);
     * }
     */
    public static int archive_match_exclude_pattern_from_file(MemorySegment x0, MemorySegment x1, int _nullSeparator) {
        var mh$ = archive_match_exclude_pattern_from_file$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, _nullSeparator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_exclude_pattern_from_file_w$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$4,"archive_match_exclude_pattern_from_file_w");
    }
    /**
     * {@snippet :
     * int archive_match_exclude_pattern_from_file_w(struct archive*, const wchar_t*, int _nullSeparator);
     * }
     */
    public static int archive_match_exclude_pattern_from_file_w(MemorySegment x0, MemorySegment x1, int _nullSeparator) {
        var mh$ = archive_match_exclude_pattern_from_file_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, _nullSeparator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_pattern$MH() {
        return RuntimeHelper.requireNonNull(constants$138.const$5,"archive_match_include_pattern");
    }
    /**
     * {@snippet :
     * int archive_match_include_pattern(struct archive*, char*);
     * }
     */
    public static int archive_match_include_pattern(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_include_pattern$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_pattern_w$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$0,"archive_match_include_pattern_w");
    }
    /**
     * {@snippet :
     * int archive_match_include_pattern_w(struct archive*, const wchar_t*);
     * }
     */
    public static int archive_match_include_pattern_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_include_pattern_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_pattern_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$1,"archive_match_include_pattern_from_file");
    }
    /**
     * {@snippet :
     * int archive_match_include_pattern_from_file(struct archive*, char*, int _nullSeparator);
     * }
     */
    public static int archive_match_include_pattern_from_file(MemorySegment x0, MemorySegment x1, int _nullSeparator) {
        var mh$ = archive_match_include_pattern_from_file$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, _nullSeparator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_pattern_from_file_w$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$2,"archive_match_include_pattern_from_file_w");
    }
    /**
     * {@snippet :
     * int archive_match_include_pattern_from_file_w(struct archive*, const wchar_t*, int _nullSeparator);
     * }
     */
    public static int archive_match_include_pattern_from_file_w(MemorySegment x0, MemorySegment x1, int _nullSeparator) {
        var mh$ = archive_match_include_pattern_from_file_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, _nullSeparator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_path_unmatched_inclusions$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$3,"archive_match_path_unmatched_inclusions");
    }
    /**
     * {@snippet :
     * int archive_match_path_unmatched_inclusions(struct archive*);
     * }
     */
    public static int archive_match_path_unmatched_inclusions(MemorySegment x0) {
        var mh$ = archive_match_path_unmatched_inclusions$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_path_unmatched_inclusions_next$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$4,"archive_match_path_unmatched_inclusions_next");
    }
    /**
     * {@snippet :
     * int archive_match_path_unmatched_inclusions_next(struct archive*, char**);
     * }
     */
    public static int archive_match_path_unmatched_inclusions_next(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_path_unmatched_inclusions_next$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_path_unmatched_inclusions_next_w$MH() {
        return RuntimeHelper.requireNonNull(constants$139.const$5,"archive_match_path_unmatched_inclusions_next_w");
    }
    /**
     * {@snippet :
     * int archive_match_path_unmatched_inclusions_next_w(struct archive*, const wchar_t**);
     * }
     */
    public static int archive_match_path_unmatched_inclusions_next_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_path_unmatched_inclusions_next_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_time_excluded$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$0,"archive_match_time_excluded");
    }
    /**
     * {@snippet :
     * int archive_match_time_excluded(struct archive*, struct archive_entry*);
     * }
     */
    public static int archive_match_time_excluded(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_time_excluded$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_time$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$2,"archive_match_include_time");
    }
    /**
     * {@snippet :
     * int archive_match_include_time(struct archive*, int _flag, time_t _sec, long _nsec);
     * }
     */
    public static int archive_match_include_time(MemorySegment x0, int _flag, long _sec, long _nsec) {
        var mh$ = archive_match_include_time$MH();
        try {
            return (int)mh$.invokeExact(x0, _flag, _sec, _nsec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_date$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$3,"archive_match_include_date");
    }
    /**
     * {@snippet :
     * int archive_match_include_date(struct archive*, int _flag, char* _datestr);
     * }
     */
    public static int archive_match_include_date(MemorySegment x0, int _flag, MemorySegment _datestr) {
        var mh$ = archive_match_include_date$MH();
        try {
            return (int)mh$.invokeExact(x0, _flag, _datestr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_date_w$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$4,"archive_match_include_date_w");
    }
    /**
     * {@snippet :
     * int archive_match_include_date_w(struct archive*, int _flag, const wchar_t* _datestr);
     * }
     */
    public static int archive_match_include_date_w(MemorySegment x0, int _flag, MemorySegment _datestr) {
        var mh$ = archive_match_include_date_w$MH();
        try {
            return (int)mh$.invokeExact(x0, _flag, _datestr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_file_time$MH() {
        return RuntimeHelper.requireNonNull(constants$140.const$5,"archive_match_include_file_time");
    }
    /**
     * {@snippet :
     * int archive_match_include_file_time(struct archive*, int _flag, char* _pathname);
     * }
     */
    public static int archive_match_include_file_time(MemorySegment x0, int _flag, MemorySegment _pathname) {
        var mh$ = archive_match_include_file_time$MH();
        try {
            return (int)mh$.invokeExact(x0, _flag, _pathname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_file_time_w$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$0,"archive_match_include_file_time_w");
    }
    /**
     * {@snippet :
     * int archive_match_include_file_time_w(struct archive*, int _flag, const wchar_t* _pathname);
     * }
     */
    public static int archive_match_include_file_time_w(MemorySegment x0, int _flag, MemorySegment _pathname) {
        var mh$ = archive_match_include_file_time_w$MH();
        try {
            return (int)mh$.invokeExact(x0, _flag, _pathname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_exclude_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$1,"archive_match_exclude_entry");
    }
    /**
     * {@snippet :
     * int archive_match_exclude_entry(struct archive*, int _flag, struct archive_entry*);
     * }
     */
    public static int archive_match_exclude_entry(MemorySegment x0, int _flag, MemorySegment x2) {
        var mh$ = archive_match_exclude_entry$MH();
        try {
            return (int)mh$.invokeExact(x0, _flag, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_owner_excluded$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$2,"archive_match_owner_excluded");
    }
    /**
     * {@snippet :
     * int archive_match_owner_excluded(struct archive*, struct archive_entry*);
     * }
     */
    public static int archive_match_owner_excluded(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_owner_excluded$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_uid$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$3,"archive_match_include_uid");
    }
    /**
     * {@snippet :
     * int archive_match_include_uid(struct archive*, la_int64_t);
     * }
     */
    public static int archive_match_include_uid(MemorySegment x0, long x1) {
        var mh$ = archive_match_include_uid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_gid$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$4,"archive_match_include_gid");
    }
    /**
     * {@snippet :
     * int archive_match_include_gid(struct archive*, la_int64_t);
     * }
     */
    public static int archive_match_include_gid(MemorySegment x0, long x1) {
        var mh$ = archive_match_include_gid$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_uname$MH() {
        return RuntimeHelper.requireNonNull(constants$141.const$5,"archive_match_include_uname");
    }
    /**
     * {@snippet :
     * int archive_match_include_uname(struct archive*, char*);
     * }
     */
    public static int archive_match_include_uname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_include_uname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_uname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$0,"archive_match_include_uname_w");
    }
    /**
     * {@snippet :
     * int archive_match_include_uname_w(struct archive*, const wchar_t*);
     * }
     */
    public static int archive_match_include_uname_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_include_uname_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_gname$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$1,"archive_match_include_gname");
    }
    /**
     * {@snippet :
     * int archive_match_include_gname(struct archive*, char*);
     * }
     */
    public static int archive_match_include_gname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_include_gname$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_match_include_gname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$2,"archive_match_include_gname_w");
    }
    /**
     * {@snippet :
     * int archive_match_include_gname_w(struct archive*, const wchar_t*);
     * }
     */
    public static int archive_match_include_gname_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_match_include_gname_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_utility_string_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$3,"archive_utility_string_sort");
    }
    /**
     * {@snippet :
     * int archive_utility_string_sort(char**);
     * }
     */
    public static int archive_utility_string_sort(MemorySegment x0) {
        var mh$ = archive_utility_string_sort$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned char u_char;
     * }
     */
    public static final OfByte u_char = JAVA_BYTE;
    /**
     * {@snippet :
     * typedef unsigned short u_short;
     * }
     */
    public static final OfShort u_short = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int u_int;
     * }
     */
    public static final OfInt u_int = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long u_long;
     * }
     */
    public static final OfLong u_long = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned short ushort;
     * }
     */
    public static final OfShort ushort = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef unsigned int uint;
     * }
     */
    public static final OfInt uint = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned long long u_quad_t;
     * }
     */
    public static final OfLong u_quad_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long long quad_t;
     * }
     */
    public static final OfLong quad_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef long long* qaddr_t;
     * }
     */
    public static final AddressLayout qaddr_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef char* caddr_t;
     * }
     */
    public static final AddressLayout caddr_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef int daddr_t;
     * }
     */
    public static final OfInt daddr_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int fixpt_t;
     * }
     */
    public static final OfInt fixpt_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int in_addr_t;
     * }
     */
    public static final OfInt in_addr_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned short in_port_t;
     * }
     */
    public static final OfShort in_port_t = JAVA_SHORT;
    /**
     * {@snippet :
     * typedef int key_t;
     * }
     */
    public static final OfInt key_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int id_t;
     * }
     */
    public static final OfInt id_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int segsz_t;
     * }
     */
    public static final OfInt segsz_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int swblk_t;
     * }
     */
    public static final OfInt swblk_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int errno_t;
     * }
     */
    public static final OfInt errno_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef int fd_mask;
     * }
     */
    public static final OfInt fd_mask = JAVA_INT;
    /**
     * {@snippet :
     * typedef struct _opaque_pthread_t* pthread_t;
     * }
     */
    public static final AddressLayout pthread_t = RuntimeHelper.POINTER;
    /**
     * {@snippet :
     * typedef unsigned long pthread_key_t;
     * }
     */
    public static final OfLong pthread_key_t = JAVA_LONG;
    /**
     * {@snippet :
     * typedef unsigned int fsblkcnt_t;
     * }
     */
    public static final OfInt fsblkcnt_t = JAVA_INT;
    /**
     * {@snippet :
     * typedef unsigned int fsfilcnt_t;
     * }
     */
    public static final OfInt fsfilcnt_t = JAVA_INT;
    public static MethodHandle archive_entry_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$4,"archive_entry_clear");
    }
    /**
     * {@snippet :
     * struct archive_entry* archive_entry_clear(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_clear(MemorySegment x0) {
        var mh$ = archive_entry_clear$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_clone$MH() {
        return RuntimeHelper.requireNonNull(constants$142.const$5,"archive_entry_clone");
    }
    /**
     * {@snippet :
     * struct archive_entry* archive_entry_clone(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_clone(MemorySegment x0) {
        var mh$ = archive_entry_clone$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_free$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$0,"archive_entry_free");
    }
    /**
     * {@snippet :
     * void archive_entry_free(struct archive_entry*);
     * }
     */
    public static void archive_entry_free(MemorySegment x0) {
        var mh$ = archive_entry_free$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_new$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$1,"archive_entry_new");
    }
    /**
     * {@snippet :
     * struct archive_entry* archive_entry_new();
     * }
     */
    public static MemorySegment archive_entry_new() {
        var mh$ = archive_entry_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_new2$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$2,"archive_entry_new2");
    }
    /**
     * {@snippet :
     * struct archive_entry* archive_entry_new2(struct archive*);
     * }
     */
    public static MemorySegment archive_entry_new2(MemorySegment x0) {
        var mh$ = archive_entry_new2$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_atime$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$3,"archive_entry_atime");
    }
    /**
     * {@snippet :
     * time_t archive_entry_atime(struct archive_entry*);
     * }
     */
    public static long archive_entry_atime(MemorySegment x0) {
        var mh$ = archive_entry_atime$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_atime_nsec$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$4,"archive_entry_atime_nsec");
    }
    /**
     * {@snippet :
     * long archive_entry_atime_nsec(struct archive_entry*);
     * }
     */
    public static long archive_entry_atime_nsec(MemorySegment x0) {
        var mh$ = archive_entry_atime_nsec$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_atime_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$143.const$5,"archive_entry_atime_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_atime_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_atime_is_set(MemorySegment x0) {
        var mh$ = archive_entry_atime_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_birthtime$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$0,"archive_entry_birthtime");
    }
    /**
     * {@snippet :
     * time_t archive_entry_birthtime(struct archive_entry*);
     * }
     */
    public static long archive_entry_birthtime(MemorySegment x0) {
        var mh$ = archive_entry_birthtime$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_birthtime_nsec$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$1,"archive_entry_birthtime_nsec");
    }
    /**
     * {@snippet :
     * long archive_entry_birthtime_nsec(struct archive_entry*);
     * }
     */
    public static long archive_entry_birthtime_nsec(MemorySegment x0) {
        var mh$ = archive_entry_birthtime_nsec$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_birthtime_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$2,"archive_entry_birthtime_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_birthtime_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_birthtime_is_set(MemorySegment x0) {
        var mh$ = archive_entry_birthtime_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_ctime$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$3,"archive_entry_ctime");
    }
    /**
     * {@snippet :
     * time_t archive_entry_ctime(struct archive_entry*);
     * }
     */
    public static long archive_entry_ctime(MemorySegment x0) {
        var mh$ = archive_entry_ctime$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_ctime_nsec$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$4,"archive_entry_ctime_nsec");
    }
    /**
     * {@snippet :
     * long archive_entry_ctime_nsec(struct archive_entry*);
     * }
     */
    public static long archive_entry_ctime_nsec(MemorySegment x0) {
        var mh$ = archive_entry_ctime_nsec$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_ctime_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$144.const$5,"archive_entry_ctime_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_ctime_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_ctime_is_set(MemorySegment x0) {
        var mh$ = archive_entry_ctime_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_dev$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$0,"archive_entry_dev");
    }
    /**
     * {@snippet :
     * dev_t archive_entry_dev(struct archive_entry*);
     * }
     */
    public static int archive_entry_dev(MemorySegment x0) {
        var mh$ = archive_entry_dev$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_dev_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$1,"archive_entry_dev_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_dev_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_dev_is_set(MemorySegment x0) {
        var mh$ = archive_entry_dev_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_devmajor$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$2,"archive_entry_devmajor");
    }
    /**
     * {@snippet :
     * dev_t archive_entry_devmajor(struct archive_entry*);
     * }
     */
    public static int archive_entry_devmajor(MemorySegment x0) {
        var mh$ = archive_entry_devmajor$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_devminor$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$3,"archive_entry_devminor");
    }
    /**
     * {@snippet :
     * dev_t archive_entry_devminor(struct archive_entry*);
     * }
     */
    public static int archive_entry_devminor(MemorySegment x0) {
        var mh$ = archive_entry_devminor$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_filetype$MH() {
        return RuntimeHelper.requireNonNull(constants$145.const$5,"archive_entry_filetype");
    }
    /**
     * {@snippet :
     * mode_t archive_entry_filetype(struct archive_entry*);
     * }
     */
    public static short archive_entry_filetype(MemorySegment x0) {
        var mh$ = archive_entry_filetype$MH();
        try {
            return (short)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_fflags$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$0,"archive_entry_fflags");
    }
    /**
     * {@snippet :
     * void archive_entry_fflags(struct archive_entry*, unsigned long*, unsigned long*);
     * }
     */
    public static void archive_entry_fflags(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = archive_entry_fflags$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_fflags_text$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$1,"archive_entry_fflags_text");
    }
    /**
     * {@snippet :
     * char* archive_entry_fflags_text(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_fflags_text(MemorySegment x0) {
        var mh$ = archive_entry_fflags_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_gid$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$2,"archive_entry_gid");
    }
    /**
     * {@snippet :
     * la_int64_t archive_entry_gid(struct archive_entry*);
     * }
     */
    public static long archive_entry_gid(MemorySegment x0) {
        var mh$ = archive_entry_gid$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_gname$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$3,"archive_entry_gname");
    }
    /**
     * {@snippet :
     * char* archive_entry_gname(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_gname(MemorySegment x0) {
        var mh$ = archive_entry_gname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_gname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$4,"archive_entry_gname_utf8");
    }
    /**
     * {@snippet :
     * char* archive_entry_gname_utf8(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_gname_utf8(MemorySegment x0) {
        var mh$ = archive_entry_gname_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_gname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$146.const$5,"archive_entry_gname_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_gname_w(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_gname_w(MemorySegment x0) {
        var mh$ = archive_entry_gname_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_hardlink$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$0,"archive_entry_hardlink");
    }
    /**
     * {@snippet :
     * char* archive_entry_hardlink(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_hardlink(MemorySegment x0) {
        var mh$ = archive_entry_hardlink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_hardlink_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$1,"archive_entry_hardlink_utf8");
    }
    /**
     * {@snippet :
     * char* archive_entry_hardlink_utf8(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_hardlink_utf8(MemorySegment x0) {
        var mh$ = archive_entry_hardlink_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_hardlink_w$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$2,"archive_entry_hardlink_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_hardlink_w(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_hardlink_w(MemorySegment x0) {
        var mh$ = archive_entry_hardlink_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_ino$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$3,"archive_entry_ino");
    }
    /**
     * {@snippet :
     * la_int64_t archive_entry_ino(struct archive_entry*);
     * }
     */
    public static long archive_entry_ino(MemorySegment x0) {
        var mh$ = archive_entry_ino$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_ino64$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$4,"archive_entry_ino64");
    }
    /**
     * {@snippet :
     * la_int64_t archive_entry_ino64(struct archive_entry*);
     * }
     */
    public static long archive_entry_ino64(MemorySegment x0) {
        var mh$ = archive_entry_ino64$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_ino_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$147.const$5,"archive_entry_ino_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_ino_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_ino_is_set(MemorySegment x0) {
        var mh$ = archive_entry_ino_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$0,"archive_entry_mode");
    }
    /**
     * {@snippet :
     * mode_t archive_entry_mode(struct archive_entry*);
     * }
     */
    public static short archive_entry_mode(MemorySegment x0) {
        var mh$ = archive_entry_mode$MH();
        try {
            return (short)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_mtime$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$1,"archive_entry_mtime");
    }
    /**
     * {@snippet :
     * time_t archive_entry_mtime(struct archive_entry*);
     * }
     */
    public static long archive_entry_mtime(MemorySegment x0) {
        var mh$ = archive_entry_mtime$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_mtime_nsec$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$2,"archive_entry_mtime_nsec");
    }
    /**
     * {@snippet :
     * long archive_entry_mtime_nsec(struct archive_entry*);
     * }
     */
    public static long archive_entry_mtime_nsec(MemorySegment x0) {
        var mh$ = archive_entry_mtime_nsec$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_mtime_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$3,"archive_entry_mtime_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_mtime_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_mtime_is_set(MemorySegment x0) {
        var mh$ = archive_entry_mtime_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_nlink$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$4,"archive_entry_nlink");
    }
    /**
     * {@snippet :
     * unsigned int archive_entry_nlink(struct archive_entry*);
     * }
     */
    public static int archive_entry_nlink(MemorySegment x0) {
        var mh$ = archive_entry_nlink$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_pathname$MH() {
        return RuntimeHelper.requireNonNull(constants$148.const$5,"archive_entry_pathname");
    }
    /**
     * {@snippet :
     * char* archive_entry_pathname(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_pathname(MemorySegment x0) {
        var mh$ = archive_entry_pathname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_pathname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$0,"archive_entry_pathname_utf8");
    }
    /**
     * {@snippet :
     * char* archive_entry_pathname_utf8(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_pathname_utf8(MemorySegment x0) {
        var mh$ = archive_entry_pathname_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_pathname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$1,"archive_entry_pathname_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_pathname_w(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_pathname_w(MemorySegment x0) {
        var mh$ = archive_entry_pathname_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_perm$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$2,"archive_entry_perm");
    }
    /**
     * {@snippet :
     * mode_t archive_entry_perm(struct archive_entry*);
     * }
     */
    public static short archive_entry_perm(MemorySegment x0) {
        var mh$ = archive_entry_perm$MH();
        try {
            return (short)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_rdev$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$3,"archive_entry_rdev");
    }
    /**
     * {@snippet :
     * dev_t archive_entry_rdev(struct archive_entry*);
     * }
     */
    public static int archive_entry_rdev(MemorySegment x0) {
        var mh$ = archive_entry_rdev$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_rdevmajor$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$4,"archive_entry_rdevmajor");
    }
    /**
     * {@snippet :
     * dev_t archive_entry_rdevmajor(struct archive_entry*);
     * }
     */
    public static int archive_entry_rdevmajor(MemorySegment x0) {
        var mh$ = archive_entry_rdevmajor$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_rdevminor$MH() {
        return RuntimeHelper.requireNonNull(constants$149.const$5,"archive_entry_rdevminor");
    }
    /**
     * {@snippet :
     * dev_t archive_entry_rdevminor(struct archive_entry*);
     * }
     */
    public static int archive_entry_rdevminor(MemorySegment x0) {
        var mh$ = archive_entry_rdevminor$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sourcepath$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$0,"archive_entry_sourcepath");
    }
    /**
     * {@snippet :
     * char* archive_entry_sourcepath(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_sourcepath(MemorySegment x0) {
        var mh$ = archive_entry_sourcepath$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sourcepath_w$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$1,"archive_entry_sourcepath_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_sourcepath_w(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_sourcepath_w(MemorySegment x0) {
        var mh$ = archive_entry_sourcepath_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_size$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$2,"archive_entry_size");
    }
    /**
     * {@snippet :
     * la_int64_t archive_entry_size(struct archive_entry*);
     * }
     */
    public static long archive_entry_size(MemorySegment x0) {
        var mh$ = archive_entry_size$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_size_is_set$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$3,"archive_entry_size_is_set");
    }
    /**
     * {@snippet :
     * int archive_entry_size_is_set(struct archive_entry*);
     * }
     */
    public static int archive_entry_size_is_set(MemorySegment x0) {
        var mh$ = archive_entry_size_is_set$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_strmode$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$4,"archive_entry_strmode");
    }
    /**
     * {@snippet :
     * char* archive_entry_strmode(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_strmode(MemorySegment x0) {
        var mh$ = archive_entry_strmode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$150.const$5,"archive_entry_symlink");
    }
    /**
     * {@snippet :
     * char* archive_entry_symlink(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_symlink(MemorySegment x0) {
        var mh$ = archive_entry_symlink$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_symlink_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$0,"archive_entry_symlink_utf8");
    }
    /**
     * {@snippet :
     * char* archive_entry_symlink_utf8(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_symlink_utf8(MemorySegment x0) {
        var mh$ = archive_entry_symlink_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_symlink_type$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$1,"archive_entry_symlink_type");
    }
    /**
     * {@snippet :
     * int archive_entry_symlink_type(struct archive_entry*);
     * }
     */
    public static int archive_entry_symlink_type(MemorySegment x0) {
        var mh$ = archive_entry_symlink_type$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_symlink_w$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$2,"archive_entry_symlink_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_symlink_w(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_symlink_w(MemorySegment x0) {
        var mh$ = archive_entry_symlink_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_uid$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$3,"archive_entry_uid");
    }
    /**
     * {@snippet :
     * la_int64_t archive_entry_uid(struct archive_entry*);
     * }
     */
    public static long archive_entry_uid(MemorySegment x0) {
        var mh$ = archive_entry_uid$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_uname$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$4,"archive_entry_uname");
    }
    /**
     * {@snippet :
     * char* archive_entry_uname(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_uname(MemorySegment x0) {
        var mh$ = archive_entry_uname$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_uname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$151.const$5,"archive_entry_uname_utf8");
    }
    /**
     * {@snippet :
     * char* archive_entry_uname_utf8(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_uname_utf8(MemorySegment x0) {
        var mh$ = archive_entry_uname_utf8$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_uname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$0,"archive_entry_uname_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_uname_w(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_uname_w(MemorySegment x0) {
        var mh$ = archive_entry_uname_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_is_data_encrypted$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$1,"archive_entry_is_data_encrypted");
    }
    /**
     * {@snippet :
     * int archive_entry_is_data_encrypted(struct archive_entry*);
     * }
     */
    public static int archive_entry_is_data_encrypted(MemorySegment x0) {
        var mh$ = archive_entry_is_data_encrypted$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_is_metadata_encrypted$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$2,"archive_entry_is_metadata_encrypted");
    }
    /**
     * {@snippet :
     * int archive_entry_is_metadata_encrypted(struct archive_entry*);
     * }
     */
    public static int archive_entry_is_metadata_encrypted(MemorySegment x0) {
        var mh$ = archive_entry_is_metadata_encrypted$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_is_encrypted$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$3,"archive_entry_is_encrypted");
    }
    /**
     * {@snippet :
     * int archive_entry_is_encrypted(struct archive_entry*);
     * }
     */
    public static int archive_entry_is_encrypted(MemorySegment x0) {
        var mh$ = archive_entry_is_encrypted$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_atime$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$4,"archive_entry_set_atime");
    }
    /**
     * {@snippet :
     * void archive_entry_set_atime(struct archive_entry*, time_t, long);
     * }
     */
    public static void archive_entry_set_atime(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_entry_set_atime$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_unset_atime$MH() {
        return RuntimeHelper.requireNonNull(constants$152.const$5,"archive_entry_unset_atime");
    }
    /**
     * {@snippet :
     * void archive_entry_unset_atime(struct archive_entry*);
     * }
     */
    public static void archive_entry_unset_atime(MemorySegment x0) {
        var mh$ = archive_entry_unset_atime$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_birthtime$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$0,"archive_entry_set_birthtime");
    }
    /**
     * {@snippet :
     * void archive_entry_set_birthtime(struct archive_entry*, time_t, long);
     * }
     */
    public static void archive_entry_set_birthtime(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_entry_set_birthtime$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_unset_birthtime$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$1,"archive_entry_unset_birthtime");
    }
    /**
     * {@snippet :
     * void archive_entry_unset_birthtime(struct archive_entry*);
     * }
     */
    public static void archive_entry_unset_birthtime(MemorySegment x0) {
        var mh$ = archive_entry_unset_birthtime$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_ctime$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$2,"archive_entry_set_ctime");
    }
    /**
     * {@snippet :
     * void archive_entry_set_ctime(struct archive_entry*, time_t, long);
     * }
     */
    public static void archive_entry_set_ctime(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_entry_set_ctime$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_unset_ctime$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$3,"archive_entry_unset_ctime");
    }
    /**
     * {@snippet :
     * void archive_entry_unset_ctime(struct archive_entry*);
     * }
     */
    public static void archive_entry_unset_ctime(MemorySegment x0) {
        var mh$ = archive_entry_unset_ctime$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_dev$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$4,"archive_entry_set_dev");
    }
    /**
     * {@snippet :
     * void archive_entry_set_dev(struct archive_entry*, dev_t);
     * }
     */
    public static void archive_entry_set_dev(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_dev$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_devmajor$MH() {
        return RuntimeHelper.requireNonNull(constants$153.const$5,"archive_entry_set_devmajor");
    }
    /**
     * {@snippet :
     * void archive_entry_set_devmajor(struct archive_entry*, dev_t);
     * }
     */
    public static void archive_entry_set_devmajor(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_devmajor$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_devminor$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$0,"archive_entry_set_devminor");
    }
    /**
     * {@snippet :
     * void archive_entry_set_devminor(struct archive_entry*, dev_t);
     * }
     */
    public static void archive_entry_set_devminor(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_devminor$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_filetype$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$1,"archive_entry_set_filetype");
    }
    /**
     * {@snippet :
     * void archive_entry_set_filetype(struct archive_entry*, unsigned int);
     * }
     */
    public static void archive_entry_set_filetype(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_filetype$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_fflags$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$2,"archive_entry_set_fflags");
    }
    /**
     * {@snippet :
     * void archive_entry_set_fflags(struct archive_entry*, unsigned long, unsigned long);
     * }
     */
    public static void archive_entry_set_fflags(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_entry_set_fflags$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_fflags_text$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$3,"archive_entry_copy_fflags_text");
    }
    /**
     * {@snippet :
     * char* archive_entry_copy_fflags_text(struct archive_entry*, char*);
     * }
     */
    public static MemorySegment archive_entry_copy_fflags_text(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_fflags_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_fflags_text_w$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$4,"archive_entry_copy_fflags_text_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_copy_fflags_text_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static MemorySegment archive_entry_copy_fflags_text_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_fflags_text_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_gid$MH() {
        return RuntimeHelper.requireNonNull(constants$154.const$6,"archive_entry_set_gid");
    }
    /**
     * {@snippet :
     * void archive_entry_set_gid(struct archive_entry*, la_int64_t);
     * }
     */
    public static void archive_entry_set_gid(MemorySegment x0, long x1) {
        var mh$ = archive_entry_set_gid$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_gname$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$0,"archive_entry_set_gname");
    }
    /**
     * {@snippet :
     * void archive_entry_set_gname(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_gname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_gname$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_gname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$1,"archive_entry_set_gname_utf8");
    }
    /**
     * {@snippet :
     * void archive_entry_set_gname_utf8(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_gname_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_gname_utf8$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_gname$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$2,"archive_entry_copy_gname");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_gname(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_gname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_gname$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_gname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$3,"archive_entry_copy_gname_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_gname_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_gname_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_gname_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_update_gname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$4,"archive_entry_update_gname_utf8");
    }
    /**
     * {@snippet :
     * int archive_entry_update_gname_utf8(struct archive_entry*, char*);
     * }
     */
    public static int archive_entry_update_gname_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_update_gname_utf8$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_hardlink$MH() {
        return RuntimeHelper.requireNonNull(constants$155.const$5,"archive_entry_set_hardlink");
    }
    /**
     * {@snippet :
     * void archive_entry_set_hardlink(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_hardlink(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_hardlink$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_hardlink_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$156.const$0,"archive_entry_set_hardlink_utf8");
    }
    /**
     * {@snippet :
     * void archive_entry_set_hardlink_utf8(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_hardlink_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_hardlink_utf8$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_hardlink$MH() {
        return RuntimeHelper.requireNonNull(constants$156.const$1,"archive_entry_copy_hardlink");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_hardlink(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_hardlink(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_hardlink$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_hardlink_w$MH() {
        return RuntimeHelper.requireNonNull(constants$156.const$2,"archive_entry_copy_hardlink_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_hardlink_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_hardlink_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_hardlink_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_update_hardlink_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$156.const$3,"archive_entry_update_hardlink_utf8");
    }
    /**
     * {@snippet :
     * int archive_entry_update_hardlink_utf8(struct archive_entry*, char*);
     * }
     */
    public static int archive_entry_update_hardlink_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_update_hardlink_utf8$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_ino$MH() {
        return RuntimeHelper.requireNonNull(constants$156.const$4,"archive_entry_set_ino");
    }
    /**
     * {@snippet :
     * void archive_entry_set_ino(struct archive_entry*, la_int64_t);
     * }
     */
    public static void archive_entry_set_ino(MemorySegment x0, long x1) {
        var mh$ = archive_entry_set_ino$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_ino64$MH() {
        return RuntimeHelper.requireNonNull(constants$156.const$5,"archive_entry_set_ino64");
    }
    /**
     * {@snippet :
     * void archive_entry_set_ino64(struct archive_entry*, la_int64_t);
     * }
     */
    public static void archive_entry_set_ino64(MemorySegment x0, long x1) {
        var mh$ = archive_entry_set_ino64$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_link$MH() {
        return RuntimeHelper.requireNonNull(constants$157.const$0,"archive_entry_set_link");
    }
    /**
     * {@snippet :
     * void archive_entry_set_link(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_link(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_link$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_link_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$157.const$1,"archive_entry_set_link_utf8");
    }
    /**
     * {@snippet :
     * void archive_entry_set_link_utf8(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_link_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_link_utf8$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_link$MH() {
        return RuntimeHelper.requireNonNull(constants$157.const$2,"archive_entry_copy_link");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_link(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_link(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_link$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_link_w$MH() {
        return RuntimeHelper.requireNonNull(constants$157.const$3,"archive_entry_copy_link_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_link_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_link_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_link_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_update_link_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$157.const$4,"archive_entry_update_link_utf8");
    }
    /**
     * {@snippet :
     * int archive_entry_update_link_utf8(struct archive_entry*, char*);
     * }
     */
    public static int archive_entry_update_link_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_update_link_utf8$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$157.const$6,"archive_entry_set_mode");
    }
    /**
     * {@snippet :
     * void archive_entry_set_mode(struct archive_entry*, mode_t);
     * }
     */
    public static void archive_entry_set_mode(MemorySegment x0, short x1) {
        var mh$ = archive_entry_set_mode$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_mtime$MH() {
        return RuntimeHelper.requireNonNull(constants$158.const$0,"archive_entry_set_mtime");
    }
    /**
     * {@snippet :
     * void archive_entry_set_mtime(struct archive_entry*, time_t, long);
     * }
     */
    public static void archive_entry_set_mtime(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_entry_set_mtime$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_unset_mtime$MH() {
        return RuntimeHelper.requireNonNull(constants$158.const$1,"archive_entry_unset_mtime");
    }
    /**
     * {@snippet :
     * void archive_entry_unset_mtime(struct archive_entry*);
     * }
     */
    public static void archive_entry_unset_mtime(MemorySegment x0) {
        var mh$ = archive_entry_unset_mtime$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_nlink$MH() {
        return RuntimeHelper.requireNonNull(constants$158.const$2,"archive_entry_set_nlink");
    }
    /**
     * {@snippet :
     * void archive_entry_set_nlink(struct archive_entry*, unsigned int);
     * }
     */
    public static void archive_entry_set_nlink(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_nlink$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_pathname$MH() {
        return RuntimeHelper.requireNonNull(constants$158.const$3,"archive_entry_set_pathname");
    }
    /**
     * {@snippet :
     * void archive_entry_set_pathname(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_pathname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_pathname$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_pathname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$158.const$4,"archive_entry_set_pathname_utf8");
    }
    /**
     * {@snippet :
     * void archive_entry_set_pathname_utf8(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_pathname_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_pathname_utf8$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_pathname$MH() {
        return RuntimeHelper.requireNonNull(constants$158.const$5,"archive_entry_copy_pathname");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_pathname(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_pathname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_pathname$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_pathname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$159.const$0,"archive_entry_copy_pathname_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_pathname_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_pathname_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_pathname_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_update_pathname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$159.const$1,"archive_entry_update_pathname_utf8");
    }
    /**
     * {@snippet :
     * int archive_entry_update_pathname_utf8(struct archive_entry*, char*);
     * }
     */
    public static int archive_entry_update_pathname_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_update_pathname_utf8$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_perm$MH() {
        return RuntimeHelper.requireNonNull(constants$159.const$2,"archive_entry_set_perm");
    }
    /**
     * {@snippet :
     * void archive_entry_set_perm(struct archive_entry*, mode_t);
     * }
     */
    public static void archive_entry_set_perm(MemorySegment x0, short x1) {
        var mh$ = archive_entry_set_perm$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_rdev$MH() {
        return RuntimeHelper.requireNonNull(constants$159.const$3,"archive_entry_set_rdev");
    }
    /**
     * {@snippet :
     * void archive_entry_set_rdev(struct archive_entry*, dev_t);
     * }
     */
    public static void archive_entry_set_rdev(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_rdev$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_rdevmajor$MH() {
        return RuntimeHelper.requireNonNull(constants$159.const$4,"archive_entry_set_rdevmajor");
    }
    /**
     * {@snippet :
     * void archive_entry_set_rdevmajor(struct archive_entry*, dev_t);
     * }
     */
    public static void archive_entry_set_rdevmajor(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_rdevmajor$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_rdevminor$MH() {
        return RuntimeHelper.requireNonNull(constants$159.const$5,"archive_entry_set_rdevminor");
    }
    /**
     * {@snippet :
     * void archive_entry_set_rdevminor(struct archive_entry*, dev_t);
     * }
     */
    public static void archive_entry_set_rdevminor(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_rdevminor$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$160.const$0,"archive_entry_set_size");
    }
    /**
     * {@snippet :
     * void archive_entry_set_size(struct archive_entry*, la_int64_t);
     * }
     */
    public static void archive_entry_set_size(MemorySegment x0, long x1) {
        var mh$ = archive_entry_set_size$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_unset_size$MH() {
        return RuntimeHelper.requireNonNull(constants$160.const$1,"archive_entry_unset_size");
    }
    /**
     * {@snippet :
     * void archive_entry_unset_size(struct archive_entry*);
     * }
     */
    public static void archive_entry_unset_size(MemorySegment x0) {
        var mh$ = archive_entry_unset_size$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_sourcepath$MH() {
        return RuntimeHelper.requireNonNull(constants$160.const$2,"archive_entry_copy_sourcepath");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_sourcepath(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_sourcepath(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_sourcepath$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_sourcepath_w$MH() {
        return RuntimeHelper.requireNonNull(constants$160.const$3,"archive_entry_copy_sourcepath_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_sourcepath_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_sourcepath_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_sourcepath_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$160.const$4,"archive_entry_set_symlink");
    }
    /**
     * {@snippet :
     * void archive_entry_set_symlink(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_symlink(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_symlink$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_symlink_type$MH() {
        return RuntimeHelper.requireNonNull(constants$160.const$5,"archive_entry_set_symlink_type");
    }
    /**
     * {@snippet :
     * void archive_entry_set_symlink_type(struct archive_entry*, int);
     * }
     */
    public static void archive_entry_set_symlink_type(MemorySegment x0, int x1) {
        var mh$ = archive_entry_set_symlink_type$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_symlink_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$0,"archive_entry_set_symlink_utf8");
    }
    /**
     * {@snippet :
     * void archive_entry_set_symlink_utf8(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_symlink_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_symlink_utf8$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$1,"archive_entry_copy_symlink");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_symlink(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_symlink(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_symlink$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_symlink_w$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$2,"archive_entry_copy_symlink_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_symlink_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_symlink_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_symlink_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_update_symlink_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$3,"archive_entry_update_symlink_utf8");
    }
    /**
     * {@snippet :
     * int archive_entry_update_symlink_utf8(struct archive_entry*, char*);
     * }
     */
    public static int archive_entry_update_symlink_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_update_symlink_utf8$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_uid$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$4,"archive_entry_set_uid");
    }
    /**
     * {@snippet :
     * void archive_entry_set_uid(struct archive_entry*, la_int64_t);
     * }
     */
    public static void archive_entry_set_uid(MemorySegment x0, long x1) {
        var mh$ = archive_entry_set_uid$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_uname$MH() {
        return RuntimeHelper.requireNonNull(constants$161.const$5,"archive_entry_set_uname");
    }
    /**
     * {@snippet :
     * void archive_entry_set_uname(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_uname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_uname$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_uname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$0,"archive_entry_set_uname_utf8");
    }
    /**
     * {@snippet :
     * void archive_entry_set_uname_utf8(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_set_uname_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_set_uname_utf8$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_uname$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$1,"archive_entry_copy_uname");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_uname(struct archive_entry*, char*);
     * }
     */
    public static void archive_entry_copy_uname(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_uname$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_uname_w$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$2,"archive_entry_copy_uname_w");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_uname_w(struct archive_entry*, const wchar_t*);
     * }
     */
    public static void archive_entry_copy_uname_w(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_uname_w$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_update_uname_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$3,"archive_entry_update_uname_utf8");
    }
    /**
     * {@snippet :
     * int archive_entry_update_uname_utf8(struct archive_entry*, char*);
     * }
     */
    public static int archive_entry_update_uname_utf8(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_update_uname_utf8$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_is_data_encrypted$MH() {
        return RuntimeHelper.requireNonNull(constants$162.const$5,"archive_entry_set_is_data_encrypted");
    }
    /**
     * {@snippet :
     * void archive_entry_set_is_data_encrypted(struct archive_entry*, char is_encrypted);
     * }
     */
    public static void archive_entry_set_is_data_encrypted(MemorySegment x0, byte is_encrypted) {
        var mh$ = archive_entry_set_is_data_encrypted$MH();
        try {
            mh$.invokeExact(x0, is_encrypted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_set_is_metadata_encrypted$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$0,"archive_entry_set_is_metadata_encrypted");
    }
    /**
     * {@snippet :
     * void archive_entry_set_is_metadata_encrypted(struct archive_entry*, char is_encrypted);
     * }
     */
    public static void archive_entry_set_is_metadata_encrypted(MemorySegment x0, byte is_encrypted) {
        var mh$ = archive_entry_set_is_metadata_encrypted$MH();
        try {
            mh$.invokeExact(x0, is_encrypted);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_stat$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$1,"archive_entry_stat");
    }
    /**
     * {@snippet :
     * struct stat* archive_entry_stat(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_stat(MemorySegment x0) {
        var mh$ = archive_entry_stat$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_stat$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$2,"archive_entry_copy_stat");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_stat(struct archive_entry*, struct stat*);
     * }
     */
    public static void archive_entry_copy_stat(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_copy_stat$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_mac_metadata$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$3,"archive_entry_mac_metadata");
    }
    /**
     * {@snippet :
     * void* archive_entry_mac_metadata(struct archive_entry*, size_t*);
     * }
     */
    public static MemorySegment archive_entry_mac_metadata(MemorySegment x0, MemorySegment x1) {
        var mh$ = archive_entry_mac_metadata$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_copy_mac_metadata$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$4,"archive_entry_copy_mac_metadata");
    }
    /**
     * {@snippet :
     * void archive_entry_copy_mac_metadata(struct archive_entry*, void*, size_t);
     * }
     */
    public static void archive_entry_copy_mac_metadata(MemorySegment x0, MemorySegment x1, long x2) {
        var mh$ = archive_entry_copy_mac_metadata$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$163.const$5,"archive_entry_digest");
    }
    /**
     * {@snippet :
     * unsigned char* archive_entry_digest(struct archive_entry*, int);
     * }
     */
    public static MemorySegment archive_entry_digest(MemorySegment x0, int x1) {
        var mh$ = archive_entry_digest$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$0,"archive_entry_acl_clear");
    }
    /**
     * {@snippet :
     * void archive_entry_acl_clear(struct archive_entry*);
     * }
     */
    public static void archive_entry_acl_clear(MemorySegment x0) {
        var mh$ = archive_entry_acl_clear$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_add_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$2,"archive_entry_acl_add_entry");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_add_entry(struct archive_entry*, int, int, int, int, char*);
     * }
     */
    public static int archive_entry_acl_add_entry(MemorySegment x0, int x1, int x2, int x3, int x4, MemorySegment x5) {
        var mh$ = archive_entry_acl_add_entry$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_add_entry_w$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$3,"archive_entry_acl_add_entry_w");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_add_entry_w(struct archive_entry*, int, int, int, int, const wchar_t*);
     * }
     */
    public static int archive_entry_acl_add_entry_w(MemorySegment x0, int x1, int x2, int x3, int x4, MemorySegment x5) {
        var mh$ = archive_entry_acl_add_entry_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$4,"archive_entry_acl_reset");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_reset(struct archive_entry*, int);
     * }
     */
    public static int archive_entry_acl_reset(MemorySegment x0, int x1) {
        var mh$ = archive_entry_acl_reset$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_next$MH() {
        return RuntimeHelper.requireNonNull(constants$164.const$6,"archive_entry_acl_next");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_next(struct archive_entry*, int, int*, int*, int*, int*, char**);
     * }
     */
    public static int archive_entry_acl_next(MemorySegment x0, int x1, MemorySegment x2, MemorySegment x3, MemorySegment x4, MemorySegment x5, MemorySegment x6) {
        var mh$ = archive_entry_acl_next$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3, x4, x5, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_to_text_w$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$1,"archive_entry_acl_to_text_w");
    }
    /**
     * {@snippet :
     * wchar_t* archive_entry_acl_to_text_w(struct archive_entry*, la_ssize_t*, int);
     * }
     */
    public static MemorySegment archive_entry_acl_to_text_w(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = archive_entry_acl_to_text_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_to_text$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$2,"archive_entry_acl_to_text");
    }
    /**
     * {@snippet :
     * char* archive_entry_acl_to_text(struct archive_entry*, la_ssize_t*, int);
     * }
     */
    public static MemorySegment archive_entry_acl_to_text(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = archive_entry_acl_to_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_from_text_w$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$3,"archive_entry_acl_from_text_w");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_from_text_w(struct archive_entry*, const wchar_t*, int);
     * }
     */
    public static int archive_entry_acl_from_text_w(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = archive_entry_acl_from_text_w$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_from_text$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$4,"archive_entry_acl_from_text");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_from_text(struct archive_entry*, char*, int);
     * }
     */
    public static int archive_entry_acl_from_text(MemorySegment x0, MemorySegment x1, int x2) {
        var mh$ = archive_entry_acl_from_text$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_text_w$MH() {
        return RuntimeHelper.requireNonNull(constants$165.const$5,"archive_entry_acl_text_w");
    }
    /**
     * {@snippet :
     * const wchar_t* archive_entry_acl_text_w(struct archive_entry*, int);
     * }
     */
    public static MemorySegment archive_entry_acl_text_w(MemorySegment x0, int x1) {
        var mh$ = archive_entry_acl_text_w$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_text$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$0,"archive_entry_acl_text");
    }
    /**
     * {@snippet :
     * char* archive_entry_acl_text(struct archive_entry*, int);
     * }
     */
    public static MemorySegment archive_entry_acl_text(MemorySegment x0, int x1) {
        var mh$ = archive_entry_acl_text$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_types$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$1,"archive_entry_acl_types");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_types(struct archive_entry*);
     * }
     */
    public static int archive_entry_acl_types(MemorySegment x0) {
        var mh$ = archive_entry_acl_types$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl_count$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$2,"archive_entry_acl_count");
    }
    /**
     * {@snippet :
     * int archive_entry_acl_count(struct archive_entry*, int);
     * }
     */
    public static int archive_entry_acl_count(MemorySegment x0, int x1) {
        var mh$ = archive_entry_acl_count$MH();
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_acl$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$3,"archive_entry_acl");
    }
    /**
     * {@snippet :
     * struct archive_acl* archive_entry_acl(struct archive_entry*);
     * }
     */
    public static MemorySegment archive_entry_acl(MemorySegment x0) {
        var mh$ = archive_entry_acl$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_xattr_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$4,"archive_entry_xattr_clear");
    }
    /**
     * {@snippet :
     * void archive_entry_xattr_clear(struct archive_entry*);
     * }
     */
    public static void archive_entry_xattr_clear(MemorySegment x0) {
        var mh$ = archive_entry_xattr_clear$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_xattr_add_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$166.const$6,"archive_entry_xattr_add_entry");
    }
    /**
     * {@snippet :
     * void archive_entry_xattr_add_entry(struct archive_entry*, char*, void*, size_t);
     * }
     */
    public static void archive_entry_xattr_add_entry(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3) {
        var mh$ = archive_entry_xattr_add_entry$MH();
        try {
            mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_xattr_count$MH() {
        return RuntimeHelper.requireNonNull(constants$167.const$0,"archive_entry_xattr_count");
    }
    /**
     * {@snippet :
     * int archive_entry_xattr_count(struct archive_entry*);
     * }
     */
    public static int archive_entry_xattr_count(MemorySegment x0) {
        var mh$ = archive_entry_xattr_count$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_xattr_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$167.const$1,"archive_entry_xattr_reset");
    }
    /**
     * {@snippet :
     * int archive_entry_xattr_reset(struct archive_entry*);
     * }
     */
    public static int archive_entry_xattr_reset(MemorySegment x0) {
        var mh$ = archive_entry_xattr_reset$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_xattr_next$MH() {
        return RuntimeHelper.requireNonNull(constants$167.const$2,"archive_entry_xattr_next");
    }
    /**
     * {@snippet :
     * int archive_entry_xattr_next(struct archive_entry*, char**, void**, size_t*);
     * }
     */
    public static int archive_entry_xattr_next(MemorySegment x0, MemorySegment x1, MemorySegment x2, MemorySegment x3) {
        var mh$ = archive_entry_xattr_next$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sparse_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$167.const$3,"archive_entry_sparse_clear");
    }
    /**
     * {@snippet :
     * void archive_entry_sparse_clear(struct archive_entry*);
     * }
     */
    public static void archive_entry_sparse_clear(MemorySegment x0) {
        var mh$ = archive_entry_sparse_clear$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sparse_add_entry$MH() {
        return RuntimeHelper.requireNonNull(constants$167.const$4,"archive_entry_sparse_add_entry");
    }
    /**
     * {@snippet :
     * void archive_entry_sparse_add_entry(struct archive_entry*, la_int64_t, la_int64_t);
     * }
     */
    public static void archive_entry_sparse_add_entry(MemorySegment x0, long x1, long x2) {
        var mh$ = archive_entry_sparse_add_entry$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sparse_count$MH() {
        return RuntimeHelper.requireNonNull(constants$167.const$5,"archive_entry_sparse_count");
    }
    /**
     * {@snippet :
     * int archive_entry_sparse_count(struct archive_entry*);
     * }
     */
    public static int archive_entry_sparse_count(MemorySegment x0) {
        var mh$ = archive_entry_sparse_count$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sparse_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$0,"archive_entry_sparse_reset");
    }
    /**
     * {@snippet :
     * int archive_entry_sparse_reset(struct archive_entry*);
     * }
     */
    public static int archive_entry_sparse_reset(MemorySegment x0) {
        var mh$ = archive_entry_sparse_reset$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_sparse_next$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$1,"archive_entry_sparse_next");
    }
    /**
     * {@snippet :
     * int archive_entry_sparse_next(struct archive_entry*, la_int64_t*, la_int64_t*);
     * }
     */
    public static int archive_entry_sparse_next(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = archive_entry_sparse_next$MH();
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_linkresolver_new$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$2,"archive_entry_linkresolver_new");
    }
    /**
     * {@snippet :
     * struct archive_entry_linkresolver* archive_entry_linkresolver_new();
     * }
     */
    public static MemorySegment archive_entry_linkresolver_new() {
        var mh$ = archive_entry_linkresolver_new$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_linkresolver_set_strategy$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$3,"archive_entry_linkresolver_set_strategy");
    }
    /**
     * {@snippet :
     * void archive_entry_linkresolver_set_strategy(struct archive_entry_linkresolver*, int);
     * }
     */
    public static void archive_entry_linkresolver_set_strategy(MemorySegment x0, int x1) {
        var mh$ = archive_entry_linkresolver_set_strategy$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_linkresolver_free$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$4,"archive_entry_linkresolver_free");
    }
    /**
     * {@snippet :
     * void archive_entry_linkresolver_free(struct archive_entry_linkresolver*);
     * }
     */
    public static void archive_entry_linkresolver_free(MemorySegment x0) {
        var mh$ = archive_entry_linkresolver_free$MH();
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_linkify$MH() {
        return RuntimeHelper.requireNonNull(constants$168.const$5,"archive_entry_linkify");
    }
    /**
     * {@snippet :
     * void archive_entry_linkify(struct archive_entry_linkresolver*, struct archive_entry**, struct archive_entry**);
     * }
     */
    public static void archive_entry_linkify(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
        var mh$ = archive_entry_linkify$MH();
        try {
            mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle archive_entry_partial_links$MH() {
        return RuntimeHelper.requireNonNull(constants$169.const$0,"archive_entry_partial_links");
    }
    /**
     * {@snippet :
     * struct archive_entry* archive_entry_partial_links(struct archive_entry_linkresolver* res, unsigned int* links);
     * }
     */
    public static MemorySegment archive_entry_partial_links(MemorySegment res, MemorySegment links) {
        var mh$ = archive_entry_partial_links$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(res, links);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define __DARWIN_SUF_64_BIT_INO_T "$INODE64"
     * }
     */
    public static MemorySegment __DARWIN_SUF_64_BIT_INO_T() {
        return constants$169.const$1;
    }
    /**
     * {@snippet :
     * #define __DARWIN_SUF_1050 "$1050"
     * }
     */
    public static MemorySegment __DARWIN_SUF_1050() {
        return constants$169.const$2;
    }
    /**
     * {@snippet :
     * #define __DARWIN_SUF_EXTSN "$DARWIN_EXTSN"
     * }
     */
    public static MemorySegment __DARWIN_SUF_EXTSN() {
        return constants$169.const$3;
    }
    /**
     * {@snippet :
     * #define __DARWIN_C_ANSI 4096
     * }
     */
    public static long __DARWIN_C_ANSI() {
        return 4096L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_C_FULL 900000
     * }
     */
    public static long __DARWIN_C_FULL() {
        return 900000L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_C_LEVEL 900000
     * }
     */
    public static long __DARWIN_C_LEVEL() {
        return 900000L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_NULL 0
     * }
     */
    public static MemorySegment __DARWIN_NULL() {
        return constants$169.const$4;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_0 1000
     * }
     */
    public static int MAC_OS_X_VERSION_10_0() {
        return (int)1000L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_1 1010
     * }
     */
    public static int MAC_OS_X_VERSION_10_1() {
        return (int)1010L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_2 1020
     * }
     */
    public static int MAC_OS_X_VERSION_10_2() {
        return (int)1020L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_3 1030
     * }
     */
    public static int MAC_OS_X_VERSION_10_3() {
        return (int)1030L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_4 1040
     * }
     */
    public static int MAC_OS_X_VERSION_10_4() {
        return (int)1040L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_5 1050
     * }
     */
    public static int MAC_OS_X_VERSION_10_5() {
        return (int)1050L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_6 1060
     * }
     */
    public static int MAC_OS_X_VERSION_10_6() {
        return (int)1060L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_7 1070
     * }
     */
    public static int MAC_OS_X_VERSION_10_7() {
        return (int)1070L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_8 1080
     * }
     */
    public static int MAC_OS_X_VERSION_10_8() {
        return (int)1080L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_9 1090
     * }
     */
    public static int MAC_OS_X_VERSION_10_9() {
        return (int)1090L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_10 101000
     * }
     */
    public static int MAC_OS_X_VERSION_10_10() {
        return (int)101000L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_10_2 101002
     * }
     */
    public static int MAC_OS_X_VERSION_10_10_2() {
        return (int)101002L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_10_3 101003
     * }
     */
    public static int MAC_OS_X_VERSION_10_10_3() {
        return (int)101003L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_11 101100
     * }
     */
    public static int MAC_OS_X_VERSION_10_11() {
        return (int)101100L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_11_2 101102
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_2() {
        return (int)101102L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_11_3 101103
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_3() {
        return (int)101103L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_11_4 101104
     * }
     */
    public static int MAC_OS_X_VERSION_10_11_4() {
        return (int)101104L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_12 101200
     * }
     */
    public static int MAC_OS_X_VERSION_10_12() {
        return (int)101200L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_12_1 101201
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_1() {
        return (int)101201L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_12_2 101202
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_2() {
        return (int)101202L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_12_4 101204
     * }
     */
    public static int MAC_OS_X_VERSION_10_12_4() {
        return (int)101204L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_13 101300
     * }
     */
    public static int MAC_OS_X_VERSION_10_13() {
        return (int)101300L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_13_1 101301
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_1() {
        return (int)101301L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_13_2 101302
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_2() {
        return (int)101302L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_13_4 101304
     * }
     */
    public static int MAC_OS_X_VERSION_10_13_4() {
        return (int)101304L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_14 101400
     * }
     */
    public static int MAC_OS_X_VERSION_10_14() {
        return (int)101400L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_14_1 101401
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_1() {
        return (int)101401L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_14_4 101404
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_4() {
        return (int)101404L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_14_5 101405
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_5() {
        return (int)101405L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_14_6 101406
     * }
     */
    public static int MAC_OS_X_VERSION_10_14_6() {
        return (int)101406L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_15 101500
     * }
     */
    public static int MAC_OS_X_VERSION_10_15() {
        return (int)101500L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_15_1 101501
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_1() {
        return (int)101501L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_15_4 101504
     * }
     */
    public static int MAC_OS_X_VERSION_10_15_4() {
        return (int)101504L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_X_VERSION_10_16 101600
     * }
     */
    public static int MAC_OS_X_VERSION_10_16() {
        return (int)101600L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_11_0 110000
     * }
     */
    public static int MAC_OS_VERSION_11_0() {
        return (int)110000L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_11_1 110100
     * }
     */
    public static int MAC_OS_VERSION_11_1() {
        return (int)110100L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_11_3 110300
     * }
     */
    public static int MAC_OS_VERSION_11_3() {
        return (int)110300L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_11_4 110400
     * }
     */
    public static int MAC_OS_VERSION_11_4() {
        return (int)110400L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_11_5 110500
     * }
     */
    public static int MAC_OS_VERSION_11_5() {
        return (int)110500L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_11_6 110600
     * }
     */
    public static int MAC_OS_VERSION_11_6() {
        return (int)110600L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_0 120000
     * }
     */
    public static int MAC_OS_VERSION_12_0() {
        return (int)120000L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_1 120100
     * }
     */
    public static int MAC_OS_VERSION_12_1() {
        return (int)120100L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_2 120200
     * }
     */
    public static int MAC_OS_VERSION_12_2() {
        return (int)120200L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_3 120300
     * }
     */
    public static int MAC_OS_VERSION_12_3() {
        return (int)120300L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_4 120400
     * }
     */
    public static int MAC_OS_VERSION_12_4() {
        return (int)120400L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_5 120500
     * }
     */
    public static int MAC_OS_VERSION_12_5() {
        return (int)120500L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_6 120600
     * }
     */
    public static int MAC_OS_VERSION_12_6() {
        return (int)120600L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_12_7 120700
     * }
     */
    public static int MAC_OS_VERSION_12_7() {
        return (int)120700L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_0 130000
     * }
     */
    public static int MAC_OS_VERSION_13_0() {
        return (int)130000L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_1 130100
     * }
     */
    public static int MAC_OS_VERSION_13_1() {
        return (int)130100L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_2 130200
     * }
     */
    public static int MAC_OS_VERSION_13_2() {
        return (int)130200L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_3 130300
     * }
     */
    public static int MAC_OS_VERSION_13_3() {
        return (int)130300L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_4 130400
     * }
     */
    public static int MAC_OS_VERSION_13_4() {
        return (int)130400L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_5 130500
     * }
     */
    public static int MAC_OS_VERSION_13_5() {
        return (int)130500L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_13_6 130600
     * }
     */
    public static int MAC_OS_VERSION_13_6() {
        return (int)130600L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_14_0 140000
     * }
     */
    public static int MAC_OS_VERSION_14_0() {
        return (int)140000L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_14_1 140100
     * }
     */
    public static int MAC_OS_VERSION_14_1() {
        return (int)140100L;
    }
    /**
     * {@snippet :
     * #define MAC_OS_VERSION_14_2 140200
     * }
     */
    public static int MAC_OS_VERSION_14_2() {
        return (int)140200L;
    }
    /**
     * {@snippet :
     * #define __MAC_OS_X_VERSION_MAX_ALLOWED 140200
     * }
     */
    public static int __MAC_OS_X_VERSION_MAX_ALLOWED() {
        return (int)140200L;
    }
    /**
     * {@snippet :
     * #define USER_ADDR_NULL 0
     * }
     */
    public static long USER_ADDR_NULL() {
        return 0L;
    }
    /**
     * {@snippet :
     * #define S_ISTXT 512
     * }
     */
    public static int S_ISTXT() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define S_IREAD 256
     * }
     */
    public static int S_IREAD() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define S_IWRITE 128
     * }
     */
    public static int S_IWRITE() {
        return (int)128L;
    }
    /**
     * {@snippet :
     * #define S_IEXEC 64
     * }
     */
    public static int S_IEXEC() {
        return (int)64L;
    }
    /**
     * {@snippet :
     * #define ACCESSPERMS 511
     * }
     */
    public static int ACCESSPERMS() {
        return (int)511L;
    }
    /**
     * {@snippet :
     * #define ALLPERMS 4095
     * }
     */
    public static int ALLPERMS() {
        return (int)4095L;
    }
    /**
     * {@snippet :
     * #define DEFFILEMODE 438
     * }
     */
    public static int DEFFILEMODE() {
        return (int)438L;
    }
    /**
     * {@snippet :
     * #define SF_SYNTHETIC 3221225472
     * }
     */
    public static int SF_SYNTHETIC() {
        return (int)3221225472L;
    }
    /**
     * {@snippet :
     * #define UTIME_NOW -1
     * }
     */
    public static int UTIME_NOW() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define UTIME_OMIT -2
     * }
     */
    public static int UTIME_OMIT() {
        return (int)-2L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_WCHAR_MAX 2147483647
     * }
     */
    public static int __DARWIN_WCHAR_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_WCHAR_MIN -2147483648
     * }
     */
    public static int __DARWIN_WCHAR_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_WEOF -1
     * }
     */
    public static int __DARWIN_WEOF() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define NULL 0
     * }
     */
    public static MemorySegment NULL() {
        return constants$169.const$4;
    }
    /**
     * {@snippet :
     * #define EOF -1
     * }
     */
    public static int EOF() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define P_tmpdir "/var/tmp/"
     * }
     */
    public static MemorySegment P_tmpdir() {
        return constants$169.const$5;
    }
    /**
     * {@snippet :
     * #define CLOCKS_PER_SEC 1000000
     * }
     */
    public static long CLOCKS_PER_SEC() {
        return 1000000L;
    }
    /**
     * {@snippet :
     * #define CLOCK_REALTIME 0
     * }
     */
    public static int CLOCK_REALTIME() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define CLOCK_MONOTONIC 6
     * }
     */
    public static int CLOCK_MONOTONIC() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * #define CLOCK_MONOTONIC_RAW 4
     * }
     */
    public static int CLOCK_MONOTONIC_RAW() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define CLOCK_MONOTONIC_RAW_APPROX 5
     * }
     */
    public static int CLOCK_MONOTONIC_RAW_APPROX() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define CLOCK_UPTIME_RAW 8
     * }
     */
    public static int CLOCK_UPTIME_RAW() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define CLOCK_UPTIME_RAW_APPROX 9
     * }
     */
    public static int CLOCK_UPTIME_RAW_APPROX() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define CLOCK_PROCESS_CPUTIME_ID 12
     * }
     */
    public static int CLOCK_PROCESS_CPUTIME_ID() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define CLOCK_THREAD_CPUTIME_ID 16
     * }
     */
    public static int CLOCK_THREAD_CPUTIME_ID() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * #define __PRI_8_LENGTH_MODIFIER__ "hh"
     * }
     */
    public static MemorySegment __PRI_8_LENGTH_MODIFIER__() {
        return constants$170.const$0;
    }
    /**
     * {@snippet :
     * #define __PRI_64_LENGTH_MODIFIER__ "ll"
     * }
     */
    public static MemorySegment __PRI_64_LENGTH_MODIFIER__() {
        return constants$170.const$1;
    }
    /**
     * {@snippet :
     * #define __SCN_64_LENGTH_MODIFIER__ "ll"
     * }
     */
    public static MemorySegment __SCN_64_LENGTH_MODIFIER__() {
        return constants$170.const$1;
    }
    /**
     * {@snippet :
     * #define __PRI_MAX_LENGTH_MODIFIER__ "j"
     * }
     */
    public static MemorySegment __PRI_MAX_LENGTH_MODIFIER__() {
        return constants$170.const$2;
    }
    /**
     * {@snippet :
     * #define __SCN_MAX_LENGTH_MODIFIER__ "j"
     * }
     */
    public static MemorySegment __SCN_MAX_LENGTH_MODIFIER__() {
        return constants$170.const$2;
    }
    /**
     * {@snippet :
     * #define PRId8 "hhd"
     * }
     */
    public static MemorySegment PRId8() {
        return constants$170.const$3;
    }
    /**
     * {@snippet :
     * #define PRIi8 "hhi"
     * }
     */
    public static MemorySegment PRIi8() {
        return constants$170.const$4;
    }
    /**
     * {@snippet :
     * #define PRIo8 "hho"
     * }
     */
    public static MemorySegment PRIo8() {
        return constants$170.const$5;
    }
    /**
     * {@snippet :
     * #define PRIu8 "hhu"
     * }
     */
    public static MemorySegment PRIu8() {
        return constants$171.const$0;
    }
    /**
     * {@snippet :
     * #define PRIx8 "hhx"
     * }
     */
    public static MemorySegment PRIx8() {
        return constants$171.const$1;
    }
    /**
     * {@snippet :
     * #define PRIX8 "hhX"
     * }
     */
    public static MemorySegment PRIX8() {
        return constants$171.const$2;
    }
    /**
     * {@snippet :
     * #define PRId16 "hd"
     * }
     */
    public static MemorySegment PRId16() {
        return constants$171.const$3;
    }
    /**
     * {@snippet :
     * #define PRIi16 "hi"
     * }
     */
    public static MemorySegment PRIi16() {
        return constants$171.const$4;
    }
    /**
     * {@snippet :
     * #define PRIo16 "ho"
     * }
     */
    public static MemorySegment PRIo16() {
        return constants$171.const$5;
    }
    /**
     * {@snippet :
     * #define PRIu16 "hu"
     * }
     */
    public static MemorySegment PRIu16() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * #define PRIx16 "hx"
     * }
     */
    public static MemorySegment PRIx16() {
        return constants$172.const$1;
    }
    /**
     * {@snippet :
     * #define PRIX16 "hX"
     * }
     */
    public static MemorySegment PRIX16() {
        return constants$172.const$2;
    }
    /**
     * {@snippet :
     * #define PRId32 "d"
     * }
     */
    public static MemorySegment PRId32() {
        return constants$172.const$3;
    }
    /**
     * {@snippet :
     * #define PRIi32 "i"
     * }
     */
    public static MemorySegment PRIi32() {
        return constants$172.const$4;
    }
    /**
     * {@snippet :
     * #define PRIo32 "o"
     * }
     */
    public static MemorySegment PRIo32() {
        return constants$172.const$5;
    }
    /**
     * {@snippet :
     * #define PRIu32 "u"
     * }
     */
    public static MemorySegment PRIu32() {
        return constants$173.const$0;
    }
    /**
     * {@snippet :
     * #define PRIx32 "x"
     * }
     */
    public static MemorySegment PRIx32() {
        return constants$173.const$1;
    }
    /**
     * {@snippet :
     * #define PRIX32 "X"
     * }
     */
    public static MemorySegment PRIX32() {
        return constants$173.const$2;
    }
    /**
     * {@snippet :
     * #define PRId64 "lld"
     * }
     */
    public static MemorySegment PRId64() {
        return constants$173.const$3;
    }
    /**
     * {@snippet :
     * #define PRIi64 "lli"
     * }
     */
    public static MemorySegment PRIi64() {
        return constants$173.const$4;
    }
    /**
     * {@snippet :
     * #define PRIo64 "llo"
     * }
     */
    public static MemorySegment PRIo64() {
        return constants$173.const$5;
    }
    /**
     * {@snippet :
     * #define PRIu64 "llu"
     * }
     */
    public static MemorySegment PRIu64() {
        return constants$174.const$0;
    }
    /**
     * {@snippet :
     * #define PRIx64 "llx"
     * }
     */
    public static MemorySegment PRIx64() {
        return constants$174.const$1;
    }
    /**
     * {@snippet :
     * #define PRIX64 "llX"
     * }
     */
    public static MemorySegment PRIX64() {
        return constants$174.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdLEAST8 "hhd"
     * }
     */
    public static MemorySegment PRIdLEAST8() {
        return constants$170.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiLEAST8 "hhi"
     * }
     */
    public static MemorySegment PRIiLEAST8() {
        return constants$170.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoLEAST8 "hho"
     * }
     */
    public static MemorySegment PRIoLEAST8() {
        return constants$170.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuLEAST8 "hhu"
     * }
     */
    public static MemorySegment PRIuLEAST8() {
        return constants$171.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxLEAST8 "hhx"
     * }
     */
    public static MemorySegment PRIxLEAST8() {
        return constants$171.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXLEAST8 "hhX"
     * }
     */
    public static MemorySegment PRIXLEAST8() {
        return constants$171.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdLEAST16 "hd"
     * }
     */
    public static MemorySegment PRIdLEAST16() {
        return constants$171.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiLEAST16 "hi"
     * }
     */
    public static MemorySegment PRIiLEAST16() {
        return constants$171.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoLEAST16 "ho"
     * }
     */
    public static MemorySegment PRIoLEAST16() {
        return constants$171.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuLEAST16 "hu"
     * }
     */
    public static MemorySegment PRIuLEAST16() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxLEAST16 "hx"
     * }
     */
    public static MemorySegment PRIxLEAST16() {
        return constants$172.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXLEAST16 "hX"
     * }
     */
    public static MemorySegment PRIXLEAST16() {
        return constants$172.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdLEAST32 "d"
     * }
     */
    public static MemorySegment PRIdLEAST32() {
        return constants$172.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiLEAST32 "i"
     * }
     */
    public static MemorySegment PRIiLEAST32() {
        return constants$172.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoLEAST32 "o"
     * }
     */
    public static MemorySegment PRIoLEAST32() {
        return constants$172.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuLEAST32 "u"
     * }
     */
    public static MemorySegment PRIuLEAST32() {
        return constants$173.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxLEAST32 "x"
     * }
     */
    public static MemorySegment PRIxLEAST32() {
        return constants$173.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXLEAST32 "X"
     * }
     */
    public static MemorySegment PRIXLEAST32() {
        return constants$173.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdLEAST64 "lld"
     * }
     */
    public static MemorySegment PRIdLEAST64() {
        return constants$173.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiLEAST64 "lli"
     * }
     */
    public static MemorySegment PRIiLEAST64() {
        return constants$173.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoLEAST64 "llo"
     * }
     */
    public static MemorySegment PRIoLEAST64() {
        return constants$173.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuLEAST64 "llu"
     * }
     */
    public static MemorySegment PRIuLEAST64() {
        return constants$174.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxLEAST64 "llx"
     * }
     */
    public static MemorySegment PRIxLEAST64() {
        return constants$174.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXLEAST64 "llX"
     * }
     */
    public static MemorySegment PRIXLEAST64() {
        return constants$174.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdFAST8 "hhd"
     * }
     */
    public static MemorySegment PRIdFAST8() {
        return constants$170.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiFAST8 "hhi"
     * }
     */
    public static MemorySegment PRIiFAST8() {
        return constants$170.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoFAST8 "hho"
     * }
     */
    public static MemorySegment PRIoFAST8() {
        return constants$170.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuFAST8 "hhu"
     * }
     */
    public static MemorySegment PRIuFAST8() {
        return constants$171.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxFAST8 "hhx"
     * }
     */
    public static MemorySegment PRIxFAST8() {
        return constants$171.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXFAST8 "hhX"
     * }
     */
    public static MemorySegment PRIXFAST8() {
        return constants$171.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdFAST16 "hd"
     * }
     */
    public static MemorySegment PRIdFAST16() {
        return constants$171.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiFAST16 "hi"
     * }
     */
    public static MemorySegment PRIiFAST16() {
        return constants$171.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoFAST16 "ho"
     * }
     */
    public static MemorySegment PRIoFAST16() {
        return constants$171.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuFAST16 "hu"
     * }
     */
    public static MemorySegment PRIuFAST16() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxFAST16 "hx"
     * }
     */
    public static MemorySegment PRIxFAST16() {
        return constants$172.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXFAST16 "hX"
     * }
     */
    public static MemorySegment PRIXFAST16() {
        return constants$172.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdFAST32 "d"
     * }
     */
    public static MemorySegment PRIdFAST32() {
        return constants$172.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiFAST32 "i"
     * }
     */
    public static MemorySegment PRIiFAST32() {
        return constants$172.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoFAST32 "o"
     * }
     */
    public static MemorySegment PRIoFAST32() {
        return constants$172.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuFAST32 "u"
     * }
     */
    public static MemorySegment PRIuFAST32() {
        return constants$173.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxFAST32 "x"
     * }
     */
    public static MemorySegment PRIxFAST32() {
        return constants$173.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXFAST32 "X"
     * }
     */
    public static MemorySegment PRIXFAST32() {
        return constants$173.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdFAST64 "lld"
     * }
     */
    public static MemorySegment PRIdFAST64() {
        return constants$173.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiFAST64 "lli"
     * }
     */
    public static MemorySegment PRIiFAST64() {
        return constants$173.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoFAST64 "llo"
     * }
     */
    public static MemorySegment PRIoFAST64() {
        return constants$173.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuFAST64 "llu"
     * }
     */
    public static MemorySegment PRIuFAST64() {
        return constants$174.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxFAST64 "llx"
     * }
     */
    public static MemorySegment PRIxFAST64() {
        return constants$174.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXFAST64 "llX"
     * }
     */
    public static MemorySegment PRIXFAST64() {
        return constants$174.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdPTR "ld"
     * }
     */
    public static MemorySegment PRIdPTR() {
        return constants$174.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiPTR "li"
     * }
     */
    public static MemorySegment PRIiPTR() {
        return constants$174.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoPTR "lo"
     * }
     */
    public static MemorySegment PRIoPTR() {
        return constants$174.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuPTR "lu"
     * }
     */
    public static MemorySegment PRIuPTR() {
        return constants$175.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxPTR "lx"
     * }
     */
    public static MemorySegment PRIxPTR() {
        return constants$175.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXPTR "lX"
     * }
     */
    public static MemorySegment PRIXPTR() {
        return constants$175.const$2;
    }
    /**
     * {@snippet :
     * #define PRIdMAX "jd"
     * }
     */
    public static MemorySegment PRIdMAX() {
        return constants$175.const$3;
    }
    /**
     * {@snippet :
     * #define PRIiMAX "ji"
     * }
     */
    public static MemorySegment PRIiMAX() {
        return constants$175.const$4;
    }
    /**
     * {@snippet :
     * #define PRIoMAX "jo"
     * }
     */
    public static MemorySegment PRIoMAX() {
        return constants$175.const$5;
    }
    /**
     * {@snippet :
     * #define PRIuMAX "ju"
     * }
     */
    public static MemorySegment PRIuMAX() {
        return constants$176.const$0;
    }
    /**
     * {@snippet :
     * #define PRIxMAX "jx"
     * }
     */
    public static MemorySegment PRIxMAX() {
        return constants$176.const$1;
    }
    /**
     * {@snippet :
     * #define PRIXMAX "jX"
     * }
     */
    public static MemorySegment PRIXMAX() {
        return constants$176.const$2;
    }
    /**
     * {@snippet :
     * #define SCNd8 "hhd"
     * }
     */
    public static MemorySegment SCNd8() {
        return constants$170.const$3;
    }
    /**
     * {@snippet :
     * #define SCNi8 "hhi"
     * }
     */
    public static MemorySegment SCNi8() {
        return constants$170.const$4;
    }
    /**
     * {@snippet :
     * #define SCNo8 "hho"
     * }
     */
    public static MemorySegment SCNo8() {
        return constants$170.const$5;
    }
    /**
     * {@snippet :
     * #define SCNu8 "hhu"
     * }
     */
    public static MemorySegment SCNu8() {
        return constants$171.const$0;
    }
    /**
     * {@snippet :
     * #define SCNx8 "hhx"
     * }
     */
    public static MemorySegment SCNx8() {
        return constants$171.const$1;
    }
    /**
     * {@snippet :
     * #define SCNd16 "hd"
     * }
     */
    public static MemorySegment SCNd16() {
        return constants$171.const$3;
    }
    /**
     * {@snippet :
     * #define SCNi16 "hi"
     * }
     */
    public static MemorySegment SCNi16() {
        return constants$171.const$4;
    }
    /**
     * {@snippet :
     * #define SCNo16 "ho"
     * }
     */
    public static MemorySegment SCNo16() {
        return constants$171.const$5;
    }
    /**
     * {@snippet :
     * #define SCNu16 "hu"
     * }
     */
    public static MemorySegment SCNu16() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * #define SCNx16 "hx"
     * }
     */
    public static MemorySegment SCNx16() {
        return constants$172.const$1;
    }
    /**
     * {@snippet :
     * #define SCNd32 "d"
     * }
     */
    public static MemorySegment SCNd32() {
        return constants$172.const$3;
    }
    /**
     * {@snippet :
     * #define SCNi32 "i"
     * }
     */
    public static MemorySegment SCNi32() {
        return constants$172.const$4;
    }
    /**
     * {@snippet :
     * #define SCNo32 "o"
     * }
     */
    public static MemorySegment SCNo32() {
        return constants$172.const$5;
    }
    /**
     * {@snippet :
     * #define SCNu32 "u"
     * }
     */
    public static MemorySegment SCNu32() {
        return constants$173.const$0;
    }
    /**
     * {@snippet :
     * #define SCNx32 "x"
     * }
     */
    public static MemorySegment SCNx32() {
        return constants$173.const$1;
    }
    /**
     * {@snippet :
     * #define SCNd64 "lld"
     * }
     */
    public static MemorySegment SCNd64() {
        return constants$173.const$3;
    }
    /**
     * {@snippet :
     * #define SCNi64 "lli"
     * }
     */
    public static MemorySegment SCNi64() {
        return constants$173.const$4;
    }
    /**
     * {@snippet :
     * #define SCNo64 "llo"
     * }
     */
    public static MemorySegment SCNo64() {
        return constants$173.const$5;
    }
    /**
     * {@snippet :
     * #define SCNu64 "llu"
     * }
     */
    public static MemorySegment SCNu64() {
        return constants$174.const$0;
    }
    /**
     * {@snippet :
     * #define SCNx64 "llx"
     * }
     */
    public static MemorySegment SCNx64() {
        return constants$174.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdLEAST8 "hhd"
     * }
     */
    public static MemorySegment SCNdLEAST8() {
        return constants$170.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiLEAST8 "hhi"
     * }
     */
    public static MemorySegment SCNiLEAST8() {
        return constants$170.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoLEAST8 "hho"
     * }
     */
    public static MemorySegment SCNoLEAST8() {
        return constants$170.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuLEAST8 "hhu"
     * }
     */
    public static MemorySegment SCNuLEAST8() {
        return constants$171.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxLEAST8 "hhx"
     * }
     */
    public static MemorySegment SCNxLEAST8() {
        return constants$171.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdLEAST16 "hd"
     * }
     */
    public static MemorySegment SCNdLEAST16() {
        return constants$171.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiLEAST16 "hi"
     * }
     */
    public static MemorySegment SCNiLEAST16() {
        return constants$171.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoLEAST16 "ho"
     * }
     */
    public static MemorySegment SCNoLEAST16() {
        return constants$171.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuLEAST16 "hu"
     * }
     */
    public static MemorySegment SCNuLEAST16() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxLEAST16 "hx"
     * }
     */
    public static MemorySegment SCNxLEAST16() {
        return constants$172.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdLEAST32 "d"
     * }
     */
    public static MemorySegment SCNdLEAST32() {
        return constants$172.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiLEAST32 "i"
     * }
     */
    public static MemorySegment SCNiLEAST32() {
        return constants$172.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoLEAST32 "o"
     * }
     */
    public static MemorySegment SCNoLEAST32() {
        return constants$172.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuLEAST32 "u"
     * }
     */
    public static MemorySegment SCNuLEAST32() {
        return constants$173.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxLEAST32 "x"
     * }
     */
    public static MemorySegment SCNxLEAST32() {
        return constants$173.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdLEAST64 "lld"
     * }
     */
    public static MemorySegment SCNdLEAST64() {
        return constants$173.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiLEAST64 "lli"
     * }
     */
    public static MemorySegment SCNiLEAST64() {
        return constants$173.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoLEAST64 "llo"
     * }
     */
    public static MemorySegment SCNoLEAST64() {
        return constants$173.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuLEAST64 "llu"
     * }
     */
    public static MemorySegment SCNuLEAST64() {
        return constants$174.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxLEAST64 "llx"
     * }
     */
    public static MemorySegment SCNxLEAST64() {
        return constants$174.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdFAST8 "hhd"
     * }
     */
    public static MemorySegment SCNdFAST8() {
        return constants$170.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiFAST8 "hhi"
     * }
     */
    public static MemorySegment SCNiFAST8() {
        return constants$170.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoFAST8 "hho"
     * }
     */
    public static MemorySegment SCNoFAST8() {
        return constants$170.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuFAST8 "hhu"
     * }
     */
    public static MemorySegment SCNuFAST8() {
        return constants$171.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxFAST8 "hhx"
     * }
     */
    public static MemorySegment SCNxFAST8() {
        return constants$171.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdFAST16 "hd"
     * }
     */
    public static MemorySegment SCNdFAST16() {
        return constants$171.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiFAST16 "hi"
     * }
     */
    public static MemorySegment SCNiFAST16() {
        return constants$171.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoFAST16 "ho"
     * }
     */
    public static MemorySegment SCNoFAST16() {
        return constants$171.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuFAST16 "hu"
     * }
     */
    public static MemorySegment SCNuFAST16() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxFAST16 "hx"
     * }
     */
    public static MemorySegment SCNxFAST16() {
        return constants$172.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdFAST32 "d"
     * }
     */
    public static MemorySegment SCNdFAST32() {
        return constants$172.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiFAST32 "i"
     * }
     */
    public static MemorySegment SCNiFAST32() {
        return constants$172.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoFAST32 "o"
     * }
     */
    public static MemorySegment SCNoFAST32() {
        return constants$172.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuFAST32 "u"
     * }
     */
    public static MemorySegment SCNuFAST32() {
        return constants$173.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxFAST32 "x"
     * }
     */
    public static MemorySegment SCNxFAST32() {
        return constants$173.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdFAST64 "lld"
     * }
     */
    public static MemorySegment SCNdFAST64() {
        return constants$173.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiFAST64 "lli"
     * }
     */
    public static MemorySegment SCNiFAST64() {
        return constants$173.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoFAST64 "llo"
     * }
     */
    public static MemorySegment SCNoFAST64() {
        return constants$173.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuFAST64 "llu"
     * }
     */
    public static MemorySegment SCNuFAST64() {
        return constants$174.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxFAST64 "llx"
     * }
     */
    public static MemorySegment SCNxFAST64() {
        return constants$174.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdPTR "ld"
     * }
     */
    public static MemorySegment SCNdPTR() {
        return constants$174.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiPTR "li"
     * }
     */
    public static MemorySegment SCNiPTR() {
        return constants$174.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoPTR "lo"
     * }
     */
    public static MemorySegment SCNoPTR() {
        return constants$174.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuPTR "lu"
     * }
     */
    public static MemorySegment SCNuPTR() {
        return constants$175.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxPTR "lx"
     * }
     */
    public static MemorySegment SCNxPTR() {
        return constants$175.const$1;
    }
    /**
     * {@snippet :
     * #define SCNdMAX "jd"
     * }
     */
    public static MemorySegment SCNdMAX() {
        return constants$175.const$3;
    }
    /**
     * {@snippet :
     * #define SCNiMAX "ji"
     * }
     */
    public static MemorySegment SCNiMAX() {
        return constants$175.const$4;
    }
    /**
     * {@snippet :
     * #define SCNoMAX "jo"
     * }
     */
    public static MemorySegment SCNoMAX() {
        return constants$175.const$5;
    }
    /**
     * {@snippet :
     * #define SCNuMAX "ju"
     * }
     */
    public static MemorySegment SCNuMAX() {
        return constants$176.const$0;
    }
    /**
     * {@snippet :
     * #define SCNxMAX "jx"
     * }
     */
    public static MemorySegment SCNxMAX() {
        return constants$176.const$1;
    }
    /**
     * {@snippet :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static int INT_LEAST8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static int INT_LEAST16_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static int UINT_LEAST8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static int UINT_LEAST16_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MIN -32768
     * }
     */
    public static int INT_FAST16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MIN -2147483648
     * }
     */
    public static int INT_FAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static int INT_FAST8_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MAX 32767
     * }
     */
    public static int INT_FAST16_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MAX 2147483647
     * }
     */
    public static int INT_FAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static int UINT_FAST8_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST16_MAX 65535
     * }
     */
    public static int UINT_FAST16_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST32_MAX 4294967295
     * }
     */
    public static int UINT_FAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define RSIZE_MAX 9223372036854775807
     * }
     */
    public static long RSIZE_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MAX 2147483647
     * }
     */
    public static int WCHAR_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MIN -2147483648
     * }
     */
    public static int WCHAR_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define WINT_MIN -2147483648
     * }
     */
    public static int WINT_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define WINT_MAX 2147483647
     * }
     */
    public static int WINT_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define _POSIX_VERSION 200112
     * }
     */
    public static long _POSIX_VERSION() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_VERSION 200112
     * }
     */
    public static long _POSIX2_VERSION() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_VDISABLE 255
     * }
     */
    public static byte _POSIX_VDISABLE() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define X_OK 1
     * }
     */
    public static int X_OK() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define W_OK 2
     * }
     */
    public static int W_OK() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define R_OK 4
     * }
     */
    public static int R_OK() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * #define _READ_OK 512
     * }
     */
    public static int _READ_OK() {
        return (int)512L;
    }
    /**
     * {@snippet :
     * #define _WRITE_OK 1024
     * }
     */
    public static int _WRITE_OK() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define _EXECUTE_OK 2048
     * }
     */
    public static int _EXECUTE_OK() {
        return (int)2048L;
    }
    /**
     * {@snippet :
     * #define _DELETE_OK 4096
     * }
     */
    public static int _DELETE_OK() {
        return (int)4096L;
    }
    /**
     * {@snippet :
     * #define _APPEND_OK 8192
     * }
     */
    public static int _APPEND_OK() {
        return (int)8192L;
    }
    /**
     * {@snippet :
     * #define _RMFILE_OK 16384
     * }
     */
    public static int _RMFILE_OK() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define _RATTR_OK 32768
     * }
     */
    public static int _RATTR_OK() {
        return (int)32768L;
    }
    /**
     * {@snippet :
     * #define _WATTR_OK 65536
     * }
     */
    public static int _WATTR_OK() {
        return (int)65536L;
    }
    /**
     * {@snippet :
     * #define _REXT_OK 131072
     * }
     */
    public static int _REXT_OK() {
        return (int)131072L;
    }
    /**
     * {@snippet :
     * #define _WEXT_OK 262144
     * }
     */
    public static int _WEXT_OK() {
        return (int)262144L;
    }
    /**
     * {@snippet :
     * #define _RPERM_OK 524288
     * }
     */
    public static int _RPERM_OK() {
        return (int)524288L;
    }
    /**
     * {@snippet :
     * #define _WPERM_OK 1048576
     * }
     */
    public static int _WPERM_OK() {
        return (int)1048576L;
    }
    /**
     * {@snippet :
     * #define _CHOWN_OK 2097152
     * }
     */
    public static int _CHOWN_OK() {
        return (int)2097152L;
    }
    /**
     * {@snippet :
     * #define _ACCESS_EXTENDED_MASK 4193792
     * }
     */
    public static int _ACCESS_EXTENDED_MASK() {
        return (int)4193792L;
    }
    /**
     * {@snippet :
     * #define L_SET 0
     * }
     */
    public static int L_SET() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define L_INCR 1
     * }
     */
    public static int L_INCR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define L_XTND 2
     * }
     */
    public static int L_XTND() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define ACCESSX_MAX_TABLESIZE 16384
     * }
     */
    public static int ACCESSX_MAX_TABLESIZE() {
        return (int)16384L;
    }
    /**
     * {@snippet :
     * #define _POSIX_ADVISORY_INFO -1
     * }
     */
    public static int _POSIX_ADVISORY_INFO() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_ASYNCHRONOUS_IO -1
     * }
     */
    public static int _POSIX_ASYNCHRONOUS_IO() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_BARRIERS -1
     * }
     */
    public static int _POSIX_BARRIERS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_CHOWN_RESTRICTED 200112
     * }
     */
    public static long _POSIX_CHOWN_RESTRICTED() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_CLOCK_SELECTION -1
     * }
     */
    public static int _POSIX_CLOCK_SELECTION() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_CPUTIME -1
     * }
     */
    public static int _POSIX_CPUTIME() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_FSYNC 200112
     * }
     */
    public static long _POSIX_FSYNC() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_IPV6 200112
     * }
     */
    public static long _POSIX_IPV6() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_JOB_CONTROL 200112
     * }
     */
    public static long _POSIX_JOB_CONTROL() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MAPPED_FILES 200112
     * }
     */
    public static long _POSIX_MAPPED_FILES() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MEMLOCK -1
     * }
     */
    public static int _POSIX_MEMLOCK() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MEMLOCK_RANGE -1
     * }
     */
    public static int _POSIX_MEMLOCK_RANGE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MEMORY_PROTECTION 200112
     * }
     */
    public static long _POSIX_MEMORY_PROTECTION() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MESSAGE_PASSING -1
     * }
     */
    public static int _POSIX_MESSAGE_PASSING() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_MONOTONIC_CLOCK -1
     * }
     */
    public static int _POSIX_MONOTONIC_CLOCK() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_NO_TRUNC 200112
     * }
     */
    public static long _POSIX_NO_TRUNC() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_PRIORITIZED_IO -1
     * }
     */
    public static int _POSIX_PRIORITIZED_IO() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_PRIORITY_SCHEDULING -1
     * }
     */
    public static int _POSIX_PRIORITY_SCHEDULING() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_RAW_SOCKETS -1
     * }
     */
    public static int _POSIX_RAW_SOCKETS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_READER_WRITER_LOCKS 200112
     * }
     */
    public static long _POSIX_READER_WRITER_LOCKS() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_REALTIME_SIGNALS -1
     * }
     */
    public static int _POSIX_REALTIME_SIGNALS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_REGEXP 200112
     * }
     */
    public static long _POSIX_REGEXP() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SAVED_IDS 200112
     * }
     */
    public static long _POSIX_SAVED_IDS() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SEMAPHORES -1
     * }
     */
    public static int _POSIX_SEMAPHORES() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SHARED_MEMORY_OBJECTS -1
     * }
     */
    public static int _POSIX_SHARED_MEMORY_OBJECTS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SHELL 200112
     * }
     */
    public static long _POSIX_SHELL() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SPAWN 200112
     * }
     */
    public static long _POSIX_SPAWN() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SPIN_LOCKS -1
     * }
     */
    public static int _POSIX_SPIN_LOCKS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SPORADIC_SERVER -1
     * }
     */
    public static int _POSIX_SPORADIC_SERVER() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_SYNCHRONIZED_IO -1
     * }
     */
    public static int _POSIX_SYNCHRONIZED_IO() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_ATTR_STACKADDR 200112
     * }
     */
    public static long _POSIX_THREAD_ATTR_STACKADDR() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_ATTR_STACKSIZE 200112
     * }
     */
    public static long _POSIX_THREAD_ATTR_STACKSIZE() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_CPUTIME -1
     * }
     */
    public static int _POSIX_THREAD_CPUTIME() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_PRIO_INHERIT -1
     * }
     */
    public static int _POSIX_THREAD_PRIO_INHERIT() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_PRIO_PROTECT -1
     * }
     */
    public static int _POSIX_THREAD_PRIO_PROTECT() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_PRIORITY_SCHEDULING -1
     * }
     */
    public static int _POSIX_THREAD_PRIORITY_SCHEDULING() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_PROCESS_SHARED 200112
     * }
     */
    public static long _POSIX_THREAD_PROCESS_SHARED() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_SAFE_FUNCTIONS 200112
     * }
     */
    public static long _POSIX_THREAD_SAFE_FUNCTIONS() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREAD_SPORADIC_SERVER -1
     * }
     */
    public static int _POSIX_THREAD_SPORADIC_SERVER() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_THREADS 200112
     * }
     */
    public static long _POSIX_THREADS() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TIMEOUTS -1
     * }
     */
    public static int _POSIX_TIMEOUTS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TIMERS -1
     * }
     */
    public static int _POSIX_TIMERS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TRACE -1
     * }
     */
    public static int _POSIX_TRACE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TRACE_EVENT_FILTER -1
     * }
     */
    public static int _POSIX_TRACE_EVENT_FILTER() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TRACE_INHERIT -1
     * }
     */
    public static int _POSIX_TRACE_INHERIT() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TRACE_LOG -1
     * }
     */
    public static int _POSIX_TRACE_LOG() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_TYPED_MEMORY_OBJECTS -1
     * }
     */
    public static int _POSIX_TYPED_MEMORY_OBJECTS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_C_BIND 200112
     * }
     */
    public static long _POSIX2_C_BIND() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_C_DEV 200112
     * }
     */
    public static long _POSIX2_C_DEV() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_CHAR_TERM 200112
     * }
     */
    public static long _POSIX2_CHAR_TERM() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_FORT_DEV -1
     * }
     */
    public static int _POSIX2_FORT_DEV() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_FORT_RUN 200112
     * }
     */
    public static long _POSIX2_FORT_RUN() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_LOCALEDEF 200112
     * }
     */
    public static long _POSIX2_LOCALEDEF() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_PBS -1
     * }
     */
    public static int _POSIX2_PBS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_PBS_ACCOUNTING -1
     * }
     */
    public static int _POSIX2_PBS_ACCOUNTING() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_PBS_CHECKPOINT -1
     * }
     */
    public static int _POSIX2_PBS_CHECKPOINT() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_PBS_LOCATE -1
     * }
     */
    public static int _POSIX2_PBS_LOCATE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_PBS_MESSAGE -1
     * }
     */
    public static int _POSIX2_PBS_MESSAGE() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_PBS_TRACK -1
     * }
     */
    public static int _POSIX2_PBS_TRACK() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_SW_DEV 200112
     * }
     */
    public static long _POSIX2_SW_DEV() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define _POSIX2_UPE 200112
     * }
     */
    public static long _POSIX2_UPE() {
        return 200112L;
    }
    /**
     * {@snippet :
     * #define __ILP32_OFF32 -1
     * }
     */
    public static int __ILP32_OFF32() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define __ILP32_OFFBIG -1
     * }
     */
    public static int __ILP32_OFFBIG() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define __LP64_OFF64 1
     * }
     */
    public static int __LP64_OFF64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __LPBIG_OFFBIG 1
     * }
     */
    public static int __LPBIG_OFFBIG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V6_ILP32_OFF32 -1
     * }
     */
    public static int _POSIX_V6_ILP32_OFF32() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V6_ILP32_OFFBIG -1
     * }
     */
    public static int _POSIX_V6_ILP32_OFFBIG() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V6_LP64_OFF64 1
     * }
     */
    public static int _POSIX_V6_LP64_OFF64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V6_LPBIG_OFFBIG 1
     * }
     */
    public static int _POSIX_V6_LPBIG_OFFBIG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V7_ILP32_OFF32 -1
     * }
     */
    public static int _POSIX_V7_ILP32_OFF32() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V7_ILP32_OFFBIG -1
     * }
     */
    public static int _POSIX_V7_ILP32_OFFBIG() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V7_LP64_OFF64 1
     * }
     */
    public static int _POSIX_V7_LP64_OFF64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _POSIX_V7_LPBIG_OFFBIG 1
     * }
     */
    public static int _POSIX_V7_LPBIG_OFFBIG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _V6_ILP32_OFF32 -1
     * }
     */
    public static int _V6_ILP32_OFF32() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _V6_ILP32_OFFBIG -1
     * }
     */
    public static int _V6_ILP32_OFFBIG() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _V6_LP64_OFF64 1
     * }
     */
    public static int _V6_LP64_OFF64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _V6_LPBIG_OFFBIG 1
     * }
     */
    public static int _V6_LPBIG_OFFBIG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _XBS5_ILP32_OFF32 -1
     * }
     */
    public static int _XBS5_ILP32_OFF32() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _XBS5_ILP32_OFFBIG -1
     * }
     */
    public static int _XBS5_ILP32_OFFBIG() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _XBS5_LP64_OFF64 1
     * }
     */
    public static int _XBS5_LP64_OFF64() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _XBS5_LPBIG_OFFBIG 1
     * }
     */
    public static int _XBS5_LPBIG_OFFBIG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_CRYPT 1
     * }
     */
    public static int _XOPEN_CRYPT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_ENH_I18N 1
     * }
     */
    public static int _XOPEN_ENH_I18N() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_LEGACY -1
     * }
     */
    public static int _XOPEN_LEGACY() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_REALTIME -1
     * }
     */
    public static int _XOPEN_REALTIME() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_REALTIME_THREADS -1
     * }
     */
    public static int _XOPEN_REALTIME_THREADS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_SHM 1
     * }
     */
    public static int _XOPEN_SHM() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_STREAMS -1
     * }
     */
    public static int _XOPEN_STREAMS() {
        return (int)-1L;
    }
    /**
     * {@snippet :
     * #define _XOPEN_UNIX 1
     * }
     */
    public static int _XOPEN_UNIX() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _SC_PAGE_SIZE 29
     * }
     */
    public static int _SC_PAGE_SIZE() {
        return (int)29L;
    }
    /**
     * {@snippet :
     * #define __DARWIN_NFDBITS 32
     * }
     */
    public static long __DARWIN_NFDBITS() {
        return 32L;
    }
    /**
     * {@snippet :
     * #define FD_SETSIZE 1024
     * }
     */
    public static int FD_SETSIZE() {
        return (int)1024L;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_VERSION_ONLY_STRING "3.5.0"
     * }
     */
    public static MemorySegment ARCHIVE_VERSION_ONLY_STRING() {
        return constants$176.const$3;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_VERSION_STRING "libarchive 3.5.0"
     * }
     */
    public static MemorySegment ARCHIVE_VERSION_STRING() {
        return constants$176.const$4;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_RETRY -10
     * }
     */
    public static int ARCHIVE_RETRY() {
        return (int)-10L;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_WARN -20
     * }
     */
    public static int ARCHIVE_WARN() {
        return (int)-20L;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_FAILED -25
     * }
     */
    public static int ARCHIVE_FAILED() {
        return (int)-25L;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_FATAL -30
     * }
     */
    public static int ARCHIVE_FATAL() {
        return (int)-30L;
    }
    /**
     * {@snippet :
     * #define ARCHIVE_COMPRESSION_NONE 0
     * }
     */
    public static int ARCHIVE_COMPRESSION_NONE() {
        return (int)0L;
    }
}


